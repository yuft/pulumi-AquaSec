# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetPermissionsSetsResult',
    'AwaitableGetPermissionsSetsResult',
    'get_permissions_sets',
]

@pulumi.output_type
class GetPermissionsSetsResult:
    """
    A collection of values returned by getPermissionsSets.
    """
    def __init__(__self__, id=None, permissions_sets=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if permissions_sets and not isinstance(permissions_sets, list):
            raise TypeError("Expected argument 'permissions_sets' to be a list")
        pulumi.set(__self__, "permissions_sets", permissions_sets)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="permissionsSets")
    def permissions_sets(self) -> Sequence['outputs.GetPermissionsSetsPermissionsSetResult']:
        return pulumi.get(self, "permissions_sets")


class AwaitableGetPermissionsSetsResult(GetPermissionsSetsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPermissionsSetsResult(
            id=self.id,
            permissions_sets=self.permissions_sets)


def get_permissions_sets(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPermissionsSetsResult:
    """
    The data source `PermissionsSets` provides a method to query all permissions within the Aqua CSPMThe fields returned from this query are detailed in the Schema section below.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_aquasec as aquasec

    testpermissionsset = aquasec.get_permissions_sets()
    pulumi.export("permissionsSets", testpermissionsset)
    pulumi.export("permissionsSetsNames", [[__item.name for __item in [__item.permissions_sets]] for __item in [testpermissionsset]])
    ```
    """
    __args__ = dict()
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('aquasec:index/getPermissionsSets:getPermissionsSets', __args__, opts=opts, typ=GetPermissionsSetsResult).value

    return AwaitableGetPermissionsSetsResult(
        id=__ret__.id,
        permissions_sets=__ret__.permissions_sets)
