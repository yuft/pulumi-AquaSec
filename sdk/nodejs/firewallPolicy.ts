// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export class FirewallPolicy extends pulumi.CustomResource {
    /**
     * Get an existing FirewallPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallPolicyState, opts?: pulumi.CustomResourceOptions): FirewallPolicy {
        return new FirewallPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aquasec:index/firewallPolicy:FirewallPolicy';

    /**
     * Returns true if the given object is an instance of FirewallPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallPolicy.__pulumiType;
    }

    /**
     * Username of the account that created the policy.
     */
    public /*out*/ readonly author!: pulumi.Output<string>;
    /**
     * Indicates whether policy includes blocking incoming 'ping' requests.
     */
    public readonly blockIcmpPing!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates whether policy includes blocking metadata services of the cloud.
     */
    public readonly blockMetadataService!: pulumi.Output<boolean | undefined>;
    /**
     * Description of the Firewall Policy.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Information on network addresses that are allowed to pass in data or requests.
     */
    public readonly inboundNetworks!: pulumi.Output<outputs.FirewallPolicyInboundNetwork[] | undefined>;
    /**
     * Timestamp of the last update in Unix time format.
     */
    public /*out*/ readonly lastupdate!: pulumi.Output<number>;
    /**
     * Name of the policy, no longer than 128 characters and no slash characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Information on network addresses that are allowed to receive data or requests.
     */
    public readonly outboundNetworks!: pulumi.Output<outputs.FirewallPolicyOutboundNetwork[] | undefined>;
    /**
     * Indicates the class of protection defined by the firewall.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Aqua version functionality supported
     */
    public readonly version!: pulumi.Output<string>;

    /**
     * Create a FirewallPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FirewallPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallPolicyArgs | FirewallPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallPolicyState | undefined;
            resourceInputs["author"] = state ? state.author : undefined;
            resourceInputs["blockIcmpPing"] = state ? state.blockIcmpPing : undefined;
            resourceInputs["blockMetadataService"] = state ? state.blockMetadataService : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["inboundNetworks"] = state ? state.inboundNetworks : undefined;
            resourceInputs["lastupdate"] = state ? state.lastupdate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["outboundNetworks"] = state ? state.outboundNetworks : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as FirewallPolicyArgs | undefined;
            resourceInputs["blockIcmpPing"] = args ? args.blockIcmpPing : undefined;
            resourceInputs["blockMetadataService"] = args ? args.blockMetadataService : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["inboundNetworks"] = args ? args.inboundNetworks : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["outboundNetworks"] = args ? args.outboundNetworks : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["author"] = undefined /*out*/;
            resourceInputs["lastupdate"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallPolicy resources.
 */
export interface FirewallPolicyState {
    /**
     * Username of the account that created the policy.
     */
    author?: pulumi.Input<string>;
    /**
     * Indicates whether policy includes blocking incoming 'ping' requests.
     */
    blockIcmpPing?: pulumi.Input<boolean>;
    /**
     * Indicates whether policy includes blocking metadata services of the cloud.
     */
    blockMetadataService?: pulumi.Input<boolean>;
    /**
     * Description of the Firewall Policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Information on network addresses that are allowed to pass in data or requests.
     */
    inboundNetworks?: pulumi.Input<pulumi.Input<inputs.FirewallPolicyInboundNetwork>[]>;
    /**
     * Timestamp of the last update in Unix time format.
     */
    lastupdate?: pulumi.Input<number>;
    /**
     * Name of the policy, no longer than 128 characters and no slash characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Information on network addresses that are allowed to receive data or requests.
     */
    outboundNetworks?: pulumi.Input<pulumi.Input<inputs.FirewallPolicyOutboundNetwork>[]>;
    /**
     * Indicates the class of protection defined by the firewall.
     */
    type?: pulumi.Input<string>;
    /**
     * Aqua version functionality supported
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallPolicy resource.
 */
export interface FirewallPolicyArgs {
    /**
     * Indicates whether policy includes blocking incoming 'ping' requests.
     */
    blockIcmpPing?: pulumi.Input<boolean>;
    /**
     * Indicates whether policy includes blocking metadata services of the cloud.
     */
    blockMetadataService?: pulumi.Input<boolean>;
    /**
     * Description of the Firewall Policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Information on network addresses that are allowed to pass in data or requests.
     */
    inboundNetworks?: pulumi.Input<pulumi.Input<inputs.FirewallPolicyInboundNetwork>[]>;
    /**
     * Name of the policy, no longer than 128 characters and no slash characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Information on network addresses that are allowed to receive data or requests.
     */
    outboundNetworks?: pulumi.Input<pulumi.Input<inputs.FirewallPolicyOutboundNetwork>[]>;
    /**
     * Indicates the class of protection defined by the firewall.
     */
    type?: pulumi.Input<string>;
    /**
     * Aqua version functionality supported
     */
    version?: pulumi.Input<string>;
}
