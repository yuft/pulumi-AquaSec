// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getEnforcerGroups(args: GetEnforcerGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetEnforcerGroupsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aquasec:index/getEnforcerGroups:getEnforcerGroups", {
        "groupId": args.groupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEnforcerGroups.
 */
export interface GetEnforcerGroupsArgs {
    groupId: string;
}

/**
 * A collection of values returned by getEnforcerGroups.
 */
export interface GetEnforcerGroupsResult {
    readonly admissionControl: boolean;
    readonly allowKubeEnforcerAudit: boolean;
    readonly allowedApplications: string[];
    readonly allowedLabels: string[];
    readonly allowedRegistries: string[];
    readonly antivirusProtection: boolean;
    readonly aquaVersion: string;
    readonly auditAll: boolean;
    readonly autoCopySecrets: boolean;
    readonly autoDiscoverConfigureRegistries: boolean;
    readonly autoDiscoveryEnabled: boolean;
    readonly autoScanDiscoveredImagesRunningContainers: boolean;
    readonly behavioralEngine: boolean;
    readonly blockAdmissionControl: boolean;
    readonly commands: outputs.GetEnforcerGroupsCommand[];
    readonly connectedCount: number;
    readonly containerActivityProtection: boolean;
    readonly containerAntivirusProtection: boolean;
    readonly description: string;
    readonly disconnectedCount: number;
    readonly enforce: boolean;
    readonly enforcerImageName: string;
    readonly gatewayAddress: string;
    readonly gatewayName: string;
    readonly gateways: string[];
    readonly groupId: string;
    readonly highVulns: number;
    readonly hostAssurance: boolean;
    readonly hostBehavioralEngine: boolean;
    readonly hostNetworkProtection: boolean;
    readonly hostOs: string;
    readonly hostProtection: boolean;
    readonly hostUserProtection: boolean;
    readonly hostsCount: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly imageAssurance: boolean;
    readonly installCommand: string;
    readonly kubeBenchImageName: string;
    readonly lastUpdate: number;
    readonly logicalName: string;
    readonly lowVulns: number;
    readonly medVulns: number;
    readonly microEnforcerCertsSecretsName: string;
    readonly microEnforcerImageName: string;
    readonly microEnforcerInjection: boolean;
    readonly microEnforcerSecretsName: string;
    readonly negVulns: number;
    readonly networkActivityProtection: boolean;
    readonly networkProtection: boolean;
    readonly orchestrators: outputs.GetEnforcerGroupsOrchestrator[];
    readonly pasDeploymentLink: string;
    readonly permission: string;
    readonly riskExplorerAutoDiscovery: boolean;
    readonly runtimePolicyName: string;
    readonly runtimeType: string;
    readonly syncHostImages: boolean;
    readonly syscallEnabled: boolean;
    readonly token: string;
    readonly type: string;
    readonly userAccessControl: boolean;
}

export function getEnforcerGroupsOutput(args: GetEnforcerGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnforcerGroupsResult> {
    return pulumi.output(args).apply(a => getEnforcerGroups(a, opts))
}

/**
 * A collection of arguments for invoking getEnforcerGroups.
 */
export interface GetEnforcerGroupsOutputArgs {
    groupId: pulumi.Input<string>;
}
