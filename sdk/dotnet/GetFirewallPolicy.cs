// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aquasec
{
    public static class GetFirewallPolicy
    {
        public static Task<GetFirewallPolicyResult> InvokeAsync(GetFirewallPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFirewallPolicyResult>("aquasec:index/getFirewallPolicy:getFirewallPolicy", args ?? new GetFirewallPolicyArgs(), options.WithDefaults());

        public static Output<GetFirewallPolicyResult> Invoke(GetFirewallPolicyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFirewallPolicyResult>("aquasec:index/getFirewallPolicy:getFirewallPolicy", args ?? new GetFirewallPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFirewallPolicyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the policy, no longer than 128 characters and no slash characters.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("outboundNetworks")]
        private List<Inputs.GetFirewallPolicyOutboundNetworkArgs>? _outboundNetworks;

        /// <summary>
        /// Information on network addresses that are allowed to receive data or requests.
        /// </summary>
        public List<Inputs.GetFirewallPolicyOutboundNetworkArgs> OutboundNetworks
        {
            get => _outboundNetworks ?? (_outboundNetworks = new List<Inputs.GetFirewallPolicyOutboundNetworkArgs>());
            set => _outboundNetworks = value;
        }

        public GetFirewallPolicyArgs()
        {
        }
    }

    public sealed class GetFirewallPolicyInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the policy, no longer than 128 characters and no slash characters.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("outboundNetworks")]
        private InputList<Inputs.GetFirewallPolicyOutboundNetworkInputArgs>? _outboundNetworks;

        /// <summary>
        /// Information on network addresses that are allowed to receive data or requests.
        /// </summary>
        public InputList<Inputs.GetFirewallPolicyOutboundNetworkInputArgs> OutboundNetworks
        {
            get => _outboundNetworks ?? (_outboundNetworks = new InputList<Inputs.GetFirewallPolicyOutboundNetworkInputArgs>());
            set => _outboundNetworks = value;
        }

        public GetFirewallPolicyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetFirewallPolicyResult
    {
        /// <summary>
        /// Username of the account that created the policy.
        /// </summary>
        public readonly string Author;
        /// <summary>
        /// Indicates whether policy includes blocking incoming 'ping' requests.
        /// </summary>
        public readonly bool BlockIcmpPing;
        /// <summary>
        /// Indicates whether policy includes blocking metadata services of the cloud.
        /// </summary>
        public readonly bool BlockMetadataService;
        /// <summary>
        /// Description of the Firewall Policy.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Information on network addresses that are allowed to pass in data or requests.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFirewallPolicyInboundNetworkResult> InboundNetworks;
        /// <summary>
        /// Timestamp of the last update in Unix time format.
        /// </summary>
        public readonly int Lastupdate;
        /// <summary>
        /// Name of the policy, no longer than 128 characters and no slash characters.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Information on network addresses that are allowed to receive data or requests.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFirewallPolicyOutboundNetworkResult> OutboundNetworks;
        /// <summary>
        /// Indicates the class of protection defined by the firewall.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Aqua version functionality supported
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetFirewallPolicyResult(
            string author,

            bool blockIcmpPing,

            bool blockMetadataService,

            string description,

            string id,

            ImmutableArray<Outputs.GetFirewallPolicyInboundNetworkResult> inboundNetworks,

            int lastupdate,

            string name,

            ImmutableArray<Outputs.GetFirewallPolicyOutboundNetworkResult> outboundNetworks,

            string type,

            string version)
        {
            Author = author;
            BlockIcmpPing = blockIcmpPing;
            BlockMetadataService = blockMetadataService;
            Description = description;
            Id = id;
            InboundNetworks = inboundNetworks;
            Lastupdate = lastupdate;
            Name = name;
            OutboundNetworks = outboundNetworks;
            Type = type;
            Version = version;
        }
    }
}
