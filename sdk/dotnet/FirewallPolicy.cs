// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aquasec
{
    [AquasecResourceType("aquasec:index/firewallPolicy:FirewallPolicy")]
    public partial class FirewallPolicy : Pulumi.CustomResource
    {
        /// <summary>
        /// Username of the account that created the policy.
        /// </summary>
        [Output("author")]
        public Output<string> Author { get; private set; } = null!;

        /// <summary>
        /// Indicates whether policy includes blocking incoming 'ping' requests.
        /// </summary>
        [Output("blockIcmpPing")]
        public Output<bool?> BlockIcmpPing { get; private set; } = null!;

        /// <summary>
        /// Indicates whether policy includes blocking metadata services of the cloud.
        /// </summary>
        [Output("blockMetadataService")]
        public Output<bool?> BlockMetadataService { get; private set; } = null!;

        /// <summary>
        /// Description of the Firewall Policy.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Information on network addresses that are allowed to pass in data or requests.
        /// </summary>
        [Output("inboundNetworks")]
        public Output<ImmutableArray<Outputs.FirewallPolicyInboundNetwork>> InboundNetworks { get; private set; } = null!;

        /// <summary>
        /// Timestamp of the last update in Unix time format.
        /// </summary>
        [Output("lastupdate")]
        public Output<int> Lastupdate { get; private set; } = null!;

        /// <summary>
        /// Name of the policy, no longer than 128 characters and no slash characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Information on network addresses that are allowed to receive data or requests.
        /// </summary>
        [Output("outboundNetworks")]
        public Output<ImmutableArray<Outputs.FirewallPolicyOutboundNetwork>> OutboundNetworks { get; private set; } = null!;

        /// <summary>
        /// Indicates the class of protection defined by the firewall.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Aqua version functionality supported
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a FirewallPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FirewallPolicy(string name, FirewallPolicyArgs? args = null, CustomResourceOptions? options = null)
            : base("aquasec:index/firewallPolicy:FirewallPolicy", name, args ?? new FirewallPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FirewallPolicy(string name, Input<string> id, FirewallPolicyState? state = null, CustomResourceOptions? options = null)
            : base("aquasec:index/firewallPolicy:FirewallPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FirewallPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FirewallPolicy Get(string name, Input<string> id, FirewallPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new FirewallPolicy(name, id, state, options);
        }
    }

    public sealed class FirewallPolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether policy includes blocking incoming 'ping' requests.
        /// </summary>
        [Input("blockIcmpPing")]
        public Input<bool>? BlockIcmpPing { get; set; }

        /// <summary>
        /// Indicates whether policy includes blocking metadata services of the cloud.
        /// </summary>
        [Input("blockMetadataService")]
        public Input<bool>? BlockMetadataService { get; set; }

        /// <summary>
        /// Description of the Firewall Policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("inboundNetworks")]
        private InputList<Inputs.FirewallPolicyInboundNetworkArgs>? _inboundNetworks;

        /// <summary>
        /// Information on network addresses that are allowed to pass in data or requests.
        /// </summary>
        public InputList<Inputs.FirewallPolicyInboundNetworkArgs> InboundNetworks
        {
            get => _inboundNetworks ?? (_inboundNetworks = new InputList<Inputs.FirewallPolicyInboundNetworkArgs>());
            set => _inboundNetworks = value;
        }

        /// <summary>
        /// Name of the policy, no longer than 128 characters and no slash characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("outboundNetworks")]
        private InputList<Inputs.FirewallPolicyOutboundNetworkArgs>? _outboundNetworks;

        /// <summary>
        /// Information on network addresses that are allowed to receive data or requests.
        /// </summary>
        public InputList<Inputs.FirewallPolicyOutboundNetworkArgs> OutboundNetworks
        {
            get => _outboundNetworks ?? (_outboundNetworks = new InputList<Inputs.FirewallPolicyOutboundNetworkArgs>());
            set => _outboundNetworks = value;
        }

        /// <summary>
        /// Indicates the class of protection defined by the firewall.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Aqua version functionality supported
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public FirewallPolicyArgs()
        {
        }
    }

    public sealed class FirewallPolicyState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Username of the account that created the policy.
        /// </summary>
        [Input("author")]
        public Input<string>? Author { get; set; }

        /// <summary>
        /// Indicates whether policy includes blocking incoming 'ping' requests.
        /// </summary>
        [Input("blockIcmpPing")]
        public Input<bool>? BlockIcmpPing { get; set; }

        /// <summary>
        /// Indicates whether policy includes blocking metadata services of the cloud.
        /// </summary>
        [Input("blockMetadataService")]
        public Input<bool>? BlockMetadataService { get; set; }

        /// <summary>
        /// Description of the Firewall Policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("inboundNetworks")]
        private InputList<Inputs.FirewallPolicyInboundNetworkGetArgs>? _inboundNetworks;

        /// <summary>
        /// Information on network addresses that are allowed to pass in data or requests.
        /// </summary>
        public InputList<Inputs.FirewallPolicyInboundNetworkGetArgs> InboundNetworks
        {
            get => _inboundNetworks ?? (_inboundNetworks = new InputList<Inputs.FirewallPolicyInboundNetworkGetArgs>());
            set => _inboundNetworks = value;
        }

        /// <summary>
        /// Timestamp of the last update in Unix time format.
        /// </summary>
        [Input("lastupdate")]
        public Input<int>? Lastupdate { get; set; }

        /// <summary>
        /// Name of the policy, no longer than 128 characters and no slash characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("outboundNetworks")]
        private InputList<Inputs.FirewallPolicyOutboundNetworkGetArgs>? _outboundNetworks;

        /// <summary>
        /// Information on network addresses that are allowed to receive data or requests.
        /// </summary>
        public InputList<Inputs.FirewallPolicyOutboundNetworkGetArgs> OutboundNetworks
        {
            get => _outboundNetworks ?? (_outboundNetworks = new InputList<Inputs.FirewallPolicyOutboundNetworkGetArgs>());
            set => _outboundNetworks = value;
        }

        /// <summary>
        /// Indicates the class of protection defined by the firewall.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Aqua version functionality supported
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public FirewallPolicyState()
        {
        }
    }
}
