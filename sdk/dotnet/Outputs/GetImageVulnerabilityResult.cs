// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aquasec.Outputs
{

    [OutputType]
    public sealed class GetImageVulnerabilityResult
    {
        public readonly string AckAuthor;
        public readonly string AckComment;
        public readonly string AckExpirationConfiguredAt;
        public readonly string AckExpirationConfiguredBy;
        public readonly int AckExpirationDays;
        public readonly string AckScope;
        public readonly string AcknowledgeDate;
        public readonly string AncestorPkg;
        public readonly double AquaScore;
        public readonly string AquaScoreClassification;
        public readonly string AquaScoringSystem;
        public readonly string AquaSeverity;
        public readonly string AquaSeverityClassification;
        public readonly string AquaVectors;
        public readonly int AuditEventsCount;
        public readonly int BlockEventsCount;
        public readonly string Classification;
        public readonly string Description;
        /// <summary>
        /// The content digest of the image.
        /// </summary>
        public readonly string Digest;
        public readonly string ExploitReference;
        public readonly string ExploitType;
        public readonly string FirstFoundDate;
        public readonly string FixVersion;
        public readonly string ImageName;
        public readonly string LastFoundDate;
        public readonly string ModificationDate;
        /// <summary>
        /// The name of the image.
        /// </summary>
        public readonly string Name;
        public readonly double NvdCvss2Score;
        public readonly string NvdCvss2Vectors;
        public readonly double NvdCvss3Score;
        public readonly string NvdCvss3Severity;
        public readonly string NvdCvss3Vectors;
        public readonly string NvdSeverity;
        public readonly string NvdUrl;
        /// <summary>
        /// The operating system detected in the image
        /// </summary>
        public readonly string Os;
        /// <summary>
        /// The version of the OS detected in the image.
        /// </summary>
        public readonly string OsVersion;
        /// <summary>
        /// Permission of the image.
        /// </summary>
        public readonly string Permission;
        public readonly string PublishDate;
        /// <summary>
        /// The name of the registry where the image is stored.
        /// </summary>
        public readonly string Registry;
        /// <summary>
        /// The name of the image's repository.
        /// </summary>
        public readonly string Repository;
        public readonly string ResourceArchitecture;
        public readonly string ResourceCpe;
        public readonly string ResourceFormat;
        public readonly string ResourceHash;
        public readonly ImmutableArray<string> ResourceLicenses;
        public readonly string ResourceName;
        public readonly string ResourcePath;
        public readonly string ResourceType;
        public readonly string ResourceVersion;
        public readonly string SeverityClassification;
        public readonly string Solution;
        public readonly string TemporalVector;
        public readonly string VPatchAppliedBy;
        public readonly string VPatchAppliedOn;
        public readonly string VPatchEnforcedBy;
        public readonly string VPatchEnforcedOn;
        public readonly bool VPatchPolicyEnforce;
        public readonly string VPatchPolicyName;
        public readonly string VPatchRevertedBy;
        public readonly string VPatchRevertedOn;
        public readonly string VPatchStatus;
        public readonly double VendorCvss2Score;
        public readonly string VendorCvss2Vectors;
        public readonly string VendorSeverity;
        public readonly string VendorStatement;
        public readonly string VendorUrl;

        [OutputConstructor]
        private GetImageVulnerabilityResult(
            string ackAuthor,

            string ackComment,

            string ackExpirationConfiguredAt,

            string ackExpirationConfiguredBy,

            int ackExpirationDays,

            string ackScope,

            string acknowledgeDate,

            string ancestorPkg,

            double aquaScore,

            string aquaScoreClassification,

            string aquaScoringSystem,

            string aquaSeverity,

            string aquaSeverityClassification,

            string aquaVectors,

            int auditEventsCount,

            int blockEventsCount,

            string classification,

            string description,

            string digest,

            string exploitReference,

            string exploitType,

            string firstFoundDate,

            string fixVersion,

            string imageName,

            string lastFoundDate,

            string modificationDate,

            string name,

            double nvdCvss2Score,

            string nvdCvss2Vectors,

            double nvdCvss3Score,

            string nvdCvss3Severity,

            string nvdCvss3Vectors,

            string nvdSeverity,

            string nvdUrl,

            string os,

            string osVersion,

            string permission,

            string publishDate,

            string registry,

            string repository,

            string resourceArchitecture,

            string resourceCpe,

            string resourceFormat,

            string resourceHash,

            ImmutableArray<string> resourceLicenses,

            string resourceName,

            string resourcePath,

            string resourceType,

            string resourceVersion,

            string severityClassification,

            string solution,

            string temporalVector,

            string vPatchAppliedBy,

            string vPatchAppliedOn,

            string vPatchEnforcedBy,

            string vPatchEnforcedOn,

            bool vPatchPolicyEnforce,

            string vPatchPolicyName,

            string vPatchRevertedBy,

            string vPatchRevertedOn,

            string vPatchStatus,

            double vendorCvss2Score,

            string vendorCvss2Vectors,

            string vendorSeverity,

            string vendorStatement,

            string vendorUrl)
        {
            AckAuthor = ackAuthor;
            AckComment = ackComment;
            AckExpirationConfiguredAt = ackExpirationConfiguredAt;
            AckExpirationConfiguredBy = ackExpirationConfiguredBy;
            AckExpirationDays = ackExpirationDays;
            AckScope = ackScope;
            AcknowledgeDate = acknowledgeDate;
            AncestorPkg = ancestorPkg;
            AquaScore = aquaScore;
            AquaScoreClassification = aquaScoreClassification;
            AquaScoringSystem = aquaScoringSystem;
            AquaSeverity = aquaSeverity;
            AquaSeverityClassification = aquaSeverityClassification;
            AquaVectors = aquaVectors;
            AuditEventsCount = auditEventsCount;
            BlockEventsCount = blockEventsCount;
            Classification = classification;
            Description = description;
            Digest = digest;
            ExploitReference = exploitReference;
            ExploitType = exploitType;
            FirstFoundDate = firstFoundDate;
            FixVersion = fixVersion;
            ImageName = imageName;
            LastFoundDate = lastFoundDate;
            ModificationDate = modificationDate;
            Name = name;
            NvdCvss2Score = nvdCvss2Score;
            NvdCvss2Vectors = nvdCvss2Vectors;
            NvdCvss3Score = nvdCvss3Score;
            NvdCvss3Severity = nvdCvss3Severity;
            NvdCvss3Vectors = nvdCvss3Vectors;
            NvdSeverity = nvdSeverity;
            NvdUrl = nvdUrl;
            Os = os;
            OsVersion = osVersion;
            Permission = permission;
            PublishDate = publishDate;
            Registry = registry;
            Repository = repository;
            ResourceArchitecture = resourceArchitecture;
            ResourceCpe = resourceCpe;
            ResourceFormat = resourceFormat;
            ResourceHash = resourceHash;
            ResourceLicenses = resourceLicenses;
            ResourceName = resourceName;
            ResourcePath = resourcePath;
            ResourceType = resourceType;
            ResourceVersion = resourceVersion;
            SeverityClassification = severityClassification;
            Solution = solution;
            TemporalVector = temporalVector;
            VPatchAppliedBy = vPatchAppliedBy;
            VPatchAppliedOn = vPatchAppliedOn;
            VPatchEnforcedBy = vPatchEnforcedBy;
            VPatchEnforcedOn = vPatchEnforcedOn;
            VPatchPolicyEnforce = vPatchPolicyEnforce;
            VPatchPolicyName = vPatchPolicyName;
            VPatchRevertedBy = vPatchRevertedBy;
            VPatchRevertedOn = vPatchRevertedOn;
            VPatchStatus = vPatchStatus;
            VendorCvss2Score = vendorCvss2Score;
            VendorCvss2Vectors = vendorCvss2Vectors;
            VendorSeverity = vendorSeverity;
            VendorStatement = vendorStatement;
            VendorUrl = vendorUrl;
        }
    }
}
