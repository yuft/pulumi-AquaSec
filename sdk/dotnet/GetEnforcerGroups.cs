// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aquasec
{
    public static class GetEnforcerGroups
    {
        public static Task<GetEnforcerGroupsResult> InvokeAsync(GetEnforcerGroupsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEnforcerGroupsResult>("aquasec:index/getEnforcerGroups:getEnforcerGroups", args ?? new GetEnforcerGroupsArgs(), options.WithDefaults());

        public static Output<GetEnforcerGroupsResult> Invoke(GetEnforcerGroupsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetEnforcerGroupsResult>("aquasec:index/getEnforcerGroups:getEnforcerGroups", args ?? new GetEnforcerGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEnforcerGroupsArgs : Pulumi.InvokeArgs
    {
        [Input("groupId", required: true)]
        public string GroupId { get; set; } = null!;

        public GetEnforcerGroupsArgs()
        {
        }
    }

    public sealed class GetEnforcerGroupsInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        public GetEnforcerGroupsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetEnforcerGroupsResult
    {
        public readonly bool AdmissionControl;
        public readonly bool AllowKubeEnforcerAudit;
        public readonly ImmutableArray<string> AllowedApplications;
        public readonly ImmutableArray<string> AllowedLabels;
        public readonly ImmutableArray<string> AllowedRegistries;
        public readonly bool AntivirusProtection;
        public readonly string AquaVersion;
        public readonly bool AuditAll;
        public readonly bool AutoCopySecrets;
        public readonly bool AutoDiscoverConfigureRegistries;
        public readonly bool AutoDiscoveryEnabled;
        public readonly bool AutoScanDiscoveredImagesRunningContainers;
        public readonly bool BehavioralEngine;
        public readonly bool BlockAdmissionControl;
        public readonly ImmutableArray<Outputs.GetEnforcerGroupsCommandResult> Commands;
        public readonly int ConnectedCount;
        public readonly bool ContainerActivityProtection;
        public readonly bool ContainerAntivirusProtection;
        public readonly string Description;
        public readonly int DisconnectedCount;
        public readonly bool Enforce;
        public readonly string EnforcerImageName;
        public readonly string GatewayAddress;
        public readonly string GatewayName;
        public readonly ImmutableArray<string> Gateways;
        public readonly string GroupId;
        public readonly int HighVulns;
        public readonly bool HostAssurance;
        public readonly bool HostBehavioralEngine;
        public readonly bool HostNetworkProtection;
        public readonly string HostOs;
        public readonly bool HostProtection;
        public readonly bool HostUserProtection;
        public readonly int HostsCount;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool ImageAssurance;
        public readonly string InstallCommand;
        public readonly string KubeBenchImageName;
        public readonly int LastUpdate;
        public readonly string LogicalName;
        public readonly int LowVulns;
        public readonly int MedVulns;
        public readonly string MicroEnforcerCertsSecretsName;
        public readonly string MicroEnforcerImageName;
        public readonly bool MicroEnforcerInjection;
        public readonly string MicroEnforcerSecretsName;
        public readonly int NegVulns;
        public readonly bool NetworkActivityProtection;
        public readonly bool NetworkProtection;
        public readonly ImmutableArray<Outputs.GetEnforcerGroupsOrchestratorResult> Orchestrators;
        public readonly string PasDeploymentLink;
        public readonly string Permission;
        public readonly bool RiskExplorerAutoDiscovery;
        public readonly string RuntimePolicyName;
        public readonly string RuntimeType;
        public readonly bool SyncHostImages;
        public readonly bool SyscallEnabled;
        public readonly string Token;
        public readonly string Type;
        public readonly bool UserAccessControl;

        [OutputConstructor]
        private GetEnforcerGroupsResult(
            bool admissionControl,

            bool allowKubeEnforcerAudit,

            ImmutableArray<string> allowedApplications,

            ImmutableArray<string> allowedLabels,

            ImmutableArray<string> allowedRegistries,

            bool antivirusProtection,

            string aquaVersion,

            bool auditAll,

            bool autoCopySecrets,

            bool autoDiscoverConfigureRegistries,

            bool autoDiscoveryEnabled,

            bool autoScanDiscoveredImagesRunningContainers,

            bool behavioralEngine,

            bool blockAdmissionControl,

            ImmutableArray<Outputs.GetEnforcerGroupsCommandResult> commands,

            int connectedCount,

            bool containerActivityProtection,

            bool containerAntivirusProtection,

            string description,

            int disconnectedCount,

            bool enforce,

            string enforcerImageName,

            string gatewayAddress,

            string gatewayName,

            ImmutableArray<string> gateways,

            string groupId,

            int highVulns,

            bool hostAssurance,

            bool hostBehavioralEngine,

            bool hostNetworkProtection,

            string hostOs,

            bool hostProtection,

            bool hostUserProtection,

            int hostsCount,

            string id,

            bool imageAssurance,

            string installCommand,

            string kubeBenchImageName,

            int lastUpdate,

            string logicalName,

            int lowVulns,

            int medVulns,

            string microEnforcerCertsSecretsName,

            string microEnforcerImageName,

            bool microEnforcerInjection,

            string microEnforcerSecretsName,

            int negVulns,

            bool networkActivityProtection,

            bool networkProtection,

            ImmutableArray<Outputs.GetEnforcerGroupsOrchestratorResult> orchestrators,

            string pasDeploymentLink,

            string permission,

            bool riskExplorerAutoDiscovery,

            string runtimePolicyName,

            string runtimeType,

            bool syncHostImages,

            bool syscallEnabled,

            string token,

            string type,

            bool userAccessControl)
        {
            AdmissionControl = admissionControl;
            AllowKubeEnforcerAudit = allowKubeEnforcerAudit;
            AllowedApplications = allowedApplications;
            AllowedLabels = allowedLabels;
            AllowedRegistries = allowedRegistries;
            AntivirusProtection = antivirusProtection;
            AquaVersion = aquaVersion;
            AuditAll = auditAll;
            AutoCopySecrets = autoCopySecrets;
            AutoDiscoverConfigureRegistries = autoDiscoverConfigureRegistries;
            AutoDiscoveryEnabled = autoDiscoveryEnabled;
            AutoScanDiscoveredImagesRunningContainers = autoScanDiscoveredImagesRunningContainers;
            BehavioralEngine = behavioralEngine;
            BlockAdmissionControl = blockAdmissionControl;
            Commands = commands;
            ConnectedCount = connectedCount;
            ContainerActivityProtection = containerActivityProtection;
            ContainerAntivirusProtection = containerAntivirusProtection;
            Description = description;
            DisconnectedCount = disconnectedCount;
            Enforce = enforce;
            EnforcerImageName = enforcerImageName;
            GatewayAddress = gatewayAddress;
            GatewayName = gatewayName;
            Gateways = gateways;
            GroupId = groupId;
            HighVulns = highVulns;
            HostAssurance = hostAssurance;
            HostBehavioralEngine = hostBehavioralEngine;
            HostNetworkProtection = hostNetworkProtection;
            HostOs = hostOs;
            HostProtection = hostProtection;
            HostUserProtection = hostUserProtection;
            HostsCount = hostsCount;
            Id = id;
            ImageAssurance = imageAssurance;
            InstallCommand = installCommand;
            KubeBenchImageName = kubeBenchImageName;
            LastUpdate = lastUpdate;
            LogicalName = logicalName;
            LowVulns = lowVulns;
            MedVulns = medVulns;
            MicroEnforcerCertsSecretsName = microEnforcerCertsSecretsName;
            MicroEnforcerImageName = microEnforcerImageName;
            MicroEnforcerInjection = microEnforcerInjection;
            MicroEnforcerSecretsName = microEnforcerSecretsName;
            NegVulns = negVulns;
            NetworkActivityProtection = networkActivityProtection;
            NetworkProtection = networkProtection;
            Orchestrators = orchestrators;
            PasDeploymentLink = pasDeploymentLink;
            Permission = permission;
            RiskExplorerAutoDiscovery = riskExplorerAutoDiscovery;
            RuntimePolicyName = runtimePolicyName;
            RuntimeType = runtimeType;
            SyncHostImages = syncHostImages;
            SyscallEnabled = syscallEnabled;
            Token = token;
            Type = type;
            UserAccessControl = userAccessControl;
        }
    }
}
