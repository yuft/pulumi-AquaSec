// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aquasec
{
    public static class GetGateways
    {
        /// <summary>
        /// The data source `aquasec.getGateways` provides a method to query all gateways within the Aqua
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aquasec = Pulumi.Aquasec;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var testgateway = Output.Create(Aquasec.GetGateways.InvokeAsync());
        ///         this.GatewayData = testgateway;
        ///         this.GatewayName = testgateway.Apply(testgateway =&gt; testgateway.Gateways?[0]?.Id);
        ///         this.GatewayStatus = testgateway.Apply(testgateway =&gt; testgateway.Gateways?[0]?.Status);
        ///         this.GatewayDescription = testgateway.Apply(testgateway =&gt; testgateway.Gateways?[0]?.Description);
        ///         this.GatewayVersion = testgateway.Apply(testgateway =&gt; testgateway.Gateways?[0]?.Version);
        ///         this.GatewayHostname = testgateway.Apply(testgateway =&gt; testgateway.Gateways?[0]?.Hostname);
        ///         this.GatewayGrpcAddress = testgateway.Apply(testgateway =&gt; testgateway.Gateways?[0]?.GrpcAddress);
        ///     }
        /// 
        ///     [Output("gatewayData")]
        ///     public Output&lt;string&gt; GatewayData { get; set; }
        ///     [Output("gatewayName")]
        ///     public Output&lt;string&gt; GatewayName { get; set; }
        ///     [Output("gatewayStatus")]
        ///     public Output&lt;string&gt; GatewayStatus { get; set; }
        ///     [Output("gatewayDescription")]
        ///     public Output&lt;string&gt; GatewayDescription { get; set; }
        ///     [Output("gatewayVersion")]
        ///     public Output&lt;string&gt; GatewayVersion { get; set; }
        ///     [Output("gatewayHostname")]
        ///     public Output&lt;string&gt; GatewayHostname { get; set; }
        ///     [Output("gatewayGrpcAddress")]
        ///     public Output&lt;string&gt; GatewayGrpcAddress { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGatewaysResult> InvokeAsync(InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGatewaysResult>("aquasec:index/getGateways:getGateways", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetGatewaysResult
    {
        public readonly ImmutableArray<Outputs.GetGatewaysGatewayResult> Gateways;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetGatewaysResult(
            ImmutableArray<Outputs.GetGatewaysGatewayResult> gateways,

            string id)
        {
            Gateways = gateways;
            Id = id;
        }
    }
}
