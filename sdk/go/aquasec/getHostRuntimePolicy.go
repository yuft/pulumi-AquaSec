// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aquasec

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetHostRuntimePolicy(ctx *pulumi.Context, args *GetHostRuntimePolicyArgs, opts ...pulumi.InvokeOption) (*GetHostRuntimePolicyResult, error) {
	var rv GetHostRuntimePolicyResult
	err := ctx.Invoke("aquasec:index/getHostRuntimePolicy:getHostRuntimePolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHostRuntimePolicy.
type GetHostRuntimePolicyArgs struct {
	// Name of the host runtime policy
	Name string `pulumi:"name"`
}

// A collection of values returned by getHostRuntimePolicy.
type GetHostRuntimePolicyResult struct {
	// Indicates the application scope of the service.
	ApplicationScopes []string `pulumi:"applicationScopes"`
	// If true, all process activity will be audited.
	AuditAllOsUserActivity bool `pulumi:"auditAllOsUserActivity"`
	// If true, full command arguments will be audited.
	AuditFullCommandArguments bool `pulumi:"auditFullCommandArguments"`
	// Username of the account that created the service.
	Author string `pulumi:"author"`
	// List of files that are prevented from being read, modified and executed in the containers.
	BlockedFiles []string `pulumi:"blockedFiles"`
	// The description of the host runtime policy
	Description string `pulumi:"description"`
	// If true, detect and prevent communication from containers to IP addresses known to have a bad reputation.
	EnableIpReputationSecurity bool `pulumi:"enableIpReputationSecurity"`
	// Indicates if the runtime policy is enabled or not.
	Enabled bool `pulumi:"enabled"`
	// Indicates that policy should effect container execution (not just for audit).
	Enforce bool `pulumi:"enforce"`
	// Indicates the number of days after which the runtime policy will be changed to enforce mode.
	EnforceAfterDays int `pulumi:"enforceAfterDays"`
	// Configuration for file integrity monitoring.
	FileIntegrityMonitorings []GetHostRuntimePolicyFileIntegrityMonitoring `pulumi:"fileIntegrityMonitorings"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// If true, system time changes will be monitored.
	MonitorSystemTimeChanges bool `pulumi:"monitorSystemTimeChanges"`
	// If true, windows service operations will be monitored.
	MonitorWindowsServices bool `pulumi:"monitorWindowsServices"`
	// Name of the host runtime policy
	Name string `pulumi:"name"`
	// List of OS (Linux or Windows) groups that are allowed to authenticate to the host, and block authentication requests from all others. Groups can be either Linux groups or Windows AD groups.
	OsGroupsAlloweds []string `pulumi:"osGroupsAlloweds"`
	// List of OS (Linux or Windows) groups that are not allowed to authenticate to the host, and block authentication requests from all others. Groups can be either Linux groups or Windows AD groups.
	OsGroupsBlockeds []string `pulumi:"osGroupsBlockeds"`
	// List of OS (Linux or Windows) users that are allowed to authenticate to the host, and block authentication requests from all others.
	OsUsersAlloweds []string `pulumi:"osUsersAlloweds"`
	// List of OS (Linux or Windows) users that are not allowed to authenticate to the host, and block authentication requests from all others.
	OsUsersBlockeds []string `pulumi:"osUsersBlockeds"`
	// Logical expression of how to compute the dependency of the scope variables.
	ScopeExpression string `pulumi:"scopeExpression"`
	// List of scope attributes.
	ScopeVariables []GetHostRuntimePolicyScopeVariable `pulumi:"scopeVariables"`
	// Configuration for windows registry monitoring.
	WindowsRegistryMonitorings []GetHostRuntimePolicyWindowsRegistryMonitoring `pulumi:"windowsRegistryMonitorings"`
	// Configuration for windows registry protection.
	WindowsRegistryProtections []GetHostRuntimePolicyWindowsRegistryProtection `pulumi:"windowsRegistryProtections"`
}

func GetHostRuntimePolicyOutput(ctx *pulumi.Context, args GetHostRuntimePolicyOutputArgs, opts ...pulumi.InvokeOption) GetHostRuntimePolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetHostRuntimePolicyResult, error) {
			args := v.(GetHostRuntimePolicyArgs)
			r, err := GetHostRuntimePolicy(ctx, &args, opts...)
			return *r, err
		}).(GetHostRuntimePolicyResultOutput)
}

// A collection of arguments for invoking getHostRuntimePolicy.
type GetHostRuntimePolicyOutputArgs struct {
	// Name of the host runtime policy
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetHostRuntimePolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostRuntimePolicyArgs)(nil)).Elem()
}

// A collection of values returned by getHostRuntimePolicy.
type GetHostRuntimePolicyResultOutput struct{ *pulumi.OutputState }

func (GetHostRuntimePolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostRuntimePolicyResult)(nil)).Elem()
}

func (o GetHostRuntimePolicyResultOutput) ToGetHostRuntimePolicyResultOutput() GetHostRuntimePolicyResultOutput {
	return o
}

func (o GetHostRuntimePolicyResultOutput) ToGetHostRuntimePolicyResultOutputWithContext(ctx context.Context) GetHostRuntimePolicyResultOutput {
	return o
}

// Indicates the application scope of the service.
func (o GetHostRuntimePolicyResultOutput) ApplicationScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) []string { return v.ApplicationScopes }).(pulumi.StringArrayOutput)
}

// If true, all process activity will be audited.
func (o GetHostRuntimePolicyResultOutput) AuditAllOsUserActivity() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) bool { return v.AuditAllOsUserActivity }).(pulumi.BoolOutput)
}

// If true, full command arguments will be audited.
func (o GetHostRuntimePolicyResultOutput) AuditFullCommandArguments() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) bool { return v.AuditFullCommandArguments }).(pulumi.BoolOutput)
}

// Username of the account that created the service.
func (o GetHostRuntimePolicyResultOutput) Author() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) string { return v.Author }).(pulumi.StringOutput)
}

// List of files that are prevented from being read, modified and executed in the containers.
func (o GetHostRuntimePolicyResultOutput) BlockedFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) []string { return v.BlockedFiles }).(pulumi.StringArrayOutput)
}

// The description of the host runtime policy
func (o GetHostRuntimePolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// If true, detect and prevent communication from containers to IP addresses known to have a bad reputation.
func (o GetHostRuntimePolicyResultOutput) EnableIpReputationSecurity() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) bool { return v.EnableIpReputationSecurity }).(pulumi.BoolOutput)
}

// Indicates if the runtime policy is enabled or not.
func (o GetHostRuntimePolicyResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Indicates that policy should effect container execution (not just for audit).
func (o GetHostRuntimePolicyResultOutput) Enforce() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) bool { return v.Enforce }).(pulumi.BoolOutput)
}

// Indicates the number of days after which the runtime policy will be changed to enforce mode.
func (o GetHostRuntimePolicyResultOutput) EnforceAfterDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) int { return v.EnforceAfterDays }).(pulumi.IntOutput)
}

// Configuration for file integrity monitoring.
func (o GetHostRuntimePolicyResultOutput) FileIntegrityMonitorings() GetHostRuntimePolicyFileIntegrityMonitoringArrayOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) []GetHostRuntimePolicyFileIntegrityMonitoring {
		return v.FileIntegrityMonitorings
	}).(GetHostRuntimePolicyFileIntegrityMonitoringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetHostRuntimePolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// If true, system time changes will be monitored.
func (o GetHostRuntimePolicyResultOutput) MonitorSystemTimeChanges() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) bool { return v.MonitorSystemTimeChanges }).(pulumi.BoolOutput)
}

// If true, windows service operations will be monitored.
func (o GetHostRuntimePolicyResultOutput) MonitorWindowsServices() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) bool { return v.MonitorWindowsServices }).(pulumi.BoolOutput)
}

// Name of the host runtime policy
func (o GetHostRuntimePolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// List of OS (Linux or Windows) groups that are allowed to authenticate to the host, and block authentication requests from all others. Groups can be either Linux groups or Windows AD groups.
func (o GetHostRuntimePolicyResultOutput) OsGroupsAlloweds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) []string { return v.OsGroupsAlloweds }).(pulumi.StringArrayOutput)
}

// List of OS (Linux or Windows) groups that are not allowed to authenticate to the host, and block authentication requests from all others. Groups can be either Linux groups or Windows AD groups.
func (o GetHostRuntimePolicyResultOutput) OsGroupsBlockeds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) []string { return v.OsGroupsBlockeds }).(pulumi.StringArrayOutput)
}

// List of OS (Linux or Windows) users that are allowed to authenticate to the host, and block authentication requests from all others.
func (o GetHostRuntimePolicyResultOutput) OsUsersAlloweds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) []string { return v.OsUsersAlloweds }).(pulumi.StringArrayOutput)
}

// List of OS (Linux or Windows) users that are not allowed to authenticate to the host, and block authentication requests from all others.
func (o GetHostRuntimePolicyResultOutput) OsUsersBlockeds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) []string { return v.OsUsersBlockeds }).(pulumi.StringArrayOutput)
}

// Logical expression of how to compute the dependency of the scope variables.
func (o GetHostRuntimePolicyResultOutput) ScopeExpression() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) string { return v.ScopeExpression }).(pulumi.StringOutput)
}

// List of scope attributes.
func (o GetHostRuntimePolicyResultOutput) ScopeVariables() GetHostRuntimePolicyScopeVariableArrayOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) []GetHostRuntimePolicyScopeVariable { return v.ScopeVariables }).(GetHostRuntimePolicyScopeVariableArrayOutput)
}

// Configuration for windows registry monitoring.
func (o GetHostRuntimePolicyResultOutput) WindowsRegistryMonitorings() GetHostRuntimePolicyWindowsRegistryMonitoringArrayOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) []GetHostRuntimePolicyWindowsRegistryMonitoring {
		return v.WindowsRegistryMonitorings
	}).(GetHostRuntimePolicyWindowsRegistryMonitoringArrayOutput)
}

// Configuration for windows registry protection.
func (o GetHostRuntimePolicyResultOutput) WindowsRegistryProtections() GetHostRuntimePolicyWindowsRegistryProtectionArrayOutput {
	return o.ApplyT(func(v GetHostRuntimePolicyResult) []GetHostRuntimePolicyWindowsRegistryProtection {
		return v.WindowsRegistryProtections
	}).(GetHostRuntimePolicyWindowsRegistryProtectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetHostRuntimePolicyResultOutput{})
}
