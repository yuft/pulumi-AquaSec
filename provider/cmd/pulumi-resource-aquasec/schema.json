{
    "name": "aquasec",
    "description": "A Pulumi package for creating and managing aquasec cloud resources.",
    "keywords": [
        "pulumi",
        "aquasec",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`aquasec` Terraform Provider](https://github.com/aquasecurity/terraform-provider-aquasec).",
    "repository": "https://github.com/pulumi/pulumi-aquasec",
    "publisher": "Pulumi",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "aquaUrl": {
                "type": "string",
                "description": "This is the base URL of your Aqua instance. Can alternatively be sourced from the `AQUA_URL` environment variable.\n",
                "defaultInfo": {
                    "environment": [
                        "AQUA_URL"
                    ]
                }
            },
            "caCertificatePath": {
                "type": "string",
                "description": "This is the file path for server CA certificates if they are not available on the host OS. Can alternatively be sourced\nfrom the `AQUA_CA_CERT_PATH` environment variable.\n"
            },
            "configPath": {
                "type": "string",
                "description": "This is the file path for Aqua provider configuration. The default configuration path is `~/.aqua/tf.config`. Can\nalternatively be sourced from the `AQUA_CONFIG` environment variable.\n"
            },
            "password": {
                "type": "string",
                "description": "This is the password that should be used to make the connection. Can alternatively be sourced from the `AQUA_PASSWORD`\nenvironment variable.\n",
                "defaultInfo": {
                    "environment": [
                        "AUQA_PASSWORD"
                    ]
                }
            },
            "username": {
                "type": "string",
                "description": "This is the user id that should be used to make the connection. Can alternatively be sourced from the `AQUA_USER`\nenvironment variable.\n",
                "defaultInfo": {
                    "environment": [
                        "AQUA_USERNAME"
                    ]
                }
            },
            "verifyTls": {
                "type": "boolean",
                "description": "If true, server tls certificates will be verified by the client before making a connection. Defaults to true. Can\nalternatively be sourced from the `AQUA_TLS_VERIFY` environment variable.\n"
            }
        }
    },
    "types": {
        "aquasec:index/ApplicationScopeCategory:ApplicationScopeCategory": {
            "properties": {
                "artifacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryArtifact:ApplicationScopeCategoryArtifact"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entityScopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryEntityScope:ApplicationScopeCategoryEntityScope"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "infrastructures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryInfrastructure:ApplicationScopeCategoryInfrastructure"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workloads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryWorkload:ApplicationScopeCategoryWorkload"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryArtifact:ApplicationScopeCategoryArtifact": {
            "properties": {
                "cfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryArtifactCf:ApplicationScopeCategoryArtifactCf"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "functions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryArtifactFunction:ApplicationScopeCategoryArtifactFunction"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryArtifactImage:ApplicationScopeCategoryArtifactImage"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryArtifactCf:ApplicationScopeCategoryArtifactCf": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryArtifactCfVariable:ApplicationScopeCategoryArtifactCfVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryArtifactCfVariable:ApplicationScopeCategoryArtifactCfVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryArtifactFunction:ApplicationScopeCategoryArtifactFunction": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryArtifactFunctionVariable:ApplicationScopeCategoryArtifactFunctionVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryArtifactFunctionVariable:ApplicationScopeCategoryArtifactFunctionVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryArtifactImage:ApplicationScopeCategoryArtifactImage": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryArtifactImageVariable:ApplicationScopeCategoryArtifactImageVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryArtifactImageVariable:ApplicationScopeCategoryArtifactImageVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryEntityScope:ApplicationScopeCategoryEntityScope": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryEntityScopeVariable:ApplicationScopeCategoryEntityScopeVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryEntityScopeVariable:ApplicationScopeCategoryEntityScopeVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryInfrastructure:ApplicationScopeCategoryInfrastructure": {
            "properties": {
                "kubernetes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryInfrastructureKubernete:ApplicationScopeCategoryInfrastructureKubernete"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "os": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryInfrastructureO:ApplicationScopeCategoryInfrastructureO"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryInfrastructureKubernete:ApplicationScopeCategoryInfrastructureKubernete": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryInfrastructureKuberneteVariable:ApplicationScopeCategoryInfrastructureKuberneteVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryInfrastructureKuberneteVariable:ApplicationScopeCategoryInfrastructureKuberneteVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryInfrastructureO:ApplicationScopeCategoryInfrastructureO": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryInfrastructureOVariable:ApplicationScopeCategoryInfrastructureOVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryInfrastructureOVariable:ApplicationScopeCategoryInfrastructureOVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryWorkload:ApplicationScopeCategoryWorkload": {
            "properties": {
                "cfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryWorkloadCf:ApplicationScopeCategoryWorkloadCf"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubernetes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryWorkloadKubernete:ApplicationScopeCategoryWorkloadKubernete"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "os": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryWorkloadO:ApplicationScopeCategoryWorkloadO"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryWorkloadCf:ApplicationScopeCategoryWorkloadCf": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryWorkloadCfVariable:ApplicationScopeCategoryWorkloadCfVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryWorkloadCfVariable:ApplicationScopeCategoryWorkloadCfVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryWorkloadKubernete:ApplicationScopeCategoryWorkloadKubernete": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryWorkloadKuberneteVariable:ApplicationScopeCategoryWorkloadKuberneteVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryWorkloadKuberneteVariable:ApplicationScopeCategoryWorkloadKuberneteVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryWorkloadO:ApplicationScopeCategoryWorkloadO": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategoryWorkloadOVariable:ApplicationScopeCategoryWorkloadOVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ApplicationScopeCategoryWorkloadOVariable:ApplicationScopeCategoryWorkloadOVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/AquasecHostRuntimePolicyFileIntegrityMonitoring:AquasecHostRuntimePolicyFileIntegrityMonitoring": {
            "properties": {
                "excludedPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of paths to be excluded from being monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedProcesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of processes to be excluded from being monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of users to be excluded from being monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorAttributes": {
                    "type": "boolean",
                    "description": "If true, add attributes operations will be monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorCreate": {
                    "type": "boolean",
                    "description": "If true, create operations will be monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorDelete": {
                    "type": "boolean",
                    "description": "If true, deletion operations will be monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorModify": {
                    "type": "boolean",
                    "description": "If true, modification operations will be monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorRead": {
                    "type": "boolean",
                    "description": "If true, read operations will be monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitoredPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of paths to be monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitoredProcesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of processes to be monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitoredUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of users to be monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/AquasecHostRuntimePolicyScopeVariable:AquasecHostRuntimePolicyScopeVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "description": "Class of supported scope.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Value assigned to the attribute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "value"
            ]
        },
        "aquasec:index/AquasecHostRuntimePolicyWindowsRegistryMonitoring:AquasecHostRuntimePolicyWindowsRegistryMonitoring": {
            "properties": {
                "excludedPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of paths to be excluded from being monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedProcesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of registry processes to be excluded from being monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of registry users to be excluded from being monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorAttributes": {
                    "type": "boolean",
                    "description": "If true, add attributes operations will be monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorCreate": {
                    "type": "boolean",
                    "description": "If true, create operations will be monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorDelete": {
                    "type": "boolean",
                    "description": "If true, deletion operations will be monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorModify": {
                    "type": "boolean",
                    "description": "If true, modification operations will be monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorRead": {
                    "type": "boolean",
                    "description": "If true, read operations will be monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitoredPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of paths to be monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitoredProcesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of registry processes to be monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitoredUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of registry users to be monitored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/AquasecHostRuntimePolicyWindowsRegistryProtection:AquasecHostRuntimePolicyWindowsRegistryProtection": {
            "properties": {
                "excludedPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of registry paths to be excluded from being protected.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedProcesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of registry processes to be excluded from being protected.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of registry paths to be users from being protected.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protectedPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of registry paths to be protected.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protectedProcesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of registry processes to be protected.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protectedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of registry users to be protected.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ContainerRuntimePolicyScopeVariable:ContainerRuntimePolicyScopeVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "description": "Class of supported scope.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Value assigned to the attribute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "value"
            ]
        },
        "aquasec:index/EnforcerGroupsCommand:EnforcerGroupsCommand": {
            "properties": {
                "default": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubernetes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "swarm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "windows": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "default",
                        "kubernetes",
                        "swarm",
                        "windows"
                    ]
                }
            }
        },
        "aquasec:index/EnforcerGroupsOrchestrator:EnforcerGroupsOrchestrator": {
            "properties": {
                "master": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/FirewallPolicyInboundNetwork:FirewallPolicyInboundNetwork": {
            "properties": {
                "allow": {
                    "type": "boolean",
                    "description": "Indicates whether the specified resources are allowed to pass in data or requests.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "portRange": {
                    "type": "string",
                    "description": "Range of ports affected by firewall.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resource": {
                    "type": "string",
                    "description": "Information of the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceType": {
                    "type": "string",
                    "description": "Type of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allow",
                "portRange",
                "resourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allow",
                        "portRange",
                        "resource",
                        "resourceType"
                    ]
                }
            }
        },
        "aquasec:index/FirewallPolicyOutboundNetwork:FirewallPolicyOutboundNetwork": {
            "properties": {
                "allow": {
                    "type": "boolean",
                    "description": "Indicates whether the specified resources are allowed to receive data or requests.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "portRange": {
                    "type": "string",
                    "description": "Range of ports affected by firewall.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resource": {
                    "type": "string",
                    "description": "Information of the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceType": {
                    "type": "string",
                    "description": "Type of the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allow",
                "portRange",
                "resourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allow",
                        "portRange",
                        "resource",
                        "resourceType"
                    ]
                }
            }
        },
        "aquasec:index/FunctionAssurancePolicyAutoScanTime:FunctionAssurancePolicyAutoScanTime": {
            "properties": {
                "iteration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iterationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weekDays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "iteration",
                        "weekDays"
                    ]
                }
            }
        },
        "aquasec:index/FunctionAssurancePolicyCustomCheck:FunctionAssurancePolicyCustomCheck": {
            "properties": {
                "author": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "engine": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastModified": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "readOnly": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scriptId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "severity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snippet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/FunctionAssurancePolicyForbiddenLabel:FunctionAssurancePolicyForbiddenLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/FunctionAssurancePolicyPackagesBlackList:FunctionAssurancePolicyPackagesBlackList": {
            "properties": {
                "arch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "display": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "epoch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "license": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "release": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/FunctionAssurancePolicyPackagesWhiteList:FunctionAssurancePolicyPackagesWhiteList": {
            "properties": {
                "arch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "display": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "epoch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "license": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "release": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/FunctionAssurancePolicyRequiredLabel:FunctionAssurancePolicyRequiredLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/FunctionAssurancePolicyScope:FunctionAssurancePolicyScope": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyScopeVariable:FunctionAssurancePolicyScopeVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expression"
                    ]
                }
            }
        },
        "aquasec:index/FunctionAssurancePolicyScopeVariable:FunctionAssurancePolicyScopeVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "attribute",
                        "value"
                    ]
                }
            }
        },
        "aquasec:index/FunctionAssurancePolicyTrustedBaseImage:FunctionAssurancePolicyTrustedBaseImage": {
            "properties": {
                "imagename": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/FunctionRuntimePolicyScopeVariable:FunctionRuntimePolicyScopeVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "description": "Class of supported scope.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Value assigned to the attribute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "value"
            ]
        },
        "aquasec:index/HostAssurancePolicyAutoScanTime:HostAssurancePolicyAutoScanTime": {
            "properties": {
                "iteration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iterationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weekDays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "iteration",
                        "weekDays"
                    ]
                }
            }
        },
        "aquasec:index/HostAssurancePolicyCustomCheck:HostAssurancePolicyCustomCheck": {
            "properties": {
                "author": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "engine": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastModified": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "readOnly": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scriptId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "severity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snippet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/HostAssurancePolicyForbiddenLabel:HostAssurancePolicyForbiddenLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/HostAssurancePolicyPackagesBlackList:HostAssurancePolicyPackagesBlackList": {
            "properties": {
                "arch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "display": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "epoch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "license": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "release": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/HostAssurancePolicyPackagesWhiteList:HostAssurancePolicyPackagesWhiteList": {
            "properties": {
                "arch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "display": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "epoch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "license": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "release": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/HostAssurancePolicyRequiredLabel:HostAssurancePolicyRequiredLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/HostAssurancePolicyScope:HostAssurancePolicyScope": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyScopeVariable:HostAssurancePolicyScopeVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expression"
                    ]
                }
            }
        },
        "aquasec:index/HostAssurancePolicyScopeVariable:HostAssurancePolicyScopeVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "attribute",
                        "value"
                    ]
                }
            }
        },
        "aquasec:index/HostAssurancePolicyTrustedBaseImage:HostAssurancePolicyTrustedBaseImage": {
            "properties": {
                "imagename": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ImageAssuranceChecksPerformed:ImageAssuranceChecksPerformed": {
            "properties": {
                "assuranceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocking": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "control": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dtaSkipped": {
                    "type": "boolean",
                    "description": "If DTA was skipped.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dtaSkippedReason": {
                    "type": "string",
                    "description": "The reason why DTA was skipped.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "failed": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "assuranceType",
                        "blocking",
                        "control",
                        "dtaSkipped",
                        "dtaSkippedReason",
                        "failed",
                        "policyName"
                    ]
                }
            }
        },
        "aquasec:index/ImageAssurancePolicyAutoScanTime:ImageAssurancePolicyAutoScanTime": {
            "properties": {
                "iteration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iterationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weekDays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "iteration",
                        "weekDays"
                    ]
                }
            }
        },
        "aquasec:index/ImageAssurancePolicyCustomCheck:ImageAssurancePolicyCustomCheck": {
            "properties": {
                "author": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "engine": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastModified": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "readOnly": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scriptId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "severity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snippet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ImageAssurancePolicyForbiddenLabel:ImageAssurancePolicyForbiddenLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ImageAssurancePolicyPackagesBlackList:ImageAssurancePolicyPackagesBlackList": {
            "properties": {
                "arch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "display": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "epoch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "license": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "release": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ImageAssurancePolicyPackagesWhiteList:ImageAssurancePolicyPackagesWhiteList": {
            "properties": {
                "arch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "display": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "epoch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "license": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "release": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ImageAssurancePolicyRequiredLabel:ImageAssurancePolicyRequiredLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ImageAssurancePolicyScope:ImageAssurancePolicyScope": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyScopeVariable:ImageAssurancePolicyScopeVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expression"
                    ]
                }
            }
        },
        "aquasec:index/ImageAssurancePolicyScopeVariable:ImageAssurancePolicyScopeVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "attribute",
                        "value"
                    ]
                }
            }
        },
        "aquasec:index/ImageAssurancePolicyTrustedBaseImage:ImageAssurancePolicyTrustedBaseImage": {
            "properties": {
                "imagename": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/ImageHistory:ImageHistory": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "The image creation comment.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "created": {
                    "type": "string",
                    "description": "The date and time when the image was registered.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "createdBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "comment",
                        "created",
                        "createdBy",
                        "id",
                        "size"
                    ]
                }
            }
        },
        "aquasec:index/ImageVulnerability:ImageVulnerability": {
            "properties": {
                "ackAuthor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ackComment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ackExpirationConfiguredAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ackExpirationConfiguredBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ackExpirationDays": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ackScope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "acknowledgeDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ancestorPkg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "aquaScore": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "aquaScoreClassification": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "aquaScoringSystem": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "aquaSeverity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "aquaSeverityClassification": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "aquaVectors": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditEventsCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blockEventsCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "classification": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "digest": {
                    "type": "string",
                    "description": "The content digest of the image.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exploitReference": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exploitType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "firstFoundDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fixVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastFoundDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modificationDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the image.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvdCvss2Score": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvdCvss2Vectors": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvdCvss3Score": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvdCvss3Severity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvdCvss3Vectors": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvdSeverity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvdUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "os": {
                    "type": "string",
                    "description": "The operating system detected in the image\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osVersion": {
                    "type": "string",
                    "description": "The version of the OS detected in the image.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permission": {
                    "type": "string",
                    "description": "Permission of the image.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publishDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registry": {
                    "type": "string",
                    "description": "The name of the registry where the image is stored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repository": {
                    "type": "string",
                    "description": "The name of the image's repository.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceArchitecture": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceCpe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceHash": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceLicenses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourcePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "severityClassification": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "solution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "temporalVector": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchAppliedBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchAppliedOn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchEnforcedBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchEnforcedOn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchPolicyEnforce": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchPolicyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchRevertedBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchRevertedOn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vendorCvss2Score": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vendorCvss2Vectors": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vendorSeverity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vendorStatement": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vendorUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ackAuthor",
                        "ackComment",
                        "ackExpirationConfiguredAt",
                        "ackExpirationConfiguredBy",
                        "ackExpirationDays",
                        "ackScope",
                        "acknowledgeDate",
                        "ancestorPkg",
                        "aquaScore",
                        "aquaScoreClassification",
                        "aquaScoringSystem",
                        "aquaSeverity",
                        "aquaSeverityClassification",
                        "aquaVectors",
                        "auditEventsCount",
                        "blockEventsCount",
                        "classification",
                        "description",
                        "digest",
                        "exploitReference",
                        "exploitType",
                        "firstFoundDate",
                        "fixVersion",
                        "imageName",
                        "lastFoundDate",
                        "modificationDate",
                        "name",
                        "nvdCvss2Score",
                        "nvdCvss2Vectors",
                        "nvdCvss3Score",
                        "nvdCvss3Severity",
                        "nvdCvss3Vectors",
                        "nvdSeverity",
                        "nvdUrl",
                        "os",
                        "osVersion",
                        "permission",
                        "publishDate",
                        "registry",
                        "repository",
                        "resourceArchitecture",
                        "resourceCpe",
                        "resourceFormat",
                        "resourceHash",
                        "resourceLicenses",
                        "resourceName",
                        "resourcePath",
                        "resourceType",
                        "resourceVersion",
                        "severityClassification",
                        "solution",
                        "temporalVector",
                        "vPatchAppliedBy",
                        "vPatchAppliedOn",
                        "vPatchEnforcedBy",
                        "vPatchEnforcedOn",
                        "vPatchPolicyEnforce",
                        "vPatchPolicyName",
                        "vPatchRevertedBy",
                        "vPatchRevertedOn",
                        "vPatchStatus",
                        "vendorCvss2Score",
                        "vendorCvss2Vectors",
                        "vendorSeverity",
                        "vendorStatement",
                        "vendorUrl"
                    ]
                }
            }
        },
        "aquasec:index/ServiceScopeVariable:ServiceScopeVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "description": "Class of supported scope.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Value assigned to the attribute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "value"
            ]
        },
        "aquasec:index/UserSaasGroup:UserSaasGroup": {
            "properties": {
                "groupAdmin": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/UserSaasLogin:UserSaasLogin": {
            "properties": {
                "created": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "created",
                        "id",
                        "ipAddress",
                        "userId"
                    ]
                }
            }
        },
        "aquasec:index/getApplicationScopeCategory:getApplicationScopeCategory": {
            "properties": {
                "artifacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryArtifact:getApplicationScopeCategoryArtifact"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entityScopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryEntityScope:getApplicationScopeCategoryEntityScope"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "infrastructures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryInfrastructure:getApplicationScopeCategoryInfrastructure"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "workloads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryWorkload:getApplicationScopeCategoryWorkload"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/getApplicationScopeCategoryArtifact:getApplicationScopeCategoryArtifact": {
            "properties": {
                "cfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryArtifactCf:getApplicationScopeCategoryArtifactCf"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "functions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryArtifactFunction:getApplicationScopeCategoryArtifactFunction"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryArtifactImage:getApplicationScopeCategoryArtifactImage"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/getApplicationScopeCategoryArtifactCf:getApplicationScopeCategoryArtifactCf": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryArtifactCfVariable:getApplicationScopeCategoryArtifactCfVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getApplicationScopeCategoryArtifactCfVariable:getApplicationScopeCategoryArtifactCfVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getApplicationScopeCategoryArtifactFunction:getApplicationScopeCategoryArtifactFunction": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryArtifactFunctionVariable:getApplicationScopeCategoryArtifactFunctionVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getApplicationScopeCategoryArtifactFunctionVariable:getApplicationScopeCategoryArtifactFunctionVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getApplicationScopeCategoryArtifactImage:getApplicationScopeCategoryArtifactImage": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryArtifactImageVariable:getApplicationScopeCategoryArtifactImageVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getApplicationScopeCategoryArtifactImageVariable:getApplicationScopeCategoryArtifactImageVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/getApplicationScopeCategoryEntityScope:getApplicationScopeCategoryEntityScope": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryEntityScopeVariable:getApplicationScopeCategoryEntityScopeVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getApplicationScopeCategoryEntityScopeVariable:getApplicationScopeCategoryEntityScopeVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getApplicationScopeCategoryInfrastructure:getApplicationScopeCategoryInfrastructure": {
            "properties": {
                "kubernetes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryInfrastructureKubernete:getApplicationScopeCategoryInfrastructureKubernete"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "os": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryInfrastructureO:getApplicationScopeCategoryInfrastructureO"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/getApplicationScopeCategoryInfrastructureKubernete:getApplicationScopeCategoryInfrastructureKubernete": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryInfrastructureKuberneteVariable:getApplicationScopeCategoryInfrastructureKuberneteVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getApplicationScopeCategoryInfrastructureKuberneteVariable:getApplicationScopeCategoryInfrastructureKuberneteVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getApplicationScopeCategoryInfrastructureO:getApplicationScopeCategoryInfrastructureO": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryInfrastructureOVariable:getApplicationScopeCategoryInfrastructureOVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getApplicationScopeCategoryInfrastructureOVariable:getApplicationScopeCategoryInfrastructureOVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getApplicationScopeCategoryWorkload:getApplicationScopeCategoryWorkload": {
            "properties": {
                "cfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryWorkloadCf:getApplicationScopeCategoryWorkloadCf"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubernetes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryWorkloadKubernete:getApplicationScopeCategoryWorkloadKubernete"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "os": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryWorkloadO:getApplicationScopeCategoryWorkloadO"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "aquasec:index/getApplicationScopeCategoryWorkloadCf:getApplicationScopeCategoryWorkloadCf": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryWorkloadCfVariable:getApplicationScopeCategoryWorkloadCfVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getApplicationScopeCategoryWorkloadCfVariable:getApplicationScopeCategoryWorkloadCfVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getApplicationScopeCategoryWorkloadKubernete:getApplicationScopeCategoryWorkloadKubernete": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryWorkloadKuberneteVariable:getApplicationScopeCategoryWorkloadKuberneteVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getApplicationScopeCategoryWorkloadKuberneteVariable:getApplicationScopeCategoryWorkloadKuberneteVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getApplicationScopeCategoryWorkloadO:getApplicationScopeCategoryWorkloadO": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getApplicationScopeCategoryWorkloadOVariable:getApplicationScopeCategoryWorkloadOVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getApplicationScopeCategoryWorkloadOVariable:getApplicationScopeCategoryWorkloadOVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getContainerRuntimePolicyScopeVariable:getContainerRuntimePolicyScopeVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getEnforcerGroupsCommand:getEnforcerGroupsCommand": {
            "properties": {
                "default": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubernetes": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "swarm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "windows": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "default",
                "kubernetes",
                "swarm",
                "windows"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getEnforcerGroupsOrchestrator:getEnforcerGroupsOrchestrator": {
            "properties": {
                "master": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "master",
                "namespace",
                "serviceAccount",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getFirewallPolicyInboundNetwork:getFirewallPolicyInboundNetwork": {
            "properties": {
                "allow": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "portRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allow",
                "portRange",
                "resource",
                "resourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getFirewallPolicyOutboundNetwork:getFirewallPolicyOutboundNetwork": {
            "properties": {
                "allow": {
                    "type": "boolean",
                    "description": "Indicates whether the specified resources are allowed to receive data or requests.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "portRange": {
                    "type": "string",
                    "description": "Range of ports affected by firewall.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resource": {
                    "type": "string",
                    "description": "Information of the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceType": {
                    "type": "string",
                    "description": "Type of the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allow",
                "portRange",
                "resource",
                "resourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getFunctionAssurancePolicyAutoScanTime:getFunctionAssurancePolicyAutoScanTime": {
            "properties": {
                "iteration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iterationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weekDays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "iteration",
                "iterationType",
                "time",
                "weekDays"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getFunctionAssurancePolicyCustomCheck:getFunctionAssurancePolicyCustomCheck": {
            "properties": {
                "author": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "engine": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastModified": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "readOnly": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scriptId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "severity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snippet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "author",
                "description",
                "engine",
                "lastModified",
                "name",
                "path",
                "readOnly",
                "scriptId",
                "severity",
                "snippet"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getFunctionAssurancePolicyForbiddenLabel:getFunctionAssurancePolicyForbiddenLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getFunctionAssurancePolicyPackagesBlackList:getFunctionAssurancePolicyPackagesBlackList": {
            "properties": {
                "arch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "display": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "epoch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "license": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "release": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "arch",
                "display",
                "epoch",
                "format",
                "license",
                "name",
                "release",
                "version",
                "versionRange"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getFunctionAssurancePolicyPackagesWhiteList:getFunctionAssurancePolicyPackagesWhiteList": {
            "properties": {
                "arch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "display": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "epoch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "license": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "release": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "arch",
                "display",
                "epoch",
                "format",
                "license",
                "name",
                "release",
                "version",
                "versionRange"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getFunctionAssurancePolicyRequiredLabel:getFunctionAssurancePolicyRequiredLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getFunctionAssurancePolicyScope:getFunctionAssurancePolicyScope": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getFunctionAssurancePolicyScopeVariable:getFunctionAssurancePolicyScopeVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getFunctionAssurancePolicyScopeVariable:getFunctionAssurancePolicyScopeVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getFunctionAssurancePolicyTrustedBaseImage:getFunctionAssurancePolicyTrustedBaseImage": {
            "properties": {
                "imagename": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "imagename",
                "registry"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getFunctionRuntimePolicyScopeVariable:getFunctionRuntimePolicyScopeVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getGatewaysGateway:getGatewaysGateway": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grpcAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logicalname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "grpcAddress",
                "hostname",
                "id",
                "logicalname",
                "publicAddress",
                "status",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getGroupsGroup:getGroupsGroup": {
            "properties": {
                "created": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "created",
                "groupId",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getHostAssurancePolicyAutoScanTime:getHostAssurancePolicyAutoScanTime": {
            "properties": {
                "iteration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iterationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weekDays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "iteration",
                "iterationType",
                "time",
                "weekDays"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getHostAssurancePolicyCustomCheck:getHostAssurancePolicyCustomCheck": {
            "properties": {
                "author": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "engine": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastModified": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "readOnly": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scriptId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "severity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snippet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "author",
                "description",
                "engine",
                "lastModified",
                "name",
                "path",
                "readOnly",
                "scriptId",
                "severity",
                "snippet"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getHostAssurancePolicyForbiddenLabel:getHostAssurancePolicyForbiddenLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getHostAssurancePolicyPackagesBlackList:getHostAssurancePolicyPackagesBlackList": {
            "properties": {
                "arch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "display": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "epoch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "license": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "release": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "arch",
                "display",
                "epoch",
                "format",
                "license",
                "name",
                "release",
                "version",
                "versionRange"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getHostAssurancePolicyPackagesWhiteList:getHostAssurancePolicyPackagesWhiteList": {
            "properties": {
                "arch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "display": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "epoch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "license": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "release": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "arch",
                "display",
                "epoch",
                "format",
                "license",
                "name",
                "release",
                "version",
                "versionRange"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getHostAssurancePolicyRequiredLabel:getHostAssurancePolicyRequiredLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getHostAssurancePolicyScope:getHostAssurancePolicyScope": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getHostAssurancePolicyScopeVariable:getHostAssurancePolicyScopeVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getHostAssurancePolicyScopeVariable:getHostAssurancePolicyScopeVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getHostAssurancePolicyTrustedBaseImage:getHostAssurancePolicyTrustedBaseImage": {
            "properties": {
                "imagename": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "imagename",
                "registry"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getHostRuntimePolicyFileIntegrityMonitoring:getHostRuntimePolicyFileIntegrityMonitoring": {
            "properties": {
                "excludedPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedProcesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorAttributes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorCreate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorDelete": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorModify": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorRead": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitoredPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitoredProcesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitoredUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "excludedPaths",
                "excludedProcesses",
                "excludedUsers",
                "monitorAttributes",
                "monitorCreate",
                "monitorDelete",
                "monitorModify",
                "monitorRead",
                "monitoredPaths",
                "monitoredProcesses",
                "monitoredUsers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getHostRuntimePolicyScopeVariable:getHostRuntimePolicyScopeVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getHostRuntimePolicyWindowsRegistryMonitoring:getHostRuntimePolicyWindowsRegistryMonitoring": {
            "properties": {
                "excludedPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedProcesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorAttributes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorCreate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorDelete": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorModify": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorRead": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitoredPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitoredProcesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitoredUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "excludedPaths",
                "excludedProcesses",
                "excludedUsers",
                "monitorAttributes",
                "monitorCreate",
                "monitorDelete",
                "monitorModify",
                "monitorRead",
                "monitoredPaths",
                "monitoredProcesses",
                "monitoredUsers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getHostRuntimePolicyWindowsRegistryProtection:getHostRuntimePolicyWindowsRegistryProtection": {
            "properties": {
                "excludedPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedProcesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protectedPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protectedProcesses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protectedUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "excludedPaths",
                "excludedProcesses",
                "excludedUsers",
                "protectedPaths",
                "protectedProcesses",
                "protectedUsers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getImageAssuranceChecksPerformed:getImageAssuranceChecksPerformed": {
            "properties": {
                "assuranceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blocking": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "control": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dtaSkipped": {
                    "type": "boolean",
                    "description": "If DTA was skipped.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dtaSkippedReason": {
                    "type": "string",
                    "description": "The reason why DTA was skipped.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "failed": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "assuranceType",
                "blocking",
                "control",
                "dtaSkipped",
                "dtaSkippedReason",
                "failed",
                "policyName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getImageAssurancePolicyAutoScanTime:getImageAssurancePolicyAutoScanTime": {
            "properties": {
                "iteration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iterationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weekDays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "iteration",
                "iterationType",
                "time",
                "weekDays"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getImageAssurancePolicyCustomCheck:getImageAssurancePolicyCustomCheck": {
            "properties": {
                "author": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "engine": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastModified": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "readOnly": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scriptId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "severity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snippet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "author",
                "description",
                "engine",
                "lastModified",
                "name",
                "path",
                "readOnly",
                "scriptId",
                "severity",
                "snippet"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getImageAssurancePolicyForbiddenLabel:getImageAssurancePolicyForbiddenLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getImageAssurancePolicyPackagesBlackList:getImageAssurancePolicyPackagesBlackList": {
            "properties": {
                "arch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "display": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "epoch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "license": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "release": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "arch",
                "display",
                "epoch",
                "format",
                "license",
                "name",
                "release",
                "version",
                "versionRange"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getImageAssurancePolicyPackagesWhiteList:getImageAssurancePolicyPackagesWhiteList": {
            "properties": {
                "arch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "display": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "epoch": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "format": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "license": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "release": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versionRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "arch",
                "display",
                "epoch",
                "format",
                "license",
                "name",
                "release",
                "version",
                "versionRange"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getImageAssurancePolicyRequiredLabel:getImageAssurancePolicyRequiredLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getImageAssurancePolicyScope:getImageAssurancePolicyScope": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getImageAssurancePolicyScopeVariable:getImageAssurancePolicyScopeVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getImageAssurancePolicyScopeVariable:getImageAssurancePolicyScopeVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getImageAssurancePolicyTrustedBaseImage:getImageAssurancePolicyTrustedBaseImage": {
            "properties": {
                "imagename": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "imagename",
                "registry"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getImageHistory:getImageHistory": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "The image creation comment.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "created": {
                    "type": "string",
                    "description": "The date and time when the image was registered.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "createdBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comment",
                "created",
                "createdBy",
                "id",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getImageVulnerability:getImageVulnerability": {
            "properties": {
                "ackAuthor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ackComment": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ackExpirationConfiguredAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ackExpirationConfiguredBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ackExpirationDays": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ackScope": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "acknowledgeDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ancestorPkg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "aquaScore": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "aquaScoreClassification": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "aquaScoringSystem": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "aquaSeverity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "aquaSeverityClassification": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "aquaVectors": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "auditEventsCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blockEventsCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "classification": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "digest": {
                    "type": "string",
                    "description": "The content digest of the image.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exploitReference": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exploitType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "firstFoundDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fixVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastFoundDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modificationDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the image.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvdCvss2Score": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvdCvss2Vectors": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvdCvss3Score": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvdCvss3Severity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvdCvss3Vectors": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvdSeverity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nvdUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "os": {
                    "type": "string",
                    "description": "The operating system detected in the image\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osVersion": {
                    "type": "string",
                    "description": "The version of the OS detected in the image.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permission": {
                    "type": "string",
                    "description": "Permission of the image.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publishDate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registry": {
                    "type": "string",
                    "description": "The name of the registry where the image is stored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "repository": {
                    "type": "string",
                    "description": "The name of the image's repository.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceArchitecture": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceCpe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceHash": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceLicenses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourcePath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "severityClassification": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "solution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "temporalVector": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchAppliedBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchAppliedOn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchEnforcedBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchEnforcedOn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchPolicyEnforce": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchPolicyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchRevertedBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchRevertedOn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vPatchStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vendorCvss2Score": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vendorCvss2Vectors": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vendorSeverity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vendorStatement": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vendorUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ackAuthor",
                "ackComment",
                "ackExpirationConfiguredAt",
                "ackExpirationConfiguredBy",
                "ackExpirationDays",
                "ackScope",
                "acknowledgeDate",
                "ancestorPkg",
                "aquaScore",
                "aquaScoreClassification",
                "aquaScoringSystem",
                "aquaSeverity",
                "aquaSeverityClassification",
                "aquaVectors",
                "auditEventsCount",
                "blockEventsCount",
                "classification",
                "description",
                "digest",
                "exploitReference",
                "exploitType",
                "firstFoundDate",
                "fixVersion",
                "imageName",
                "lastFoundDate",
                "modificationDate",
                "name",
                "nvdCvss2Score",
                "nvdCvss2Vectors",
                "nvdCvss3Score",
                "nvdCvss3Severity",
                "nvdCvss3Vectors",
                "nvdSeverity",
                "nvdUrl",
                "os",
                "osVersion",
                "permission",
                "publishDate",
                "registry",
                "repository",
                "resourceArchitecture",
                "resourceCpe",
                "resourceFormat",
                "resourceHash",
                "resourceLicenses",
                "resourceName",
                "resourcePath",
                "resourceType",
                "resourceVersion",
                "severityClassification",
                "solution",
                "temporalVector",
                "vPatchAppliedBy",
                "vPatchAppliedOn",
                "vPatchEnforcedBy",
                "vPatchEnforcedOn",
                "vPatchPolicyEnforce",
                "vPatchPolicyName",
                "vPatchRevertedBy",
                "vPatchRevertedOn",
                "vPatchStatus",
                "vendorCvss2Score",
                "vendorCvss2Vectors",
                "vendorSeverity",
                "vendorStatement",
                "vendorUrl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getPermissionsSetsPermissionsSet:getPermissionsSetsPermissionsSet": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "author": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isSuper": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uiAccess": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "actions",
                "author",
                "description",
                "isSuper",
                "name",
                "uiAccess",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getRolesRole:getRolesRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permission": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "name",
                "permission",
                "scopes",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getServiceScopeVariable:getServiceScopeVariable": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getUsersSaasUser:getUsersSaasUser": {
            "properties": {
                "accountAdmin": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "confirmed": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "created": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cspRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dashboard": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "email": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getUsersSaasUserGroup:getUsersSaasUserGroup"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/getUsersSaasUserLogin:getUsersSaasUserLogin"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiaccount": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passwordReset": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sendAnnouncements": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sendNewPlugins": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sendNewRisks": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sendScanResults": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accountAdmin",
                "confirmed",
                "created",
                "cspRoles",
                "dashboard",
                "email",
                "groups",
                "logins",
                "multiaccount",
                "passwordReset",
                "provider",
                "sendAnnouncements",
                "sendNewPlugins",
                "sendNewRisks",
                "sendScanResults",
                "userId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getUsersSaasUserGroup:getUsersSaasUserGroup": {
            "properties": {
                "created": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "created",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getUsersSaasUserLogin:getUsersSaasUserLogin": {
            "properties": {
                "created": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "created",
                "id",
                "ipAddress",
                "userId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "aquasec:index/getUsersUser:getUsersUser": {
            "properties": {
                "email": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "firstTime": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isSuper": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "plan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "role": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uiAccess": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "email",
                "firstTime",
                "isSuper",
                "name",
                "plan",
                "role",
                "roles",
                "type",
                "uiAccess",
                "userId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the aquasec package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "aquaUrl": {
                "type": "string",
                "description": "This is the base URL of your Aqua instance. Can alternatively be sourced from the `AQUA_URL` environment variable.\n"
            },
            "caCertificatePath": {
                "type": "string",
                "description": "This is the file path for server CA certificates if they are not available on the host OS. Can alternatively be sourced\nfrom the `AQUA_CA_CERT_PATH` environment variable.\n"
            },
            "configPath": {
                "type": "string",
                "description": "This is the file path for Aqua provider configuration. The default configuration path is `~/.aqua/tf.config`. Can\nalternatively be sourced from the `AQUA_CONFIG` environment variable.\n"
            },
            "password": {
                "type": "string",
                "description": "This is the password that should be used to make the connection. Can alternatively be sourced from the `AQUA_PASSWORD`\nenvironment variable.\n"
            },
            "username": {
                "type": "string",
                "description": "This is the user id that should be used to make the connection. Can alternatively be sourced from the `AQUA_USER`\nenvironment variable.\n"
            },
            "verifyTls": {
                "type": "boolean",
                "description": "If true, server tls certificates will be verified by the client before making a connection. Defaults to true. Can\nalternatively be sourced from the `AQUA_TLS_VERIFY` environment variable.\n"
            }
        },
        "inputProperties": {
            "aquaUrl": {
                "type": "string",
                "description": "This is the base URL of your Aqua instance. Can alternatively be sourced from the `AQUA_URL` environment variable.\n",
                "defaultInfo": {
                    "environment": [
                        "AQUA_URL"
                    ]
                }
            },
            "caCertificatePath": {
                "type": "string",
                "description": "This is the file path for server CA certificates if they are not available on the host OS. Can alternatively be sourced\nfrom the `AQUA_CA_CERT_PATH` environment variable.\n"
            },
            "configPath": {
                "type": "string",
                "description": "This is the file path for Aqua provider configuration. The default configuration path is `~/.aqua/tf.config`. Can\nalternatively be sourced from the `AQUA_CONFIG` environment variable.\n"
            },
            "password": {
                "type": "string",
                "description": "This is the password that should be used to make the connection. Can alternatively be sourced from the `AQUA_PASSWORD`\nenvironment variable.\n",
                "defaultInfo": {
                    "environment": [
                        "AUQA_PASSWORD"
                    ]
                }
            },
            "username": {
                "type": "string",
                "description": "This is the user id that should be used to make the connection. Can alternatively be sourced from the `AQUA_USER`\nenvironment variable.\n",
                "defaultInfo": {
                    "environment": [
                        "AQUA_USERNAME"
                    ]
                }
            },
            "verifyTls": {
                "type": "boolean",
                "description": "If true, server tls certificates will be verified by the client before making a connection. Defaults to true. Can\nalternatively be sourced from the `AQUA_TLS_VERIFY` environment variable.\n"
            }
        }
    },
    "resources": {
        "aquasec:index/applicationScope:ApplicationScope": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aquasec from \"@pulumi/aquasec\";\n\nconst terraformiap = new aquasec.ApplicationScope(\"terraformiap\", {\n    // Categories is a nested block of artifacts, workloads and infrastructure\n    categories: [{\n        // Artifacts is a nested block of Image, Function, CF\n        artifacts: [{\n            // Every object requires expression(logical combinations of variables v1, v2, v3...) and list of variables consists of attribute(pre-defined) and value\n            images: [{\n                expression: \"v1 \u0026\u0026 v2\",\n                variables: [\n                    {\n                        attribute: \"aqua.registry\",\n                        value: \"test-registry\",\n                    },\n                    {\n                        attribute: \"image.repo\",\n                        value: \"nginx\",\n                    },\n                ],\n            }],\n        }],\n        // Infrastructure is a nested block of Kubernetes, OS\n        infrastructures: [{\n            // Every object requires expression and list of variables consists of attribute(pre-defined) and value\n            kubernetes: [{\n                expression: \"v1\",\n                variables: [{\n                    attribute: \"kubernetes.cluster\",\n                    value: \"aqua\",\n                }],\n            }],\n        }],\n        // Workloads is a nested block of Kubernetes, OS, CF\n        workloads: [{\n            // Every object requires expression(logical combinations of variables v1, v2, v3...) and list of variables consists of attribute(pre-defined) and value\n            kubernetes: [{\n                expression: \"v1 \u0026\u0026 v2\",\n                variables: [\n                    {\n                        attribute: \"kubernetes.cluster\",\n                        value: \"aqua\",\n                    },\n                    {\n                        attribute: \"kubernetes.namespace\",\n                        value: \"aqua\",\n                    },\n                ],\n            }],\n        }],\n    }],\n    description: \"test123\",\n});\n```\n```python\nimport pulumi\nimport pulumi_aquasec as aquasec\n\nterraformiap = aquasec.ApplicationScope(\"terraformiap\",\n    categories=[aquasec.ApplicationScopeCategoryArgs(\n        artifacts=[aquasec.ApplicationScopeCategoryArtifactArgs(\n            image=[{\n                \"expression\": \"v1 \u0026\u0026 v2\",\n                \"variables\": [\n                    {\n                        \"attribute\": \"aqua.registry\",\n                        \"value\": \"test-registry\",\n                    },\n                    {\n                        \"attribute\": \"image.repo\",\n                        \"value\": \"nginx\",\n                    },\n                ],\n            }],\n        )],\n        infrastructures=[aquasec.ApplicationScopeCategoryInfrastructureArgs(\n            kubernetes=[aquasec.ApplicationScopeCategoryInfrastructureKuberneteArgs(\n                expression=\"v1\",\n                variables=[aquasec.ApplicationScopeCategoryInfrastructureKuberneteVariableArgs(\n                    attribute=\"kubernetes.cluster\",\n                    value=\"aqua\",\n                )],\n            )],\n        )],\n        workloads=[aquasec.ApplicationScopeCategoryWorkloadArgs(\n            kubernetes=[aquasec.ApplicationScopeCategoryWorkloadKuberneteArgs(\n                expression=\"v1 \u0026\u0026 v2\",\n                variables=[\n                    aquasec.ApplicationScopeCategoryWorkloadKuberneteVariableArgs(\n                        attribute=\"kubernetes.cluster\",\n                        value=\"aqua\",\n                    ),\n                    aquasec.ApplicationScopeCategoryWorkloadKuberneteVariableArgs(\n                        attribute=\"kubernetes.namespace\",\n                        value=\"aqua\",\n                    ),\n                ],\n            )],\n        )],\n    )],\n    description=\"test123\")\n```\n```csharp\nusing Pulumi;\nusing Aquasec = Pulumi.Aquasec;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var terraformiap = new Aquasec.ApplicationScope(\"terraformiap\", new Aquasec.ApplicationScopeArgs\n        {\n            Categories = \n            {\n                new Aquasec.Inputs.ApplicationScopeCategoryArgs\n                {\n                    Artifacts = \n                    {\n                        new Aquasec.Inputs.ApplicationScopeCategoryArtifactArgs\n                        {\n                            Image = \n                            {\n                                \n                                {\n                                    { \"expression\", \"v1 \u0026\u0026 v2\" },\n                                    { \"variables\", \n                                    {\n                                        \n                                        {\n                                            { \"attribute\", \"aqua.registry\" },\n                                            { \"value\", \"test-registry\" },\n                                        },\n                                        \n                                        {\n                                            { \"attribute\", \"image.repo\" },\n                                            { \"value\", \"nginx\" },\n                                        },\n                                    } },\n                                },\n                            },\n                        },\n                    },\n                    Infrastructures = \n                    {\n                        new Aquasec.Inputs.ApplicationScopeCategoryInfrastructureArgs\n                        {\n                            Kubernetes = \n                            {\n                                new Aquasec.Inputs.ApplicationScopeCategoryInfrastructureKuberneteArgs\n                                {\n                                    Expression = \"v1\",\n                                    Variables = \n                                    {\n                                        new Aquasec.Inputs.ApplicationScopeCategoryInfrastructureKuberneteVariableArgs\n                                        {\n                                            Attribute = \"kubernetes.cluster\",\n                                            Value = \"aqua\",\n                                        },\n                                    },\n                                },\n                            },\n                        },\n                    },\n                    Workloads = \n                    {\n                        new Aquasec.Inputs.ApplicationScopeCategoryWorkloadArgs\n                        {\n                            Kubernetes = \n                            {\n                                new Aquasec.Inputs.ApplicationScopeCategoryWorkloadKuberneteArgs\n                                {\n                                    Expression = \"v1 \u0026\u0026 v2\",\n                                    Variables = \n                                    {\n                                        new Aquasec.Inputs.ApplicationScopeCategoryWorkloadKuberneteVariableArgs\n                                        {\n                                            Attribute = \"kubernetes.cluster\",\n                                            Value = \"aqua\",\n                                        },\n                                        new Aquasec.Inputs.ApplicationScopeCategoryWorkloadKuberneteVariableArgs\n                                        {\n                                            Attribute = \"kubernetes.namespace\",\n                                            Value = \"aqua\",\n                                        },\n                                    },\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n            Description = \"test123\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aquasec/sdk/go/aquasec\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aquasec.NewApplicationScope(ctx, \"terraformiap\", \u0026aquasec.ApplicationScopeArgs{\n\t\t\tCategories: ApplicationScopeCategoryArray{\n\t\t\t\t\u0026ApplicationScopeCategoryArgs{\n\t\t\t\t\tArtifacts: ApplicationScopeCategoryArtifactArray{\n\t\t\t\t\t\t\u0026ApplicationScopeCategoryArtifactArgs{\n\t\t\t\t\t\t\tImage: []map[string]interface{}{\n\t\t\t\t\t\t\t\tmap[string]interface{}{\n\t\t\t\t\t\t\t\t\t\"expression\": \"v1 \u0026\u0026 v2\",\n\t\t\t\t\t\t\t\t\t\"variables\": []map[string]interface{}{\n\t\t\t\t\t\t\t\t\t\tmap[string]interface{}{\n\t\t\t\t\t\t\t\t\t\t\t\"attribute\": \"aqua.registry\",\n\t\t\t\t\t\t\t\t\t\t\t\"value\":     \"test-registry\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tmap[string]interface{}{\n\t\t\t\t\t\t\t\t\t\t\t\"attribute\": \"image.repo\",\n\t\t\t\t\t\t\t\t\t\t\t\"value\":     \"nginx\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tInfrastructures: ApplicationScopeCategoryInfrastructureArray{\n\t\t\t\t\t\t\u0026ApplicationScopeCategoryInfrastructureArgs{\n\t\t\t\t\t\t\tKubernetes: ApplicationScopeCategoryInfrastructureKuberneteArray{\n\t\t\t\t\t\t\t\t\u0026ApplicationScopeCategoryInfrastructureKuberneteArgs{\n\t\t\t\t\t\t\t\t\tExpression: pulumi.String(\"v1\"),\n\t\t\t\t\t\t\t\t\tVariables: ApplicationScopeCategoryInfrastructureKuberneteVariableArray{\n\t\t\t\t\t\t\t\t\t\t\u0026ApplicationScopeCategoryInfrastructureKuberneteVariableArgs{\n\t\t\t\t\t\t\t\t\t\t\tAttribute: pulumi.String(\"kubernetes.cluster\"),\n\t\t\t\t\t\t\t\t\t\t\tValue:     pulumi.String(\"aqua\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tWorkloads: ApplicationScopeCategoryWorkloadArray{\n\t\t\t\t\t\t\u0026ApplicationScopeCategoryWorkloadArgs{\n\t\t\t\t\t\t\tKubernetes: ApplicationScopeCategoryWorkloadKuberneteArray{\n\t\t\t\t\t\t\t\t\u0026ApplicationScopeCategoryWorkloadKuberneteArgs{\n\t\t\t\t\t\t\t\t\tExpression: pulumi.String(\"v1 \u0026\u0026 v2\"),\n\t\t\t\t\t\t\t\t\tVariables: ApplicationScopeCategoryWorkloadKuberneteVariableArray{\n\t\t\t\t\t\t\t\t\t\t\u0026ApplicationScopeCategoryWorkloadKuberneteVariableArgs{\n\t\t\t\t\t\t\t\t\t\t\tAttribute: pulumi.String(\"kubernetes.cluster\"),\n\t\t\t\t\t\t\t\t\t\t\tValue:     pulumi.String(\"aqua\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\u0026ApplicationScopeCategoryWorkloadKuberneteVariableArgs{\n\t\t\t\t\t\t\t\t\t\t\tAttribute: pulumi.String(\"kubernetes.namespace\"),\n\t\t\t\t\t\t\t\t\t\t\tValue:     pulumi.String(\"aqua\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"test123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "author": {
                    "type": "string"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategory:ApplicationScopeCategory"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ownerEmail": {
                    "type": "string"
                }
            },
            "required": [
                "author",
                "name"
            ],
            "inputProperties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ApplicationScopeCategory:ApplicationScopeCategory"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ownerEmail": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationScope resources.\n",
                "properties": {
                    "author": {
                        "type": "string"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/ApplicationScopeCategory:ApplicationScopeCategory"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ownerEmail": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/aquasecHostRuntimePolicy:AquasecHostRuntimePolicy": {
            "properties": {
                "applicationScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the application scope of the service.\n"
                },
                "auditAllOsUserActivity": {
                    "type": "boolean",
                    "description": "If true, all process activity will be audited.\n"
                },
                "auditFullCommandArguments": {
                    "type": "boolean",
                    "description": "If true, full command arguments will be audited.\n"
                },
                "author": {
                    "type": "string",
                    "description": "Username of the account that created the service.\n"
                },
                "blockedFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of files that are prevented from being read, modified and executed in the containers.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the host runtime policy\n"
                },
                "enableIpReputationSecurity": {
                    "type": "boolean",
                    "description": "If true, detect and prevent communication from containers to IP addresses known to have a bad reputation.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates if the runtime policy is enabled or not.\n"
                },
                "enforce": {
                    "type": "boolean",
                    "description": "Indicates that policy should effect container execution (not just for audit).\n"
                },
                "enforceAfterDays": {
                    "type": "integer",
                    "description": "Indicates the number of days after which the runtime policy will be changed to enforce mode.\n"
                },
                "fileIntegrityMonitoring": {
                    "$ref": "#/types/aquasec:index/AquasecHostRuntimePolicyFileIntegrityMonitoring:AquasecHostRuntimePolicyFileIntegrityMonitoring",
                    "description": "Configuration for file integrity monitoring.\n"
                },
                "monitorSystemTimeChanges": {
                    "type": "boolean",
                    "description": "If true, system time changes will be monitored.\n"
                },
                "monitorWindowsServices": {
                    "type": "boolean",
                    "description": "If true, windows service operations will be monitored.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the host runtime policy\n"
                },
                "osGroupsAlloweds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OS (Linux or Windows) groups that are allowed to authenticate to the host, and block authentication requests from all others. Groups can be either Linux groups or Windows AD groups.\n"
                },
                "osGroupsBlockeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OS (Linux or Windows) groups that are not allowed to authenticate to the host, and block authentication requests from all others. Groups can be either Linux groups or Windows AD groups.\n"
                },
                "osUsersAlloweds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OS (Linux or Windows) users that are allowed to authenticate to the host, and block authentication requests from all others.\n"
                },
                "osUsersBlockeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OS (Linux or Windows) users that are not allowed to authenticate to the host, and block authentication requests from all others.\n"
                },
                "scopeExpression": {
                    "type": "string",
                    "description": "Logical expression of how to compute the dependency of the scope variables.\n"
                },
                "scopeVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/AquasecHostRuntimePolicyScopeVariable:AquasecHostRuntimePolicyScopeVariable"
                    },
                    "description": "List of scope attributes.\n"
                },
                "windowsRegistryMonitoring": {
                    "$ref": "#/types/aquasec:index/AquasecHostRuntimePolicyWindowsRegistryMonitoring:AquasecHostRuntimePolicyWindowsRegistryMonitoring",
                    "description": "Configuration for windows registry monitoring.\n"
                },
                "windowsRegistryProtection": {
                    "$ref": "#/types/aquasec:index/AquasecHostRuntimePolicyWindowsRegistryProtection:AquasecHostRuntimePolicyWindowsRegistryProtection",
                    "description": "Configuration for windows registry protection.\n"
                }
            },
            "required": [
                "applicationScopes",
                "author",
                "name",
                "scopeExpression",
                "scopeVariables"
            ],
            "inputProperties": {
                "applicationScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the application scope of the service.\n"
                },
                "auditAllOsUserActivity": {
                    "type": "boolean",
                    "description": "If true, all process activity will be audited.\n"
                },
                "auditFullCommandArguments": {
                    "type": "boolean",
                    "description": "If true, full command arguments will be audited.\n"
                },
                "blockedFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of files that are prevented from being read, modified and executed in the containers.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the host runtime policy\n"
                },
                "enableIpReputationSecurity": {
                    "type": "boolean",
                    "description": "If true, detect and prevent communication from containers to IP addresses known to have a bad reputation.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates if the runtime policy is enabled or not.\n"
                },
                "enforce": {
                    "type": "boolean",
                    "description": "Indicates that policy should effect container execution (not just for audit).\n"
                },
                "enforceAfterDays": {
                    "type": "integer",
                    "description": "Indicates the number of days after which the runtime policy will be changed to enforce mode.\n"
                },
                "fileIntegrityMonitoring": {
                    "$ref": "#/types/aquasec:index/AquasecHostRuntimePolicyFileIntegrityMonitoring:AquasecHostRuntimePolicyFileIntegrityMonitoring",
                    "description": "Configuration for file integrity monitoring.\n"
                },
                "monitorSystemTimeChanges": {
                    "type": "boolean",
                    "description": "If true, system time changes will be monitored.\n"
                },
                "monitorWindowsServices": {
                    "type": "boolean",
                    "description": "If true, windows service operations will be monitored.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the host runtime policy\n"
                },
                "osGroupsAlloweds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OS (Linux or Windows) groups that are allowed to authenticate to the host, and block authentication requests from all others. Groups can be either Linux groups or Windows AD groups.\n"
                },
                "osGroupsBlockeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OS (Linux or Windows) groups that are not allowed to authenticate to the host, and block authentication requests from all others. Groups can be either Linux groups or Windows AD groups.\n"
                },
                "osUsersAlloweds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OS (Linux or Windows) users that are allowed to authenticate to the host, and block authentication requests from all others.\n"
                },
                "osUsersBlockeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OS (Linux or Windows) users that are not allowed to authenticate to the host, and block authentication requests from all others.\n"
                },
                "scopeExpression": {
                    "type": "string",
                    "description": "Logical expression of how to compute the dependency of the scope variables.\n"
                },
                "scopeVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/AquasecHostRuntimePolicyScopeVariable:AquasecHostRuntimePolicyScopeVariable"
                    },
                    "description": "List of scope attributes.\n"
                },
                "windowsRegistryMonitoring": {
                    "$ref": "#/types/aquasec:index/AquasecHostRuntimePolicyWindowsRegistryMonitoring:AquasecHostRuntimePolicyWindowsRegistryMonitoring",
                    "description": "Configuration for windows registry monitoring.\n"
                },
                "windowsRegistryProtection": {
                    "$ref": "#/types/aquasec:index/AquasecHostRuntimePolicyWindowsRegistryProtection:AquasecHostRuntimePolicyWindowsRegistryProtection",
                    "description": "Configuration for windows registry protection.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AquasecHostRuntimePolicy resources.\n",
                "properties": {
                    "applicationScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates the application scope of the service.\n"
                    },
                    "auditAllOsUserActivity": {
                        "type": "boolean",
                        "description": "If true, all process activity will be audited.\n"
                    },
                    "auditFullCommandArguments": {
                        "type": "boolean",
                        "description": "If true, full command arguments will be audited.\n"
                    },
                    "author": {
                        "type": "string",
                        "description": "Username of the account that created the service.\n"
                    },
                    "blockedFiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of files that are prevented from being read, modified and executed in the containers.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the host runtime policy\n"
                    },
                    "enableIpReputationSecurity": {
                        "type": "boolean",
                        "description": "If true, detect and prevent communication from containers to IP addresses known to have a bad reputation.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates if the runtime policy is enabled or not.\n"
                    },
                    "enforce": {
                        "type": "boolean",
                        "description": "Indicates that policy should effect container execution (not just for audit).\n"
                    },
                    "enforceAfterDays": {
                        "type": "integer",
                        "description": "Indicates the number of days after which the runtime policy will be changed to enforce mode.\n"
                    },
                    "fileIntegrityMonitoring": {
                        "$ref": "#/types/aquasec:index/AquasecHostRuntimePolicyFileIntegrityMonitoring:AquasecHostRuntimePolicyFileIntegrityMonitoring",
                        "description": "Configuration for file integrity monitoring.\n"
                    },
                    "monitorSystemTimeChanges": {
                        "type": "boolean",
                        "description": "If true, system time changes will be monitored.\n"
                    },
                    "monitorWindowsServices": {
                        "type": "boolean",
                        "description": "If true, windows service operations will be monitored.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the host runtime policy\n"
                    },
                    "osGroupsAlloweds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OS (Linux or Windows) groups that are allowed to authenticate to the host, and block authentication requests from all others. Groups can be either Linux groups or Windows AD groups.\n"
                    },
                    "osGroupsBlockeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OS (Linux or Windows) groups that are not allowed to authenticate to the host, and block authentication requests from all others. Groups can be either Linux groups or Windows AD groups.\n"
                    },
                    "osUsersAlloweds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OS (Linux or Windows) users that are allowed to authenticate to the host, and block authentication requests from all others.\n"
                    },
                    "osUsersBlockeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OS (Linux or Windows) users that are not allowed to authenticate to the host, and block authentication requests from all others.\n"
                    },
                    "scopeExpression": {
                        "type": "string",
                        "description": "Logical expression of how to compute the dependency of the scope variables.\n"
                    },
                    "scopeVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/AquasecHostRuntimePolicyScopeVariable:AquasecHostRuntimePolicyScopeVariable"
                        },
                        "description": "List of scope attributes.\n"
                    },
                    "windowsRegistryMonitoring": {
                        "$ref": "#/types/aquasec:index/AquasecHostRuntimePolicyWindowsRegistryMonitoring:AquasecHostRuntimePolicyWindowsRegistryMonitoring",
                        "description": "Configuration for windows registry monitoring.\n"
                    },
                    "windowsRegistryProtection": {
                        "$ref": "#/types/aquasec:index/AquasecHostRuntimePolicyWindowsRegistryProtection:AquasecHostRuntimePolicyWindowsRegistryProtection",
                        "description": "Configuration for windows registry protection.\n"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/containerRuntimePolicy:ContainerRuntimePolicy": {
            "properties": {
                "allowedExecutables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of executables that are allowed for the user.\n"
                },
                "applicationScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the application scope of the service.\n"
                },
                "auditAllNetworkActivity": {
                    "type": "boolean",
                    "description": "If true, all network activity will be audited.\n"
                },
                "auditAllProcessesActivity": {
                    "type": "boolean",
                    "description": "If true, all process activity will be audited.\n"
                },
                "auditFullCommandArguments": {
                    "type": "boolean",
                    "description": "If true, full command arguments will be audited.\n"
                },
                "author": {
                    "type": "string",
                    "description": "Username of the account that created the service.\n"
                },
                "blockAccessHostNetwork": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with access to host network.\n"
                },
                "blockAddingCapabilities": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with adding capabilities with `--cap-add` privilege.\n"
                },
                "blockContainerExec": {
                    "type": "boolean",
                    "description": "If true, exec into a container is prevented.\n"
                },
                "blockLowPortBinding": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with the capability to bind in port lower than 1024.\n"
                },
                "blockNonCompliantImages": {
                    "type": "boolean",
                    "description": "If true, running non-compliant image in the container is prevented.\n"
                },
                "blockNonCompliantWorkloads": {
                    "type": "boolean",
                    "description": "If true, running containers in non-compliant pods is prevented.\n"
                },
                "blockPrivilegedContainers": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with privileged container capability.\n"
                },
                "blockRootUser": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with root user.\n"
                },
                "blockUnregisteredImages": {
                    "type": "boolean",
                    "description": "If true, running images in the container that are not registered in Aqua is prevented.\n"
                },
                "blockUseIpcNamespace": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with the privilege to use the IPC namespace.\n"
                },
                "blockUsePidNamespace": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with the privilege to use the PID namespace.\n"
                },
                "blockUseUserNamespace": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with the privilege to use the user namespace.\n"
                },
                "blockUseUtsNamespace": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with the privilege to use the UTS namespace.\n"
                },
                "blockedCapabilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If true, prevents containers from using specific Unix capabilities.\n"
                },
                "blockedExecutables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of executables that are prevented from running in containers.\n"
                },
                "blockedFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of files that are prevented from being read, modified and executed in the containers.\n"
                },
                "blockedInboundPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of blocked inbound ports.\n"
                },
                "blockedOutboundPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of blocked outbound ports.\n"
                },
                "blockedPackages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Prevent containers from reading, writing, or executing all files in the list of packages.\n"
                },
                "blockedVolumes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of volumes that are prevented from being mounted in the containers.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the container runtime policy\n"
                },
                "enableDriftPrevention": {
                    "type": "boolean",
                    "description": "If true, executables that are not in the original image is prevented from running.\n"
                },
                "enableForkGuard": {
                    "type": "boolean",
                    "description": "If true, fork bombs are prevented in the containers.\n"
                },
                "enableIpReputationSecurity": {
                    "type": "boolean",
                    "description": "If true, detect and prevent communication from containers to IP addresses known to have a bad reputation.\n"
                },
                "enablePortScanDetection": {
                    "type": "boolean",
                    "description": "If true, detects port scanning behavior in the container.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates if the runtime policy is enabled or not.\n"
                },
                "enforce": {
                    "type": "boolean",
                    "description": "Indicates that policy should effect container execution (not just for audit).\n"
                },
                "enforceAfterDays": {
                    "type": "integer",
                    "description": "Indicates the number of days after which the runtime policy will be changed to enforce mode.\n"
                },
                "exceptionalReadonlyFilesAndDirectories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of files and directories to be excluded from the read-only list.\n"
                },
                "forkGuardProcessLimit": {
                    "type": "integer",
                    "description": "Process limit for the fork guard.\n"
                },
                "limitNewPrivileges": {
                    "type": "boolean",
                    "description": "If true, prevents the container from obtaining new privileges at runtime. (only enabled in enforce mode)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the container runtime policy\n"
                },
                "readonlyFilesAndDirectories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of files and directories to be restricted as read-only\n"
                },
                "scopeExpression": {
                    "type": "string",
                    "description": "Logical expression of how to compute the dependency of the scope variables.\n"
                },
                "scopeVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ContainerRuntimePolicyScopeVariable:ContainerRuntimePolicyScopeVariable"
                    },
                    "description": "List of scope attributes.\n"
                }
            },
            "required": [
                "applicationScopes",
                "author",
                "name",
                "scopeExpression",
                "scopeVariables"
            ],
            "inputProperties": {
                "allowedExecutables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of executables that are allowed for the user.\n"
                },
                "applicationScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the application scope of the service.\n"
                },
                "auditAllNetworkActivity": {
                    "type": "boolean",
                    "description": "If true, all network activity will be audited.\n"
                },
                "auditAllProcessesActivity": {
                    "type": "boolean",
                    "description": "If true, all process activity will be audited.\n"
                },
                "auditFullCommandArguments": {
                    "type": "boolean",
                    "description": "If true, full command arguments will be audited.\n"
                },
                "blockAccessHostNetwork": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with access to host network.\n"
                },
                "blockAddingCapabilities": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with adding capabilities with `--cap-add` privilege.\n"
                },
                "blockContainerExec": {
                    "type": "boolean",
                    "description": "If true, exec into a container is prevented.\n"
                },
                "blockLowPortBinding": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with the capability to bind in port lower than 1024.\n"
                },
                "blockNonCompliantImages": {
                    "type": "boolean",
                    "description": "If true, running non-compliant image in the container is prevented.\n"
                },
                "blockNonCompliantWorkloads": {
                    "type": "boolean",
                    "description": "If true, running containers in non-compliant pods is prevented.\n"
                },
                "blockPrivilegedContainers": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with privileged container capability.\n"
                },
                "blockRootUser": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with root user.\n"
                },
                "blockUnregisteredImages": {
                    "type": "boolean",
                    "description": "If true, running images in the container that are not registered in Aqua is prevented.\n"
                },
                "blockUseIpcNamespace": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with the privilege to use the IPC namespace.\n"
                },
                "blockUsePidNamespace": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with the privilege to use the PID namespace.\n"
                },
                "blockUseUserNamespace": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with the privilege to use the user namespace.\n"
                },
                "blockUseUtsNamespace": {
                    "type": "boolean",
                    "description": "If true, prevent containers from running with the privilege to use the UTS namespace.\n"
                },
                "blockedCapabilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If true, prevents containers from using specific Unix capabilities.\n"
                },
                "blockedExecutables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of executables that are prevented from running in containers.\n"
                },
                "blockedFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of files that are prevented from being read, modified and executed in the containers.\n"
                },
                "blockedInboundPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of blocked inbound ports.\n"
                },
                "blockedOutboundPorts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of blocked outbound ports.\n"
                },
                "blockedPackages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Prevent containers from reading, writing, or executing all files in the list of packages.\n"
                },
                "blockedVolumes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of volumes that are prevented from being mounted in the containers.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the container runtime policy\n"
                },
                "enableDriftPrevention": {
                    "type": "boolean",
                    "description": "If true, executables that are not in the original image is prevented from running.\n"
                },
                "enableForkGuard": {
                    "type": "boolean",
                    "description": "If true, fork bombs are prevented in the containers.\n"
                },
                "enableIpReputationSecurity": {
                    "type": "boolean",
                    "description": "If true, detect and prevent communication from containers to IP addresses known to have a bad reputation.\n"
                },
                "enablePortScanDetection": {
                    "type": "boolean",
                    "description": "If true, detects port scanning behavior in the container.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates if the runtime policy is enabled or not.\n"
                },
                "enforce": {
                    "type": "boolean",
                    "description": "Indicates that policy should effect container execution (not just for audit).\n"
                },
                "enforceAfterDays": {
                    "type": "integer",
                    "description": "Indicates the number of days after which the runtime policy will be changed to enforce mode.\n"
                },
                "exceptionalReadonlyFilesAndDirectories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of files and directories to be excluded from the read-only list.\n"
                },
                "forkGuardProcessLimit": {
                    "type": "integer",
                    "description": "Process limit for the fork guard.\n"
                },
                "limitNewPrivileges": {
                    "type": "boolean",
                    "description": "If true, prevents the container from obtaining new privileges at runtime. (only enabled in enforce mode)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the container runtime policy\n"
                },
                "readonlyFilesAndDirectories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of files and directories to be restricted as read-only\n"
                },
                "scopeExpression": {
                    "type": "string",
                    "description": "Logical expression of how to compute the dependency of the scope variables.\n"
                },
                "scopeVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ContainerRuntimePolicyScopeVariable:ContainerRuntimePolicyScopeVariable"
                    },
                    "description": "List of scope attributes.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRuntimePolicy resources.\n",
                "properties": {
                    "allowedExecutables": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of executables that are allowed for the user.\n"
                    },
                    "applicationScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates the application scope of the service.\n"
                    },
                    "auditAllNetworkActivity": {
                        "type": "boolean",
                        "description": "If true, all network activity will be audited.\n"
                    },
                    "auditAllProcessesActivity": {
                        "type": "boolean",
                        "description": "If true, all process activity will be audited.\n"
                    },
                    "auditFullCommandArguments": {
                        "type": "boolean",
                        "description": "If true, full command arguments will be audited.\n"
                    },
                    "author": {
                        "type": "string",
                        "description": "Username of the account that created the service.\n"
                    },
                    "blockAccessHostNetwork": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with access to host network.\n"
                    },
                    "blockAddingCapabilities": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with adding capabilities with `--cap-add` privilege.\n"
                    },
                    "blockContainerExec": {
                        "type": "boolean",
                        "description": "If true, exec into a container is prevented.\n"
                    },
                    "blockLowPortBinding": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with the capability to bind in port lower than 1024.\n"
                    },
                    "blockNonCompliantImages": {
                        "type": "boolean",
                        "description": "If true, running non-compliant image in the container is prevented.\n"
                    },
                    "blockNonCompliantWorkloads": {
                        "type": "boolean",
                        "description": "If true, running containers in non-compliant pods is prevented.\n"
                    },
                    "blockPrivilegedContainers": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with privileged container capability.\n"
                    },
                    "blockRootUser": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with root user.\n"
                    },
                    "blockUnregisteredImages": {
                        "type": "boolean",
                        "description": "If true, running images in the container that are not registered in Aqua is prevented.\n"
                    },
                    "blockUseIpcNamespace": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with the privilege to use the IPC namespace.\n"
                    },
                    "blockUsePidNamespace": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with the privilege to use the PID namespace.\n"
                    },
                    "blockUseUserNamespace": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with the privilege to use the user namespace.\n"
                    },
                    "blockUseUtsNamespace": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with the privilege to use the UTS namespace.\n"
                    },
                    "blockedCapabilities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "If true, prevents containers from using specific Unix capabilities.\n"
                    },
                    "blockedExecutables": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of executables that are prevented from running in containers.\n"
                    },
                    "blockedFiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of files that are prevented from being read, modified and executed in the containers.\n"
                    },
                    "blockedInboundPorts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of blocked inbound ports.\n"
                    },
                    "blockedOutboundPorts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of blocked outbound ports.\n"
                    },
                    "blockedPackages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Prevent containers from reading, writing, or executing all files in the list of packages.\n"
                    },
                    "blockedVolumes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of volumes that are prevented from being mounted in the containers.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the container runtime policy\n"
                    },
                    "enableDriftPrevention": {
                        "type": "boolean",
                        "description": "If true, executables that are not in the original image is prevented from running.\n"
                    },
                    "enableForkGuard": {
                        "type": "boolean",
                        "description": "If true, fork bombs are prevented in the containers.\n"
                    },
                    "enableIpReputationSecurity": {
                        "type": "boolean",
                        "description": "If true, detect and prevent communication from containers to IP addresses known to have a bad reputation.\n"
                    },
                    "enablePortScanDetection": {
                        "type": "boolean",
                        "description": "If true, detects port scanning behavior in the container.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates if the runtime policy is enabled or not.\n"
                    },
                    "enforce": {
                        "type": "boolean",
                        "description": "Indicates that policy should effect container execution (not just for audit).\n"
                    },
                    "enforceAfterDays": {
                        "type": "integer",
                        "description": "Indicates the number of days after which the runtime policy will be changed to enforce mode.\n"
                    },
                    "exceptionalReadonlyFilesAndDirectories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of files and directories to be excluded from the read-only list.\n"
                    },
                    "forkGuardProcessLimit": {
                        "type": "integer",
                        "description": "Process limit for the fork guard.\n"
                    },
                    "limitNewPrivileges": {
                        "type": "boolean",
                        "description": "If true, prevents the container from obtaining new privileges at runtime. (only enabled in enforce mode)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the container runtime policy\n"
                    },
                    "readonlyFilesAndDirectories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of files and directories to be restricted as read-only\n"
                    },
                    "scopeExpression": {
                        "type": "string",
                        "description": "Logical expression of how to compute the dependency of the scope variables.\n"
                    },
                    "scopeVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/ContainerRuntimePolicyScopeVariable:ContainerRuntimePolicyScopeVariable"
                        },
                        "description": "List of scope attributes.\n"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/enforcerGroups:EnforcerGroups": {
            "properties": {
                "admissionControl": {
                    "type": "boolean"
                },
                "allowKubeEnforcerAudit": {
                    "type": "boolean"
                },
                "allowedApplications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowedLabels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowedRegistries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "antivirusProtection": {
                    "type": "boolean"
                },
                "aquaVersion": {
                    "type": "string"
                },
                "auditAll": {
                    "type": "boolean"
                },
                "autoCopySecrets": {
                    "type": "boolean"
                },
                "autoDiscoverConfigureRegistries": {
                    "type": "boolean"
                },
                "autoDiscoveryEnabled": {
                    "type": "boolean"
                },
                "autoScanDiscoveredImagesRunningContainers": {
                    "type": "boolean"
                },
                "behavioralEngine": {
                    "type": "boolean"
                },
                "blockAdmissionControl": {
                    "type": "boolean"
                },
                "commands": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/EnforcerGroupsCommand:EnforcerGroupsCommand"
                    }
                },
                "connectedCount": {
                    "type": "integer"
                },
                "containerActivityProtection": {
                    "type": "boolean"
                },
                "containerAntivirusProtection": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "disconnectedCount": {
                    "type": "integer"
                },
                "enforce": {
                    "type": "boolean"
                },
                "enforcerImageName": {
                    "type": "string"
                },
                "gatewayAddress": {
                    "type": "string"
                },
                "gatewayName": {
                    "type": "string"
                },
                "gateways": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupId": {
                    "type": "string"
                },
                "highVulns": {
                    "type": "integer"
                },
                "hostAssurance": {
                    "type": "boolean"
                },
                "hostBehavioralEngine": {
                    "type": "boolean"
                },
                "hostNetworkProtection": {
                    "type": "boolean"
                },
                "hostOs": {
                    "type": "string"
                },
                "hostProtection": {
                    "type": "boolean"
                },
                "hostUserProtection": {
                    "type": "boolean"
                },
                "hostname": {
                    "type": "string"
                },
                "hostsCount": {
                    "type": "integer"
                },
                "imageAssurance": {
                    "type": "boolean"
                },
                "installCommand": {
                    "type": "string"
                },
                "kubeBenchImageName": {
                    "type": "string"
                },
                "lastUpdate": {
                    "type": "integer"
                },
                "logicalName": {
                    "type": "string"
                },
                "lowVulns": {
                    "type": "integer"
                },
                "medVulns": {
                    "type": "integer"
                },
                "microEnforcerCertsSecretsName": {
                    "type": "string"
                },
                "microEnforcerImageName": {
                    "type": "string"
                },
                "microEnforcerInjection": {
                    "type": "boolean"
                },
                "microEnforcerSecretsName": {
                    "type": "string"
                },
                "negVulns": {
                    "type": "integer"
                },
                "networkActivityProtection": {
                    "type": "boolean"
                },
                "networkProtection": {
                    "type": "boolean"
                },
                "orchestrators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/EnforcerGroupsOrchestrator:EnforcerGroupsOrchestrator"
                    }
                },
                "pasDeploymentLink": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "riskExplorerAutoDiscovery": {
                    "type": "boolean"
                },
                "runtimePolicyName": {
                    "type": "string"
                },
                "runtimeType": {
                    "type": "string"
                },
                "syncHostImages": {
                    "type": "boolean"
                },
                "syscallEnabled": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userAccessControl": {
                    "type": "boolean"
                }
            },
            "required": [
                "aquaVersion",
                "commands",
                "connectedCount",
                "disconnectedCount",
                "enforcerImageName",
                "gatewayAddress",
                "gatewayName",
                "groupId",
                "highVulns",
                "hostOs",
                "hostname",
                "hostsCount",
                "installCommand",
                "lastUpdate",
                "lowVulns",
                "medVulns",
                "negVulns",
                "orchestrators",
                "pasDeploymentLink",
                "runtimePolicyName",
                "runtimeType",
                "token",
                "type"
            ],
            "inputProperties": {
                "admissionControl": {
                    "type": "boolean"
                },
                "allowKubeEnforcerAudit": {
                    "type": "boolean"
                },
                "allowedApplications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowedLabels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowedRegistries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "antivirusProtection": {
                    "type": "boolean"
                },
                "auditAll": {
                    "type": "boolean"
                },
                "autoCopySecrets": {
                    "type": "boolean"
                },
                "autoDiscoverConfigureRegistries": {
                    "type": "boolean"
                },
                "autoDiscoveryEnabled": {
                    "type": "boolean"
                },
                "autoScanDiscoveredImagesRunningContainers": {
                    "type": "boolean"
                },
                "behavioralEngine": {
                    "type": "boolean"
                },
                "blockAdmissionControl": {
                    "type": "boolean"
                },
                "containerActivityProtection": {
                    "type": "boolean"
                },
                "containerAntivirusProtection": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "enforce": {
                    "type": "boolean"
                },
                "gateways": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupId": {
                    "type": "string"
                },
                "hostAssurance": {
                    "type": "boolean"
                },
                "hostBehavioralEngine": {
                    "type": "boolean"
                },
                "hostNetworkProtection": {
                    "type": "boolean"
                },
                "hostProtection": {
                    "type": "boolean"
                },
                "hostUserProtection": {
                    "type": "boolean"
                },
                "imageAssurance": {
                    "type": "boolean"
                },
                "kubeBenchImageName": {
                    "type": "string"
                },
                "logicalName": {
                    "type": "string"
                },
                "microEnforcerCertsSecretsName": {
                    "type": "string"
                },
                "microEnforcerImageName": {
                    "type": "string"
                },
                "microEnforcerInjection": {
                    "type": "boolean"
                },
                "microEnforcerSecretsName": {
                    "type": "string"
                },
                "networkActivityProtection": {
                    "type": "boolean"
                },
                "networkProtection": {
                    "type": "boolean"
                },
                "orchestrators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/EnforcerGroupsOrchestrator:EnforcerGroupsOrchestrator"
                    }
                },
                "permission": {
                    "type": "string"
                },
                "riskExplorerAutoDiscovery": {
                    "type": "boolean"
                },
                "syncHostImages": {
                    "type": "boolean"
                },
                "syscallEnabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "userAccessControl": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "groupId",
                "orchestrators",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EnforcerGroups resources.\n",
                "properties": {
                    "admissionControl": {
                        "type": "boolean"
                    },
                    "allowKubeEnforcerAudit": {
                        "type": "boolean"
                    },
                    "allowedApplications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowedLabels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowedRegistries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "antivirusProtection": {
                        "type": "boolean"
                    },
                    "aquaVersion": {
                        "type": "string"
                    },
                    "auditAll": {
                        "type": "boolean"
                    },
                    "autoCopySecrets": {
                        "type": "boolean"
                    },
                    "autoDiscoverConfigureRegistries": {
                        "type": "boolean"
                    },
                    "autoDiscoveryEnabled": {
                        "type": "boolean"
                    },
                    "autoScanDiscoveredImagesRunningContainers": {
                        "type": "boolean"
                    },
                    "behavioralEngine": {
                        "type": "boolean"
                    },
                    "blockAdmissionControl": {
                        "type": "boolean"
                    },
                    "commands": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/EnforcerGroupsCommand:EnforcerGroupsCommand"
                        }
                    },
                    "connectedCount": {
                        "type": "integer"
                    },
                    "containerActivityProtection": {
                        "type": "boolean"
                    },
                    "containerAntivirusProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "disconnectedCount": {
                        "type": "integer"
                    },
                    "enforce": {
                        "type": "boolean"
                    },
                    "enforcerImageName": {
                        "type": "string"
                    },
                    "gatewayAddress": {
                        "type": "string"
                    },
                    "gatewayName": {
                        "type": "string"
                    },
                    "gateways": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "highVulns": {
                        "type": "integer"
                    },
                    "hostAssurance": {
                        "type": "boolean"
                    },
                    "hostBehavioralEngine": {
                        "type": "boolean"
                    },
                    "hostNetworkProtection": {
                        "type": "boolean"
                    },
                    "hostOs": {
                        "type": "string"
                    },
                    "hostProtection": {
                        "type": "boolean"
                    },
                    "hostUserProtection": {
                        "type": "boolean"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "hostsCount": {
                        "type": "integer"
                    },
                    "imageAssurance": {
                        "type": "boolean"
                    },
                    "installCommand": {
                        "type": "string"
                    },
                    "kubeBenchImageName": {
                        "type": "string"
                    },
                    "lastUpdate": {
                        "type": "integer"
                    },
                    "logicalName": {
                        "type": "string"
                    },
                    "lowVulns": {
                        "type": "integer"
                    },
                    "medVulns": {
                        "type": "integer"
                    },
                    "microEnforcerCertsSecretsName": {
                        "type": "string"
                    },
                    "microEnforcerImageName": {
                        "type": "string"
                    },
                    "microEnforcerInjection": {
                        "type": "boolean"
                    },
                    "microEnforcerSecretsName": {
                        "type": "string"
                    },
                    "negVulns": {
                        "type": "integer"
                    },
                    "networkActivityProtection": {
                        "type": "boolean"
                    },
                    "networkProtection": {
                        "type": "boolean"
                    },
                    "orchestrators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/EnforcerGroupsOrchestrator:EnforcerGroupsOrchestrator"
                        }
                    },
                    "pasDeploymentLink": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "riskExplorerAutoDiscovery": {
                        "type": "boolean"
                    },
                    "runtimePolicyName": {
                        "type": "string"
                    },
                    "runtimeType": {
                        "type": "string"
                    },
                    "syncHostImages": {
                        "type": "boolean"
                    },
                    "syscallEnabled": {
                        "type": "boolean"
                    },
                    "token": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "userAccessControl": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/firewallPolicy:FirewallPolicy": {
            "properties": {
                "author": {
                    "type": "string",
                    "description": "Username of the account that created the policy.\n"
                },
                "blockIcmpPing": {
                    "type": "boolean",
                    "description": "Indicates whether policy includes blocking incoming 'ping' requests.\n"
                },
                "blockMetadataService": {
                    "type": "boolean",
                    "description": "Indicates whether policy includes blocking metadata services of the cloud.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Firewall Policy.\n"
                },
                "inboundNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FirewallPolicyInboundNetwork:FirewallPolicyInboundNetwork"
                    },
                    "description": "Information on network addresses that are allowed to pass in data or requests.\n"
                },
                "lastupdate": {
                    "type": "integer",
                    "description": "Timestamp of the last update in Unix time format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy, no longer than 128 characters and no slash characters.\n"
                },
                "outboundNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FirewallPolicyOutboundNetwork:FirewallPolicyOutboundNetwork"
                    },
                    "description": "Information on network addresses that are allowed to receive data or requests.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the class of protection defined by the firewall.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Aqua version functionality supported\n"
                }
            },
            "required": [
                "author",
                "lastupdate",
                "name",
                "type",
                "version"
            ],
            "inputProperties": {
                "blockIcmpPing": {
                    "type": "boolean",
                    "description": "Indicates whether policy includes blocking incoming 'ping' requests.\n"
                },
                "blockMetadataService": {
                    "type": "boolean",
                    "description": "Indicates whether policy includes blocking metadata services of the cloud.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Firewall Policy.\n"
                },
                "inboundNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FirewallPolicyInboundNetwork:FirewallPolicyInboundNetwork"
                    },
                    "description": "Information on network addresses that are allowed to pass in data or requests.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy, no longer than 128 characters and no slash characters.\n"
                },
                "outboundNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FirewallPolicyOutboundNetwork:FirewallPolicyOutboundNetwork"
                    },
                    "description": "Information on network addresses that are allowed to receive data or requests.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the class of protection defined by the firewall.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Aqua version functionality supported\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FirewallPolicy resources.\n",
                "properties": {
                    "author": {
                        "type": "string",
                        "description": "Username of the account that created the policy.\n"
                    },
                    "blockIcmpPing": {
                        "type": "boolean",
                        "description": "Indicates whether policy includes blocking incoming 'ping' requests.\n"
                    },
                    "blockMetadataService": {
                        "type": "boolean",
                        "description": "Indicates whether policy includes blocking metadata services of the cloud.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Firewall Policy.\n"
                    },
                    "inboundNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/FirewallPolicyInboundNetwork:FirewallPolicyInboundNetwork"
                        },
                        "description": "Information on network addresses that are allowed to pass in data or requests.\n"
                    },
                    "lastupdate": {
                        "type": "integer",
                        "description": "Timestamp of the last update in Unix time format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy, no longer than 128 characters and no slash characters.\n"
                    },
                    "outboundNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/FirewallPolicyOutboundNetwork:FirewallPolicyOutboundNetwork"
                        },
                        "description": "Information on network addresses that are allowed to receive data or requests.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Indicates the class of protection defined by the firewall.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Aqua version functionality supported\n"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/functionAssurancePolicy:FunctionAssurancePolicy": {
            "properties": {
                "allowedImages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "applicationScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "assuranceType": {
                    "type": "string"
                },
                "auditOnFailure": {
                    "type": "boolean"
                },
                "author": {
                    "type": "string"
                },
                "autoScanConfigured": {
                    "type": "boolean"
                },
                "autoScanEnabled": {
                    "type": "boolean"
                },
                "autoScanTimes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyAutoScanTime:FunctionAssurancePolicyAutoScanTime"
                    }
                },
                "blacklistPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blacklistPermissionsEnabled": {
                    "type": "boolean"
                },
                "blacklistedLicenses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blacklistedLicensesEnabled": {
                    "type": "boolean"
                },
                "blockFailed": {
                    "type": "boolean"
                },
                "controlExcludeNoFix": {
                    "type": "boolean"
                },
                "customChecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyCustomCheck:FunctionAssurancePolicyCustomCheck"
                    }
                },
                "customChecksEnabled": {
                    "type": "boolean"
                },
                "customSeverityEnabled": {
                    "type": "boolean"
                },
                "cvesBlackListEnabled": {
                    "type": "boolean"
                },
                "cvesBlackLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cvesWhiteListEnabled": {
                    "type": "boolean"
                },
                "cvesWhiteLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cvssSeverity": {
                    "type": "string"
                },
                "cvssSeverityEnabled": {
                    "type": "boolean"
                },
                "cvssSeverityExcludeNoFix": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "disallowMalware": {
                    "type": "boolean"
                },
                "dockerCisEnabled": {
                    "type": "boolean"
                },
                "domain": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "dtaEnabled": {
                    "type": "boolean"
                },
                "dtaSeverity": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "enforce": {
                    "type": "boolean"
                },
                "enforceAfterDays": {
                    "type": "integer"
                },
                "enforceExcessivePermissions": {
                    "type": "boolean"
                },
                "exceptionalMonitoredMalwarePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "failCicd": {
                    "type": "boolean"
                },
                "forbiddenLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyForbiddenLabel:FunctionAssurancePolicyForbiddenLabel"
                    }
                },
                "forbiddenLabelsEnabled": {
                    "type": "boolean"
                },
                "forceMicroenforcer": {
                    "type": "boolean"
                },
                "functionIntegrityEnabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "ignoreRecentlyPublishedVln": {
                    "type": "boolean"
                },
                "ignoreRecentlyPublishedVlnPeriod": {
                    "type": "integer"
                },
                "ignoreRiskResourcesEnabled": {
                    "type": "boolean"
                },
                "ignoredRiskResources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kubeCisEnabled": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "malwareAction": {
                    "type": "string"
                },
                "maximumScore": {
                    "type": "number"
                },
                "maximumScoreEnabled": {
                    "type": "boolean"
                },
                "maximumScoreExcludeNoFix": {
                    "type": "boolean"
                },
                "monitoredMalwarePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "onlyNoneRootUsers": {
                    "type": "boolean"
                },
                "packagesBlackListEnabled": {
                    "type": "boolean"
                },
                "packagesBlackLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyPackagesBlackList:FunctionAssurancePolicyPackagesBlackList"
                    }
                },
                "packagesWhiteListEnabled": {
                    "type": "boolean"
                },
                "packagesWhiteLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyPackagesWhiteList:FunctionAssurancePolicyPackagesWhiteList"
                    }
                },
                "partialResultsImageFail": {
                    "type": "boolean"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "registries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "registry": {
                    "type": "string"
                },
                "requiredLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyRequiredLabel:FunctionAssurancePolicyRequiredLabel"
                    }
                },
                "requiredLabelsEnabled": {
                    "type": "boolean"
                },
                "scanNfsMounts": {
                    "type": "boolean"
                },
                "scanSensitiveData": {
                    "type": "boolean"
                },
                "scapEnabled": {
                    "type": "boolean"
                },
                "scapFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyScope:FunctionAssurancePolicyScope"
                    }
                },
                "trustedBaseImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyTrustedBaseImage:FunctionAssurancePolicyTrustedBaseImage"
                    }
                },
                "trustedBaseImagesEnabled": {
                    "type": "boolean"
                },
                "whitelistedLicenses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "whitelistedLicensesEnabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "applicationScopes",
                "author",
                "autoScanTimes",
                "id",
                "ignoreRecentlyPublishedVlnPeriod",
                "name",
                "scopes"
            ],
            "inputProperties": {
                "allowedImages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "applicationScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "assuranceType": {
                    "type": "string"
                },
                "auditOnFailure": {
                    "type": "boolean"
                },
                "autoScanConfigured": {
                    "type": "boolean"
                },
                "autoScanEnabled": {
                    "type": "boolean"
                },
                "autoScanTimes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyAutoScanTime:FunctionAssurancePolicyAutoScanTime"
                    }
                },
                "blacklistPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blacklistPermissionsEnabled": {
                    "type": "boolean"
                },
                "blacklistedLicenses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blacklistedLicensesEnabled": {
                    "type": "boolean"
                },
                "blockFailed": {
                    "type": "boolean"
                },
                "controlExcludeNoFix": {
                    "type": "boolean"
                },
                "customChecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyCustomCheck:FunctionAssurancePolicyCustomCheck"
                    }
                },
                "customChecksEnabled": {
                    "type": "boolean"
                },
                "customSeverityEnabled": {
                    "type": "boolean"
                },
                "cvesBlackListEnabled": {
                    "type": "boolean"
                },
                "cvesBlackLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cvesWhiteListEnabled": {
                    "type": "boolean"
                },
                "cvesWhiteLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cvssSeverity": {
                    "type": "string"
                },
                "cvssSeverityEnabled": {
                    "type": "boolean"
                },
                "cvssSeverityExcludeNoFix": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "disallowMalware": {
                    "type": "boolean"
                },
                "dockerCisEnabled": {
                    "type": "boolean"
                },
                "domain": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "dtaEnabled": {
                    "type": "boolean"
                },
                "dtaSeverity": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "enforce": {
                    "type": "boolean"
                },
                "enforceAfterDays": {
                    "type": "integer"
                },
                "enforceExcessivePermissions": {
                    "type": "boolean"
                },
                "exceptionalMonitoredMalwarePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "failCicd": {
                    "type": "boolean"
                },
                "forbiddenLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyForbiddenLabel:FunctionAssurancePolicyForbiddenLabel"
                    }
                },
                "forbiddenLabelsEnabled": {
                    "type": "boolean"
                },
                "forceMicroenforcer": {
                    "type": "boolean"
                },
                "functionIntegrityEnabled": {
                    "type": "boolean"
                },
                "ignoreRecentlyPublishedVln": {
                    "type": "boolean"
                },
                "ignoreRiskResourcesEnabled": {
                    "type": "boolean"
                },
                "ignoredRiskResources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kubeCisEnabled": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "malwareAction": {
                    "type": "string"
                },
                "maximumScore": {
                    "type": "number"
                },
                "maximumScoreEnabled": {
                    "type": "boolean"
                },
                "maximumScoreExcludeNoFix": {
                    "type": "boolean"
                },
                "monitoredMalwarePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "onlyNoneRootUsers": {
                    "type": "boolean"
                },
                "packagesBlackListEnabled": {
                    "type": "boolean"
                },
                "packagesBlackLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyPackagesBlackList:FunctionAssurancePolicyPackagesBlackList"
                    }
                },
                "packagesWhiteListEnabled": {
                    "type": "boolean"
                },
                "packagesWhiteLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyPackagesWhiteList:FunctionAssurancePolicyPackagesWhiteList"
                    }
                },
                "partialResultsImageFail": {
                    "type": "boolean"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "registries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "registry": {
                    "type": "string"
                },
                "requiredLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyRequiredLabel:FunctionAssurancePolicyRequiredLabel"
                    }
                },
                "requiredLabelsEnabled": {
                    "type": "boolean"
                },
                "scanNfsMounts": {
                    "type": "boolean"
                },
                "scanSensitiveData": {
                    "type": "boolean"
                },
                "scapEnabled": {
                    "type": "boolean"
                },
                "scapFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyScope:FunctionAssurancePolicyScope"
                    }
                },
                "trustedBaseImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionAssurancePolicyTrustedBaseImage:FunctionAssurancePolicyTrustedBaseImage"
                    }
                },
                "trustedBaseImagesEnabled": {
                    "type": "boolean"
                },
                "whitelistedLicenses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "whitelistedLicensesEnabled": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "applicationScopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FunctionAssurancePolicy resources.\n",
                "properties": {
                    "allowedImages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "applicationScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assuranceType": {
                        "type": "string"
                    },
                    "auditOnFailure": {
                        "type": "boolean"
                    },
                    "author": {
                        "type": "string"
                    },
                    "autoScanConfigured": {
                        "type": "boolean"
                    },
                    "autoScanEnabled": {
                        "type": "boolean"
                    },
                    "autoScanTimes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/FunctionAssurancePolicyAutoScanTime:FunctionAssurancePolicyAutoScanTime"
                        }
                    },
                    "blacklistPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "blacklistPermissionsEnabled": {
                        "type": "boolean"
                    },
                    "blacklistedLicenses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "blacklistedLicensesEnabled": {
                        "type": "boolean"
                    },
                    "blockFailed": {
                        "type": "boolean"
                    },
                    "controlExcludeNoFix": {
                        "type": "boolean"
                    },
                    "customChecks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/FunctionAssurancePolicyCustomCheck:FunctionAssurancePolicyCustomCheck"
                        }
                    },
                    "customChecksEnabled": {
                        "type": "boolean"
                    },
                    "customSeverityEnabled": {
                        "type": "boolean"
                    },
                    "cvesBlackListEnabled": {
                        "type": "boolean"
                    },
                    "cvesBlackLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cvesWhiteListEnabled": {
                        "type": "boolean"
                    },
                    "cvesWhiteLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cvssSeverity": {
                        "type": "string"
                    },
                    "cvssSeverityEnabled": {
                        "type": "boolean"
                    },
                    "cvssSeverityExcludeNoFix": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "disallowMalware": {
                        "type": "boolean"
                    },
                    "dockerCisEnabled": {
                        "type": "boolean"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "dtaEnabled": {
                        "type": "boolean"
                    },
                    "dtaSeverity": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enforce": {
                        "type": "boolean"
                    },
                    "enforceAfterDays": {
                        "type": "integer"
                    },
                    "enforceExcessivePermissions": {
                        "type": "boolean"
                    },
                    "exceptionalMonitoredMalwarePaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "failCicd": {
                        "type": "boolean"
                    },
                    "forbiddenLabels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/FunctionAssurancePolicyForbiddenLabel:FunctionAssurancePolicyForbiddenLabel"
                        }
                    },
                    "forbiddenLabelsEnabled": {
                        "type": "boolean"
                    },
                    "forceMicroenforcer": {
                        "type": "boolean"
                    },
                    "functionIntegrityEnabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "ignoreRecentlyPublishedVln": {
                        "type": "boolean"
                    },
                    "ignoreRecentlyPublishedVlnPeriod": {
                        "type": "integer"
                    },
                    "ignoreRiskResourcesEnabled": {
                        "type": "boolean"
                    },
                    "ignoredRiskResources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "kubeCisEnabled": {
                        "type": "boolean"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "malwareAction": {
                        "type": "string"
                    },
                    "maximumScore": {
                        "type": "number"
                    },
                    "maximumScoreEnabled": {
                        "type": "boolean"
                    },
                    "maximumScoreExcludeNoFix": {
                        "type": "boolean"
                    },
                    "monitoredMalwarePaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "onlyNoneRootUsers": {
                        "type": "boolean"
                    },
                    "packagesBlackListEnabled": {
                        "type": "boolean"
                    },
                    "packagesBlackLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/FunctionAssurancePolicyPackagesBlackList:FunctionAssurancePolicyPackagesBlackList"
                        }
                    },
                    "packagesWhiteListEnabled": {
                        "type": "boolean"
                    },
                    "packagesWhiteLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/FunctionAssurancePolicyPackagesWhiteList:FunctionAssurancePolicyPackagesWhiteList"
                        }
                    },
                    "partialResultsImageFail": {
                        "type": "boolean"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "registries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "registry": {
                        "type": "string"
                    },
                    "requiredLabels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/FunctionAssurancePolicyRequiredLabel:FunctionAssurancePolicyRequiredLabel"
                        }
                    },
                    "requiredLabelsEnabled": {
                        "type": "boolean"
                    },
                    "scanNfsMounts": {
                        "type": "boolean"
                    },
                    "scanSensitiveData": {
                        "type": "boolean"
                    },
                    "scapEnabled": {
                        "type": "boolean"
                    },
                    "scapFiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/FunctionAssurancePolicyScope:FunctionAssurancePolicyScope"
                        }
                    },
                    "trustedBaseImages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/FunctionAssurancePolicyTrustedBaseImage:FunctionAssurancePolicyTrustedBaseImage"
                        }
                    },
                    "trustedBaseImagesEnabled": {
                        "type": "boolean"
                    },
                    "whitelistedLicenses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "whitelistedLicensesEnabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/functionRuntimePolicy:FunctionRuntimePolicy": {
            "properties": {
                "applicationScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the application scope of the service.\n"
                },
                "author": {
                    "type": "string",
                    "description": "Username of the account that created the service.\n"
                },
                "blockMaliciousExecutables": {
                    "type": "boolean",
                    "description": "If true, prevent creation of malicious executables in functions during their runtime post invocation.\n"
                },
                "blockedExecutables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of executables that are prevented from running in containers.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the function runtime policy\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates if the runtime policy is enabled or not.\n"
                },
                "enforce": {
                    "type": "boolean",
                    "description": "Indicates that policy should effect container execution (not just for audit).\n"
                },
                "honeypotAccessKey": {
                    "type": "string",
                    "description": "Honeypot User ID (Access Key)\n"
                },
                "honeypotApplyOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of options to apply the honeypot on (Environment Vairable, Layer, File)\n"
                },
                "honeypotSecretKey": {
                    "type": "string",
                    "description": "Honeypot User Password (Secret Key)\n"
                },
                "honeypotServerlessAppName": {
                    "type": "string",
                    "description": "Serverless application name\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the function runtime policy\n"
                },
                "scopeExpression": {
                    "type": "string",
                    "description": "Logical expression of how to compute the dependency of the scope variables.\n"
                },
                "scopeVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionRuntimePolicyScopeVariable:FunctionRuntimePolicyScopeVariable"
                    },
                    "description": "List of scope attributes.\n"
                }
            },
            "required": [
                "applicationScopes",
                "author",
                "name",
                "scopeExpression",
                "scopeVariables"
            ],
            "inputProperties": {
                "applicationScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the application scope of the service.\n"
                },
                "blockMaliciousExecutables": {
                    "type": "boolean",
                    "description": "If true, prevent creation of malicious executables in functions during their runtime post invocation.\n"
                },
                "blockedExecutables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of executables that are prevented from running in containers.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the function runtime policy\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates if the runtime policy is enabled or not.\n"
                },
                "enforce": {
                    "type": "boolean",
                    "description": "Indicates that policy should effect container execution (not just for audit).\n"
                },
                "honeypotAccessKey": {
                    "type": "string",
                    "description": "Honeypot User ID (Access Key)\n"
                },
                "honeypotApplyOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of options to apply the honeypot on (Environment Vairable, Layer, File)\n"
                },
                "honeypotSecretKey": {
                    "type": "string",
                    "description": "Honeypot User Password (Secret Key)\n"
                },
                "honeypotServerlessAppName": {
                    "type": "string",
                    "description": "Serverless application name\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the function runtime policy\n"
                },
                "scopeExpression": {
                    "type": "string",
                    "description": "Logical expression of how to compute the dependency of the scope variables.\n"
                },
                "scopeVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/FunctionRuntimePolicyScopeVariable:FunctionRuntimePolicyScopeVariable"
                    },
                    "description": "List of scope attributes.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FunctionRuntimePolicy resources.\n",
                "properties": {
                    "applicationScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates the application scope of the service.\n"
                    },
                    "author": {
                        "type": "string",
                        "description": "Username of the account that created the service.\n"
                    },
                    "blockMaliciousExecutables": {
                        "type": "boolean",
                        "description": "If true, prevent creation of malicious executables in functions during their runtime post invocation.\n"
                    },
                    "blockedExecutables": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of executables that are prevented from running in containers.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the function runtime policy\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates if the runtime policy is enabled or not.\n"
                    },
                    "enforce": {
                        "type": "boolean",
                        "description": "Indicates that policy should effect container execution (not just for audit).\n"
                    },
                    "honeypotAccessKey": {
                        "type": "string",
                        "description": "Honeypot User ID (Access Key)\n"
                    },
                    "honeypotApplyOns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options to apply the honeypot on (Environment Vairable, Layer, File)\n"
                    },
                    "honeypotSecretKey": {
                        "type": "string",
                        "description": "Honeypot User Password (Secret Key)\n"
                    },
                    "honeypotServerlessAppName": {
                        "type": "string",
                        "description": "Serverless application name\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the function runtime policy\n"
                    },
                    "scopeExpression": {
                        "type": "string",
                        "description": "Logical expression of how to compute the dependency of the scope variables.\n"
                    },
                    "scopeVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/FunctionRuntimePolicyScopeVariable:FunctionRuntimePolicyScopeVariable"
                        },
                        "description": "List of scope attributes.\n"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/group:Group": {
            "description": "The `aquasec.Group` resource manages your groups within Aqua.\n\nThe Groups created must have at least one Role that is already present within Aqua.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aquasec from \"@pulumi/aquasec\";\n\nconst group = new aquasec.Group(\"group\", {});\n```\n```python\nimport pulumi\nimport pulumi_aquasec as aquasec\n\ngroup = aquasec.Group(\"group\")\n```\n```csharp\nusing Pulumi;\nusing Aquasec = Pulumi.Aquasec;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var @group = new Aquasec.Group(\"group\", new Aquasec.GroupArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aquasec/sdk/go/aquasec\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aquasec.NewGroup(ctx, \"group\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "created": {
                    "type": "string"
                },
                "groupId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "created",
                "groupId",
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "created": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/hostAssurancePolicy:HostAssurancePolicy": {
            "properties": {
                "allowedImages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "applicationScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "assuranceType": {
                    "type": "string"
                },
                "auditOnFailure": {
                    "type": "boolean"
                },
                "author": {
                    "type": "string"
                },
                "autoScanConfigured": {
                    "type": "boolean"
                },
                "autoScanEnabled": {
                    "type": "boolean"
                },
                "autoScanTimes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyAutoScanTime:HostAssurancePolicyAutoScanTime"
                    }
                },
                "blacklistPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blacklistPermissionsEnabled": {
                    "type": "boolean"
                },
                "blacklistedLicenses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blacklistedLicensesEnabled": {
                    "type": "boolean"
                },
                "blockFailed": {
                    "type": "boolean"
                },
                "controlExcludeNoFix": {
                    "type": "boolean"
                },
                "customChecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyCustomCheck:HostAssurancePolicyCustomCheck"
                    }
                },
                "customChecksEnabled": {
                    "type": "boolean"
                },
                "customSeverityEnabled": {
                    "type": "boolean"
                },
                "cvesBlackListEnabled": {
                    "type": "boolean"
                },
                "cvesBlackLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cvesWhiteListEnabled": {
                    "type": "boolean"
                },
                "cvesWhiteLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cvssSeverity": {
                    "type": "string"
                },
                "cvssSeverityEnabled": {
                    "type": "boolean"
                },
                "cvssSeverityExcludeNoFix": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "disallowMalware": {
                    "type": "boolean"
                },
                "dockerCisEnabled": {
                    "type": "boolean"
                },
                "domain": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "dtaEnabled": {
                    "type": "boolean"
                },
                "dtaSeverity": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "enforce": {
                    "type": "boolean"
                },
                "enforceAfterDays": {
                    "type": "integer"
                },
                "enforceExcessivePermissions": {
                    "type": "boolean"
                },
                "exceptionalMonitoredMalwarePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "failCicd": {
                    "type": "boolean"
                },
                "forbiddenLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyForbiddenLabel:HostAssurancePolicyForbiddenLabel"
                    }
                },
                "forbiddenLabelsEnabled": {
                    "type": "boolean"
                },
                "forceMicroenforcer": {
                    "type": "boolean"
                },
                "functionIntegrityEnabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "ignoreRecentlyPublishedVln": {
                    "type": "boolean"
                },
                "ignoreRecentlyPublishedVlnPeriod": {
                    "type": "integer"
                },
                "ignoreRiskResourcesEnabled": {
                    "type": "boolean"
                },
                "ignoredRiskResources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kubeCisEnabled": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "malwareAction": {
                    "type": "string"
                },
                "maximumScore": {
                    "type": "number"
                },
                "maximumScoreEnabled": {
                    "type": "boolean"
                },
                "maximumScoreExcludeNoFix": {
                    "type": "boolean"
                },
                "monitoredMalwarePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "onlyNoneRootUsers": {
                    "type": "boolean"
                },
                "packagesBlackListEnabled": {
                    "type": "boolean"
                },
                "packagesBlackLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyPackagesBlackList:HostAssurancePolicyPackagesBlackList"
                    }
                },
                "packagesWhiteListEnabled": {
                    "type": "boolean"
                },
                "packagesWhiteLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyPackagesWhiteList:HostAssurancePolicyPackagesWhiteList"
                    }
                },
                "partialResultsImageFail": {
                    "type": "boolean"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "registries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "registry": {
                    "type": "string"
                },
                "requiredLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyRequiredLabel:HostAssurancePolicyRequiredLabel"
                    }
                },
                "requiredLabelsEnabled": {
                    "type": "boolean"
                },
                "scanNfsMounts": {
                    "type": "boolean"
                },
                "scanSensitiveData": {
                    "type": "boolean"
                },
                "scapEnabled": {
                    "type": "boolean"
                },
                "scapFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyScope:HostAssurancePolicyScope"
                    }
                },
                "trustedBaseImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyTrustedBaseImage:HostAssurancePolicyTrustedBaseImage"
                    }
                },
                "trustedBaseImagesEnabled": {
                    "type": "boolean"
                },
                "whitelistedLicenses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "whitelistedLicensesEnabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "applicationScopes",
                "author",
                "autoScanTimes",
                "id",
                "ignoreRecentlyPublishedVlnPeriod",
                "name",
                "scopes"
            ],
            "inputProperties": {
                "allowedImages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "applicationScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "assuranceType": {
                    "type": "string"
                },
                "auditOnFailure": {
                    "type": "boolean"
                },
                "autoScanConfigured": {
                    "type": "boolean"
                },
                "autoScanEnabled": {
                    "type": "boolean"
                },
                "autoScanTimes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyAutoScanTime:HostAssurancePolicyAutoScanTime"
                    }
                },
                "blacklistPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blacklistPermissionsEnabled": {
                    "type": "boolean"
                },
                "blacklistedLicenses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blacklistedLicensesEnabled": {
                    "type": "boolean"
                },
                "blockFailed": {
                    "type": "boolean"
                },
                "controlExcludeNoFix": {
                    "type": "boolean"
                },
                "customChecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyCustomCheck:HostAssurancePolicyCustomCheck"
                    }
                },
                "customChecksEnabled": {
                    "type": "boolean"
                },
                "customSeverityEnabled": {
                    "type": "boolean"
                },
                "cvesBlackListEnabled": {
                    "type": "boolean"
                },
                "cvesBlackLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cvesWhiteListEnabled": {
                    "type": "boolean"
                },
                "cvesWhiteLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cvssSeverity": {
                    "type": "string"
                },
                "cvssSeverityEnabled": {
                    "type": "boolean"
                },
                "cvssSeverityExcludeNoFix": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "disallowMalware": {
                    "type": "boolean"
                },
                "dockerCisEnabled": {
                    "type": "boolean"
                },
                "domain": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "dtaEnabled": {
                    "type": "boolean"
                },
                "dtaSeverity": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "enforce": {
                    "type": "boolean"
                },
                "enforceAfterDays": {
                    "type": "integer"
                },
                "enforceExcessivePermissions": {
                    "type": "boolean"
                },
                "exceptionalMonitoredMalwarePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "failCicd": {
                    "type": "boolean"
                },
                "forbiddenLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyForbiddenLabel:HostAssurancePolicyForbiddenLabel"
                    }
                },
                "forbiddenLabelsEnabled": {
                    "type": "boolean"
                },
                "forceMicroenforcer": {
                    "type": "boolean"
                },
                "functionIntegrityEnabled": {
                    "type": "boolean"
                },
                "ignoreRecentlyPublishedVln": {
                    "type": "boolean"
                },
                "ignoreRiskResourcesEnabled": {
                    "type": "boolean"
                },
                "ignoredRiskResources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kubeCisEnabled": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "malwareAction": {
                    "type": "string"
                },
                "maximumScore": {
                    "type": "number"
                },
                "maximumScoreEnabled": {
                    "type": "boolean"
                },
                "maximumScoreExcludeNoFix": {
                    "type": "boolean"
                },
                "monitoredMalwarePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "onlyNoneRootUsers": {
                    "type": "boolean"
                },
                "packagesBlackListEnabled": {
                    "type": "boolean"
                },
                "packagesBlackLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyPackagesBlackList:HostAssurancePolicyPackagesBlackList"
                    }
                },
                "packagesWhiteListEnabled": {
                    "type": "boolean"
                },
                "packagesWhiteLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyPackagesWhiteList:HostAssurancePolicyPackagesWhiteList"
                    }
                },
                "partialResultsImageFail": {
                    "type": "boolean"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "registries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "registry": {
                    "type": "string"
                },
                "requiredLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyRequiredLabel:HostAssurancePolicyRequiredLabel"
                    }
                },
                "requiredLabelsEnabled": {
                    "type": "boolean"
                },
                "scanNfsMounts": {
                    "type": "boolean"
                },
                "scanSensitiveData": {
                    "type": "boolean"
                },
                "scapEnabled": {
                    "type": "boolean"
                },
                "scapFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyScope:HostAssurancePolicyScope"
                    }
                },
                "trustedBaseImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/HostAssurancePolicyTrustedBaseImage:HostAssurancePolicyTrustedBaseImage"
                    }
                },
                "trustedBaseImagesEnabled": {
                    "type": "boolean"
                },
                "whitelistedLicenses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "whitelistedLicensesEnabled": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "applicationScopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostAssurancePolicy resources.\n",
                "properties": {
                    "allowedImages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "applicationScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assuranceType": {
                        "type": "string"
                    },
                    "auditOnFailure": {
                        "type": "boolean"
                    },
                    "author": {
                        "type": "string"
                    },
                    "autoScanConfigured": {
                        "type": "boolean"
                    },
                    "autoScanEnabled": {
                        "type": "boolean"
                    },
                    "autoScanTimes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/HostAssurancePolicyAutoScanTime:HostAssurancePolicyAutoScanTime"
                        }
                    },
                    "blacklistPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "blacklistPermissionsEnabled": {
                        "type": "boolean"
                    },
                    "blacklistedLicenses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "blacklistedLicensesEnabled": {
                        "type": "boolean"
                    },
                    "blockFailed": {
                        "type": "boolean"
                    },
                    "controlExcludeNoFix": {
                        "type": "boolean"
                    },
                    "customChecks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/HostAssurancePolicyCustomCheck:HostAssurancePolicyCustomCheck"
                        }
                    },
                    "customChecksEnabled": {
                        "type": "boolean"
                    },
                    "customSeverityEnabled": {
                        "type": "boolean"
                    },
                    "cvesBlackListEnabled": {
                        "type": "boolean"
                    },
                    "cvesBlackLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cvesWhiteListEnabled": {
                        "type": "boolean"
                    },
                    "cvesWhiteLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cvssSeverity": {
                        "type": "string"
                    },
                    "cvssSeverityEnabled": {
                        "type": "boolean"
                    },
                    "cvssSeverityExcludeNoFix": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "disallowMalware": {
                        "type": "boolean"
                    },
                    "dockerCisEnabled": {
                        "type": "boolean"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "dtaEnabled": {
                        "type": "boolean"
                    },
                    "dtaSeverity": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enforce": {
                        "type": "boolean"
                    },
                    "enforceAfterDays": {
                        "type": "integer"
                    },
                    "enforceExcessivePermissions": {
                        "type": "boolean"
                    },
                    "exceptionalMonitoredMalwarePaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "failCicd": {
                        "type": "boolean"
                    },
                    "forbiddenLabels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/HostAssurancePolicyForbiddenLabel:HostAssurancePolicyForbiddenLabel"
                        }
                    },
                    "forbiddenLabelsEnabled": {
                        "type": "boolean"
                    },
                    "forceMicroenforcer": {
                        "type": "boolean"
                    },
                    "functionIntegrityEnabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "ignoreRecentlyPublishedVln": {
                        "type": "boolean"
                    },
                    "ignoreRecentlyPublishedVlnPeriod": {
                        "type": "integer"
                    },
                    "ignoreRiskResourcesEnabled": {
                        "type": "boolean"
                    },
                    "ignoredRiskResources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "kubeCisEnabled": {
                        "type": "boolean"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "malwareAction": {
                        "type": "string"
                    },
                    "maximumScore": {
                        "type": "number"
                    },
                    "maximumScoreEnabled": {
                        "type": "boolean"
                    },
                    "maximumScoreExcludeNoFix": {
                        "type": "boolean"
                    },
                    "monitoredMalwarePaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "onlyNoneRootUsers": {
                        "type": "boolean"
                    },
                    "packagesBlackListEnabled": {
                        "type": "boolean"
                    },
                    "packagesBlackLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/HostAssurancePolicyPackagesBlackList:HostAssurancePolicyPackagesBlackList"
                        }
                    },
                    "packagesWhiteListEnabled": {
                        "type": "boolean"
                    },
                    "packagesWhiteLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/HostAssurancePolicyPackagesWhiteList:HostAssurancePolicyPackagesWhiteList"
                        }
                    },
                    "partialResultsImageFail": {
                        "type": "boolean"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "registries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "registry": {
                        "type": "string"
                    },
                    "requiredLabels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/HostAssurancePolicyRequiredLabel:HostAssurancePolicyRequiredLabel"
                        }
                    },
                    "requiredLabelsEnabled": {
                        "type": "boolean"
                    },
                    "scanNfsMounts": {
                        "type": "boolean"
                    },
                    "scanSensitiveData": {
                        "type": "boolean"
                    },
                    "scapEnabled": {
                        "type": "boolean"
                    },
                    "scapFiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/HostAssurancePolicyScope:HostAssurancePolicyScope"
                        }
                    },
                    "trustedBaseImages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/HostAssurancePolicyTrustedBaseImage:HostAssurancePolicyTrustedBaseImage"
                        }
                    },
                    "trustedBaseImagesEnabled": {
                        "type": "boolean"
                    },
                    "whitelistedLicenses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "whitelistedLicensesEnabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/image:Image": {
            "properties": {
                "allowImage": {
                    "type": "boolean",
                    "description": "If this field is set to true, the image will be whitelisted.\n"
                },
                "architecture": {
                    "type": "string",
                    "description": "The image architecture.\n"
                },
                "assuranceChecksPerformeds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssuranceChecksPerformed:ImageAssuranceChecksPerformed"
                    },
                    "description": "The list of image assurance checks performed on the image.\n"
                },
                "author": {
                    "type": "string",
                    "description": "The name of the user who registered the image.\n"
                },
                "blacklisted": {
                    "type": "boolean",
                    "description": "Whether the image is blacklisted.\n"
                },
                "blockImage": {
                    "type": "boolean",
                    "description": "If this field is set to true, the image will be blacklisted.\n"
                },
                "comment": {
                    "type": "string",
                    "description": "The image creation comment.\n"
                },
                "created": {
                    "type": "string",
                    "description": "The date and time when the image was registered.\n"
                },
                "criticalVulnerabilities": {
                    "type": "integer",
                    "description": "Number of critical severity vulnerabilities detected in the image.\n"
                },
                "defaultUser": {
                    "type": "string",
                    "description": "The default user of the image.\n"
                },
                "digest": {
                    "type": "string",
                    "description": "The content digest of the image.\n"
                },
                "disallowed": {
                    "type": "boolean",
                    "description": "Whether the image is disallowed (non-compliant).\n"
                },
                "disallowedByAssuranceChecks": {
                    "type": "boolean",
                    "description": "Whether the image was disallowed because of Image Assurance Policies.\n"
                },
                "dockerId": {
                    "type": "string",
                    "description": "The Docker image ID.\n"
                },
                "dockerLabels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Docker labels of the image.\n"
                },
                "dockerVersion": {
                    "type": "string",
                    "description": "The Docker version used when building the image.\n"
                },
                "dtaSeverityScore": {
                    "type": "string",
                    "description": "DTA severity score.\n"
                },
                "dtaSkipped": {
                    "type": "boolean",
                    "description": "If DTA was skipped.\n"
                },
                "dtaSkippedReason": {
                    "type": "string",
                    "description": "The reason why DTA was skipped.\n"
                },
                "environmentVariables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Environment variables in the image.\n"
                },
                "highVulnerabilities": {
                    "type": "integer",
                    "description": "Number of high severity vulnerabilities detected in the image.\n"
                },
                "histories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageHistory:ImageHistory"
                    },
                    "description": "The Docker history of the image.\n"
                },
                "imageSize": {
                    "type": "integer",
                    "description": "The size of the image in bytes.\n"
                },
                "imageType": {
                    "type": "string",
                    "description": "The type of the image.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Aqua labels of the image.\n"
                },
                "lowVulnerabilities": {
                    "type": "integer",
                    "description": "Number of low severity vulnerabilities detected in the image.\n"
                },
                "malware": {
                    "type": "integer",
                    "description": "Number of malware found on the image.\n"
                },
                "mediumVulnerabilities": {
                    "type": "integer",
                    "description": "Number of medium severity vulnerabilities detected in the image.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the image.\n"
                },
                "negligibleVulnerabilities": {
                    "type": "integer",
                    "description": "Number of negligible severity vulnerabilities detected in the image.\n"
                },
                "newerImageExists": {
                    "type": "boolean",
                    "description": "Whether a new version of the image is available in the registry but is not scanned and registered yet.\n"
                },
                "os": {
                    "type": "string",
                    "description": "The operating system detected in the image\n"
                },
                "osVersion": {
                    "type": "string",
                    "description": "The version of the OS detected in the image.\n"
                },
                "parent": {
                    "type": "string",
                    "description": "The ID of the parent image.\n"
                },
                "partialResults": {
                    "type": "boolean",
                    "description": "Whether the image could only be partially scanned.\n"
                },
                "pendingDisallowed": {
                    "type": "boolean",
                    "description": "Whether the image is non-compliant, but is pending this status due to running containers.\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Permission of the image.\n"
                },
                "permissionAuthor": {
                    "type": "string",
                    "description": "The name of the user who last modified the image permissions.\n"
                },
                "permissionComment": {
                    "type": "string",
                    "description": "The comment provided when the image permissions were last modified\n"
                },
                "permissionModificationComment": {
                    "type": "string",
                    "description": "A comment on why the image was whitelisted or blacklisted\n"
                },
                "registry": {
                    "type": "string",
                    "description": "The name of the registry where the image is stored.\n"
                },
                "registryType": {
                    "type": "string",
                    "description": "Type of the registry.\n"
                },
                "repoDigests": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The repository digests.\n"
                },
                "repository": {
                    "type": "string",
                    "description": "The name of the image's repository.\n"
                },
                "scanDate": {
                    "type": "string",
                    "description": "The date and time when the image was last scanned.\n"
                },
                "scanError": {
                    "type": "string",
                    "description": "If the image scan failed, the failure message.\n"
                },
                "scanStatus": {
                    "type": "string",
                    "description": "The scan status of the image (either 'pending', 'in*progress', 'finished', 'failed' or 'not*started').\n"
                },
                "sensitiveData": {
                    "type": "integer",
                    "description": "Number of sensitive data detected in the image.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "The tag of the image.\n"
                },
                "totalVulnerabilities": {
                    "type": "integer",
                    "description": "The total number of vulnerabilities detected in the image.\n"
                },
                "virtualSize": {
                    "type": "integer",
                    "description": "The virtual size of the image.\n"
                },
                "vulnerabilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageVulnerability:ImageVulnerability"
                    },
                    "description": "A list of all the vulnerabilities found in the image\n"
                },
                "whitelisted": {
                    "type": "boolean",
                    "description": "Whether the image is whitelisted.\n"
                }
            },
            "required": [
                "architecture",
                "assuranceChecksPerformeds",
                "author",
                "blacklisted",
                "comment",
                "created",
                "criticalVulnerabilities",
                "defaultUser",
                "digest",
                "disallowed",
                "disallowedByAssuranceChecks",
                "dockerId",
                "dockerLabels",
                "dockerVersion",
                "dtaSeverityScore",
                "dtaSkipped",
                "dtaSkippedReason",
                "environmentVariables",
                "highVulnerabilities",
                "histories",
                "imageSize",
                "imageType",
                "labels",
                "lowVulnerabilities",
                "malware",
                "mediumVulnerabilities",
                "name",
                "negligibleVulnerabilities",
                "newerImageExists",
                "os",
                "osVersion",
                "parent",
                "partialResults",
                "pendingDisallowed",
                "permission",
                "permissionAuthor",
                "permissionComment",
                "registry",
                "registryType",
                "repoDigests",
                "repository",
                "scanDate",
                "scanError",
                "scanStatus",
                "sensitiveData",
                "tag",
                "totalVulnerabilities",
                "virtualSize",
                "vulnerabilities",
                "whitelisted"
            ],
            "inputProperties": {
                "allowImage": {
                    "type": "boolean",
                    "description": "If this field is set to true, the image will be whitelisted.\n"
                },
                "blockImage": {
                    "type": "boolean",
                    "description": "If this field is set to true, the image will be blacklisted.\n"
                },
                "permissionModificationComment": {
                    "type": "string",
                    "description": "A comment on why the image was whitelisted or blacklisted\n"
                },
                "registry": {
                    "type": "string",
                    "description": "The name of the registry where the image is stored.\n"
                },
                "repository": {
                    "type": "string",
                    "description": "The name of the image's repository.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "The tag of the image.\n"
                }
            },
            "requiredInputs": [
                "registry",
                "repository",
                "tag"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Image resources.\n",
                "properties": {
                    "allowImage": {
                        "type": "boolean",
                        "description": "If this field is set to true, the image will be whitelisted.\n"
                    },
                    "architecture": {
                        "type": "string",
                        "description": "The image architecture.\n"
                    },
                    "assuranceChecksPerformeds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/ImageAssuranceChecksPerformed:ImageAssuranceChecksPerformed"
                        },
                        "description": "The list of image assurance checks performed on the image.\n"
                    },
                    "author": {
                        "type": "string",
                        "description": "The name of the user who registered the image.\n"
                    },
                    "blacklisted": {
                        "type": "boolean",
                        "description": "Whether the image is blacklisted.\n"
                    },
                    "blockImage": {
                        "type": "boolean",
                        "description": "If this field is set to true, the image will be blacklisted.\n"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The image creation comment.\n"
                    },
                    "created": {
                        "type": "string",
                        "description": "The date and time when the image was registered.\n"
                    },
                    "criticalVulnerabilities": {
                        "type": "integer",
                        "description": "Number of critical severity vulnerabilities detected in the image.\n"
                    },
                    "defaultUser": {
                        "type": "string",
                        "description": "The default user of the image.\n"
                    },
                    "digest": {
                        "type": "string",
                        "description": "The content digest of the image.\n"
                    },
                    "disallowed": {
                        "type": "boolean",
                        "description": "Whether the image is disallowed (non-compliant).\n"
                    },
                    "disallowedByAssuranceChecks": {
                        "type": "boolean",
                        "description": "Whether the image was disallowed because of Image Assurance Policies.\n"
                    },
                    "dockerId": {
                        "type": "string",
                        "description": "The Docker image ID.\n"
                    },
                    "dockerLabels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Docker labels of the image.\n"
                    },
                    "dockerVersion": {
                        "type": "string",
                        "description": "The Docker version used when building the image.\n"
                    },
                    "dtaSeverityScore": {
                        "type": "string",
                        "description": "DTA severity score.\n"
                    },
                    "dtaSkipped": {
                        "type": "boolean",
                        "description": "If DTA was skipped.\n"
                    },
                    "dtaSkippedReason": {
                        "type": "string",
                        "description": "The reason why DTA was skipped.\n"
                    },
                    "environmentVariables": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Environment variables in the image.\n"
                    },
                    "highVulnerabilities": {
                        "type": "integer",
                        "description": "Number of high severity vulnerabilities detected in the image.\n"
                    },
                    "histories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/ImageHistory:ImageHistory"
                        },
                        "description": "The Docker history of the image.\n"
                    },
                    "imageSize": {
                        "type": "integer",
                        "description": "The size of the image in bytes.\n"
                    },
                    "imageType": {
                        "type": "string",
                        "description": "The type of the image.\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Aqua labels of the image.\n"
                    },
                    "lowVulnerabilities": {
                        "type": "integer",
                        "description": "Number of low severity vulnerabilities detected in the image.\n"
                    },
                    "malware": {
                        "type": "integer",
                        "description": "Number of malware found on the image.\n"
                    },
                    "mediumVulnerabilities": {
                        "type": "integer",
                        "description": "Number of medium severity vulnerabilities detected in the image.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the image.\n"
                    },
                    "negligibleVulnerabilities": {
                        "type": "integer",
                        "description": "Number of negligible severity vulnerabilities detected in the image.\n"
                    },
                    "newerImageExists": {
                        "type": "boolean",
                        "description": "Whether a new version of the image is available in the registry but is not scanned and registered yet.\n"
                    },
                    "os": {
                        "type": "string",
                        "description": "The operating system detected in the image\n"
                    },
                    "osVersion": {
                        "type": "string",
                        "description": "The version of the OS detected in the image.\n"
                    },
                    "parent": {
                        "type": "string",
                        "description": "The ID of the parent image.\n"
                    },
                    "partialResults": {
                        "type": "boolean",
                        "description": "Whether the image could only be partially scanned.\n"
                    },
                    "pendingDisallowed": {
                        "type": "boolean",
                        "description": "Whether the image is non-compliant, but is pending this status due to running containers.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "Permission of the image.\n"
                    },
                    "permissionAuthor": {
                        "type": "string",
                        "description": "The name of the user who last modified the image permissions.\n"
                    },
                    "permissionComment": {
                        "type": "string",
                        "description": "The comment provided when the image permissions were last modified\n"
                    },
                    "permissionModificationComment": {
                        "type": "string",
                        "description": "A comment on why the image was whitelisted or blacklisted\n"
                    },
                    "registry": {
                        "type": "string",
                        "description": "The name of the registry where the image is stored.\n"
                    },
                    "registryType": {
                        "type": "string",
                        "description": "Type of the registry.\n"
                    },
                    "repoDigests": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The repository digests.\n"
                    },
                    "repository": {
                        "type": "string",
                        "description": "The name of the image's repository.\n"
                    },
                    "scanDate": {
                        "type": "string",
                        "description": "The date and time when the image was last scanned.\n"
                    },
                    "scanError": {
                        "type": "string",
                        "description": "If the image scan failed, the failure message.\n"
                    },
                    "scanStatus": {
                        "type": "string",
                        "description": "The scan status of the image (either 'pending', 'in*progress', 'finished', 'failed' or 'not*started').\n"
                    },
                    "sensitiveData": {
                        "type": "integer",
                        "description": "Number of sensitive data detected in the image.\n"
                    },
                    "tag": {
                        "type": "string",
                        "description": "The tag of the image.\n"
                    },
                    "totalVulnerabilities": {
                        "type": "integer",
                        "description": "The total number of vulnerabilities detected in the image.\n"
                    },
                    "virtualSize": {
                        "type": "integer",
                        "description": "The virtual size of the image.\n"
                    },
                    "vulnerabilities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/ImageVulnerability:ImageVulnerability"
                        },
                        "description": "A list of all the vulnerabilities found in the image\n"
                    },
                    "whitelisted": {
                        "type": "boolean",
                        "description": "Whether the image is whitelisted.\n"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/imageAssurancePolicy:ImageAssurancePolicy": {
            "properties": {
                "allowedImages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "applicationScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "assuranceType": {
                    "type": "string"
                },
                "auditOnFailure": {
                    "type": "boolean"
                },
                "author": {
                    "type": "string"
                },
                "autoScanConfigured": {
                    "type": "boolean"
                },
                "autoScanEnabled": {
                    "type": "boolean"
                },
                "autoScanTimes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyAutoScanTime:ImageAssurancePolicyAutoScanTime"
                    }
                },
                "blacklistPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blacklistPermissionsEnabled": {
                    "type": "boolean"
                },
                "blacklistedLicenses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blacklistedLicensesEnabled": {
                    "type": "boolean"
                },
                "blockFailed": {
                    "type": "boolean"
                },
                "controlExcludeNoFix": {
                    "type": "boolean"
                },
                "customChecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyCustomCheck:ImageAssurancePolicyCustomCheck"
                    }
                },
                "customChecksEnabled": {
                    "type": "boolean"
                },
                "customSeverityEnabled": {
                    "type": "boolean"
                },
                "cvesBlackListEnabled": {
                    "type": "boolean"
                },
                "cvesBlackLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cvesWhiteListEnabled": {
                    "type": "boolean"
                },
                "cvesWhiteLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cvssSeverity": {
                    "type": "string"
                },
                "cvssSeverityEnabled": {
                    "type": "boolean"
                },
                "cvssSeverityExcludeNoFix": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "disallowMalware": {
                    "type": "boolean"
                },
                "dockerCisEnabled": {
                    "type": "boolean"
                },
                "domain": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "dtaEnabled": {
                    "type": "boolean"
                },
                "dtaSeverity": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "enforce": {
                    "type": "boolean"
                },
                "enforceAfterDays": {
                    "type": "integer"
                },
                "enforceExcessivePermissions": {
                    "type": "boolean"
                },
                "exceptionalMonitoredMalwarePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "failCicd": {
                    "type": "boolean"
                },
                "forbiddenLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyForbiddenLabel:ImageAssurancePolicyForbiddenLabel"
                    }
                },
                "forbiddenLabelsEnabled": {
                    "type": "boolean"
                },
                "forceMicroenforcer": {
                    "type": "boolean"
                },
                "functionIntegrityEnabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "ignoreRecentlyPublishedVln": {
                    "type": "boolean"
                },
                "ignoreRecentlyPublishedVlnPeriod": {
                    "type": "integer"
                },
                "ignoreRiskResourcesEnabled": {
                    "type": "boolean"
                },
                "ignoredRiskResources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kubeCisEnabled": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "malwareAction": {
                    "type": "string"
                },
                "maximumScore": {
                    "type": "number"
                },
                "maximumScoreEnabled": {
                    "type": "boolean"
                },
                "maximumScoreExcludeNoFix": {
                    "type": "boolean"
                },
                "monitoredMalwarePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "onlyNoneRootUsers": {
                    "type": "boolean"
                },
                "packagesBlackListEnabled": {
                    "type": "boolean"
                },
                "packagesBlackLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyPackagesBlackList:ImageAssurancePolicyPackagesBlackList"
                    }
                },
                "packagesWhiteListEnabled": {
                    "type": "boolean"
                },
                "packagesWhiteLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyPackagesWhiteList:ImageAssurancePolicyPackagesWhiteList"
                    }
                },
                "partialResultsImageFail": {
                    "type": "boolean"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "registries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "registry": {
                    "type": "string"
                },
                "requiredLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyRequiredLabel:ImageAssurancePolicyRequiredLabel"
                    }
                },
                "requiredLabelsEnabled": {
                    "type": "boolean"
                },
                "scanNfsMounts": {
                    "type": "boolean"
                },
                "scanSensitiveData": {
                    "type": "boolean"
                },
                "scapEnabled": {
                    "type": "boolean"
                },
                "scapFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyScope:ImageAssurancePolicyScope"
                    }
                },
                "trustedBaseImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyTrustedBaseImage:ImageAssurancePolicyTrustedBaseImage"
                    }
                },
                "trustedBaseImagesEnabled": {
                    "type": "boolean"
                },
                "whitelistedLicenses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "whitelistedLicensesEnabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "applicationScopes",
                "author",
                "autoScanTimes",
                "id",
                "ignoreRecentlyPublishedVlnPeriod",
                "name",
                "scopes"
            ],
            "inputProperties": {
                "allowedImages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "applicationScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "assuranceType": {
                    "type": "string"
                },
                "auditOnFailure": {
                    "type": "boolean"
                },
                "autoScanConfigured": {
                    "type": "boolean"
                },
                "autoScanEnabled": {
                    "type": "boolean"
                },
                "autoScanTimes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyAutoScanTime:ImageAssurancePolicyAutoScanTime"
                    }
                },
                "blacklistPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blacklistPermissionsEnabled": {
                    "type": "boolean"
                },
                "blacklistedLicenses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blacklistedLicensesEnabled": {
                    "type": "boolean"
                },
                "blockFailed": {
                    "type": "boolean"
                },
                "controlExcludeNoFix": {
                    "type": "boolean"
                },
                "customChecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyCustomCheck:ImageAssurancePolicyCustomCheck"
                    }
                },
                "customChecksEnabled": {
                    "type": "boolean"
                },
                "customSeverityEnabled": {
                    "type": "boolean"
                },
                "cvesBlackListEnabled": {
                    "type": "boolean"
                },
                "cvesBlackLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cvesWhiteListEnabled": {
                    "type": "boolean"
                },
                "cvesWhiteLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cvssSeverity": {
                    "type": "string"
                },
                "cvssSeverityEnabled": {
                    "type": "boolean"
                },
                "cvssSeverityExcludeNoFix": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "disallowMalware": {
                    "type": "boolean"
                },
                "dockerCisEnabled": {
                    "type": "boolean"
                },
                "domain": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "dtaEnabled": {
                    "type": "boolean"
                },
                "dtaSeverity": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "enforce": {
                    "type": "boolean"
                },
                "enforceAfterDays": {
                    "type": "integer"
                },
                "enforceExcessivePermissions": {
                    "type": "boolean"
                },
                "exceptionalMonitoredMalwarePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "failCicd": {
                    "type": "boolean"
                },
                "forbiddenLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyForbiddenLabel:ImageAssurancePolicyForbiddenLabel"
                    }
                },
                "forbiddenLabelsEnabled": {
                    "type": "boolean"
                },
                "forceMicroenforcer": {
                    "type": "boolean"
                },
                "functionIntegrityEnabled": {
                    "type": "boolean"
                },
                "ignoreRecentlyPublishedVln": {
                    "type": "boolean"
                },
                "ignoreRiskResourcesEnabled": {
                    "type": "boolean"
                },
                "ignoredRiskResources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kubeCisEnabled": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "malwareAction": {
                    "type": "string"
                },
                "maximumScore": {
                    "type": "number"
                },
                "maximumScoreEnabled": {
                    "type": "boolean"
                },
                "maximumScoreExcludeNoFix": {
                    "type": "boolean"
                },
                "monitoredMalwarePaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "onlyNoneRootUsers": {
                    "type": "boolean"
                },
                "packagesBlackListEnabled": {
                    "type": "boolean"
                },
                "packagesBlackLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyPackagesBlackList:ImageAssurancePolicyPackagesBlackList"
                    }
                },
                "packagesWhiteListEnabled": {
                    "type": "boolean"
                },
                "packagesWhiteLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyPackagesWhiteList:ImageAssurancePolicyPackagesWhiteList"
                    }
                },
                "partialResultsImageFail": {
                    "type": "boolean"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "registries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "registry": {
                    "type": "string"
                },
                "requiredLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyRequiredLabel:ImageAssurancePolicyRequiredLabel"
                    }
                },
                "requiredLabelsEnabled": {
                    "type": "boolean"
                },
                "scanNfsMounts": {
                    "type": "boolean"
                },
                "scanSensitiveData": {
                    "type": "boolean"
                },
                "scapEnabled": {
                    "type": "boolean"
                },
                "scapFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyScope:ImageAssurancePolicyScope"
                    }
                },
                "trustedBaseImages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ImageAssurancePolicyTrustedBaseImage:ImageAssurancePolicyTrustedBaseImage"
                    }
                },
                "trustedBaseImagesEnabled": {
                    "type": "boolean"
                },
                "whitelistedLicenses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "whitelistedLicensesEnabled": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "applicationScopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ImageAssurancePolicy resources.\n",
                "properties": {
                    "allowedImages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "applicationScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assuranceType": {
                        "type": "string"
                    },
                    "auditOnFailure": {
                        "type": "boolean"
                    },
                    "author": {
                        "type": "string"
                    },
                    "autoScanConfigured": {
                        "type": "boolean"
                    },
                    "autoScanEnabled": {
                        "type": "boolean"
                    },
                    "autoScanTimes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/ImageAssurancePolicyAutoScanTime:ImageAssurancePolicyAutoScanTime"
                        }
                    },
                    "blacklistPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "blacklistPermissionsEnabled": {
                        "type": "boolean"
                    },
                    "blacklistedLicenses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "blacklistedLicensesEnabled": {
                        "type": "boolean"
                    },
                    "blockFailed": {
                        "type": "boolean"
                    },
                    "controlExcludeNoFix": {
                        "type": "boolean"
                    },
                    "customChecks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/ImageAssurancePolicyCustomCheck:ImageAssurancePolicyCustomCheck"
                        }
                    },
                    "customChecksEnabled": {
                        "type": "boolean"
                    },
                    "customSeverityEnabled": {
                        "type": "boolean"
                    },
                    "cvesBlackListEnabled": {
                        "type": "boolean"
                    },
                    "cvesBlackLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cvesWhiteListEnabled": {
                        "type": "boolean"
                    },
                    "cvesWhiteLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cvssSeverity": {
                        "type": "string"
                    },
                    "cvssSeverityEnabled": {
                        "type": "boolean"
                    },
                    "cvssSeverityExcludeNoFix": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "disallowMalware": {
                        "type": "boolean"
                    },
                    "dockerCisEnabled": {
                        "type": "boolean"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "dtaEnabled": {
                        "type": "boolean"
                    },
                    "dtaSeverity": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enforce": {
                        "type": "boolean"
                    },
                    "enforceAfterDays": {
                        "type": "integer"
                    },
                    "enforceExcessivePermissions": {
                        "type": "boolean"
                    },
                    "exceptionalMonitoredMalwarePaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "failCicd": {
                        "type": "boolean"
                    },
                    "forbiddenLabels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/ImageAssurancePolicyForbiddenLabel:ImageAssurancePolicyForbiddenLabel"
                        }
                    },
                    "forbiddenLabelsEnabled": {
                        "type": "boolean"
                    },
                    "forceMicroenforcer": {
                        "type": "boolean"
                    },
                    "functionIntegrityEnabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "ignoreRecentlyPublishedVln": {
                        "type": "boolean"
                    },
                    "ignoreRecentlyPublishedVlnPeriod": {
                        "type": "integer"
                    },
                    "ignoreRiskResourcesEnabled": {
                        "type": "boolean"
                    },
                    "ignoredRiskResources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "kubeCisEnabled": {
                        "type": "boolean"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "malwareAction": {
                        "type": "string"
                    },
                    "maximumScore": {
                        "type": "number"
                    },
                    "maximumScoreEnabled": {
                        "type": "boolean"
                    },
                    "maximumScoreExcludeNoFix": {
                        "type": "boolean"
                    },
                    "monitoredMalwarePaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "onlyNoneRootUsers": {
                        "type": "boolean"
                    },
                    "packagesBlackListEnabled": {
                        "type": "boolean"
                    },
                    "packagesBlackLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/ImageAssurancePolicyPackagesBlackList:ImageAssurancePolicyPackagesBlackList"
                        }
                    },
                    "packagesWhiteListEnabled": {
                        "type": "boolean"
                    },
                    "packagesWhiteLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/ImageAssurancePolicyPackagesWhiteList:ImageAssurancePolicyPackagesWhiteList"
                        }
                    },
                    "partialResultsImageFail": {
                        "type": "boolean"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "registries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "registry": {
                        "type": "string"
                    },
                    "requiredLabels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/ImageAssurancePolicyRequiredLabel:ImageAssurancePolicyRequiredLabel"
                        }
                    },
                    "requiredLabelsEnabled": {
                        "type": "boolean"
                    },
                    "scanNfsMounts": {
                        "type": "boolean"
                    },
                    "scanSensitiveData": {
                        "type": "boolean"
                    },
                    "scapEnabled": {
                        "type": "boolean"
                    },
                    "scapFiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/ImageAssurancePolicyScope:ImageAssurancePolicyScope"
                        }
                    },
                    "trustedBaseImages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/ImageAssurancePolicyTrustedBaseImage:ImageAssurancePolicyTrustedBaseImage"
                        }
                    },
                    "trustedBaseImagesEnabled": {
                        "type": "boolean"
                    },
                    "whitelistedLicenses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "whitelistedLicensesEnabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/integrationRegistry:IntegrationRegistry": {
            "properties": {
                "author": {
                    "type": "string"
                },
                "autoPull": {
                    "type": "boolean"
                },
                "autoPullMax": {
                    "type": "integer"
                },
                "autoPullTime": {
                    "type": "string"
                },
                "lastUpdated": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "prefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "required": [
                "author",
                "lastUpdated",
                "name",
                "prefixes",
                "type"
            ],
            "inputProperties": {
                "author": {
                    "type": "string"
                },
                "autoPull": {
                    "type": "boolean"
                },
                "autoPullMax": {
                    "type": "integer"
                },
                "autoPullTime": {
                    "type": "string"
                },
                "lastUpdated": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "prefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "prefixes",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationRegistry resources.\n",
                "properties": {
                    "author": {
                        "type": "string"
                    },
                    "autoPull": {
                        "type": "boolean"
                    },
                    "autoPullMax": {
                        "type": "integer"
                    },
                    "autoPullTime": {
                        "type": "string"
                    },
                    "lastUpdated": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "prefixes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/notificationSlack:NotificationSlack": {
            "properties": {
                "channel": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "mainText": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "serviceKey": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "webhookUrl": {
                    "type": "string"
                }
            },
            "required": [
                "channel",
                "enabled",
                "name",
                "type",
                "userName",
                "webhookUrl"
            ],
            "inputProperties": {
                "channel": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "mainText": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "serviceKey": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "webhookUrl": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "channel",
                "enabled",
                "type",
                "userName",
                "webhookUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationSlack resources.\n",
                "properties": {
                    "channel": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "mainText": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceKey": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "webhookUrl": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/permissionsSets:PermissionsSets": {
            "description": "The `aquasec.PermissionsSets` resource manages your Permission Set within Aqua.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aquasec from \"@pulumi/aquasec\";\n\nconst myTerraformPermSet = new aquasec.PermissionsSets(\"my_terraform_perm_set\", {\n    actions: [\n        \"dashboard.read\",\n        \"risks.vulnerabilities.read\",\n        \"risks.vulnerabilities.write\",\n        \"risks.host_images.read\",\n        \"risks.benchmark.read\",\n        \"risk_explorer.read\",\n        \"images.read\",\n        \"image_profiles.read\",\n        \"image_assurance.read\",\n        \"image_assurance.write\",\n        \"runtime_policies.read\",\n        \"runtime_policies.write\",\n        \"functions.read\",\n        \"gateways.read\",\n        \"secrets.read\",\n        \"audits.read\",\n        \"containers.read\",\n        \"enforcers.read\",\n        \"infrastructure.read\",\n        \"consoles.read\",\n        \"settings.read\",\n        \"network_policies.read\",\n        \"acl_policies.read\",\n        \"acl_policies.write\",\n        \"services.read\",\n        \"integrations.read\",\n        \"registries_integrations.read\",\n        \"web_hook.read\",\n        \"incidents.read\",\n    ],\n    author: \"system\",\n    description: \"created from terraform\",\n    isSuper: false,\n    uiAccess: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_aquasec as aquasec\n\nmy_terraform_perm_set = aquasec.PermissionsSets(\"myTerraformPermSet\",\n    actions=[\n        \"dashboard.read\",\n        \"risks.vulnerabilities.read\",\n        \"risks.vulnerabilities.write\",\n        \"risks.host_images.read\",\n        \"risks.benchmark.read\",\n        \"risk_explorer.read\",\n        \"images.read\",\n        \"image_profiles.read\",\n        \"image_assurance.read\",\n        \"image_assurance.write\",\n        \"runtime_policies.read\",\n        \"runtime_policies.write\",\n        \"functions.read\",\n        \"gateways.read\",\n        \"secrets.read\",\n        \"audits.read\",\n        \"containers.read\",\n        \"enforcers.read\",\n        \"infrastructure.read\",\n        \"consoles.read\",\n        \"settings.read\",\n        \"network_policies.read\",\n        \"acl_policies.read\",\n        \"acl_policies.write\",\n        \"services.read\",\n        \"integrations.read\",\n        \"registries_integrations.read\",\n        \"web_hook.read\",\n        \"incidents.read\",\n    ],\n    author=\"system\",\n    description=\"created from terraform\",\n    is_super=False,\n    ui_access=True)\n```\n```csharp\nusing Pulumi;\nusing Aquasec = Pulumi.Aquasec;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myTerraformPermSet = new Aquasec.PermissionsSets(\"myTerraformPermSet\", new Aquasec.PermissionsSetsArgs\n        {\n            Actions = \n            {\n                \"dashboard.read\",\n                \"risks.vulnerabilities.read\",\n                \"risks.vulnerabilities.write\",\n                \"risks.host_images.read\",\n                \"risks.benchmark.read\",\n                \"risk_explorer.read\",\n                \"images.read\",\n                \"image_profiles.read\",\n                \"image_assurance.read\",\n                \"image_assurance.write\",\n                \"runtime_policies.read\",\n                \"runtime_policies.write\",\n                \"functions.read\",\n                \"gateways.read\",\n                \"secrets.read\",\n                \"audits.read\",\n                \"containers.read\",\n                \"enforcers.read\",\n                \"infrastructure.read\",\n                \"consoles.read\",\n                \"settings.read\",\n                \"network_policies.read\",\n                \"acl_policies.read\",\n                \"acl_policies.write\",\n                \"services.read\",\n                \"integrations.read\",\n                \"registries_integrations.read\",\n                \"web_hook.read\",\n                \"incidents.read\",\n            },\n            Author = \"system\",\n            Description = \"created from terraform\",\n            IsSuper = false,\n            UiAccess = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aquasec/sdk/go/aquasec\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aquasec.NewPermissionsSets(ctx, \"myTerraformPermSet\", \u0026aquasec.PermissionsSetsArgs{\n\t\t\tActions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"dashboard.read\"),\n\t\t\t\tpulumi.String(\"risks.vulnerabilities.read\"),\n\t\t\t\tpulumi.String(\"risks.vulnerabilities.write\"),\n\t\t\t\tpulumi.String(\"risks.host_images.read\"),\n\t\t\t\tpulumi.String(\"risks.benchmark.read\"),\n\t\t\t\tpulumi.String(\"risk_explorer.read\"),\n\t\t\t\tpulumi.String(\"images.read\"),\n\t\t\t\tpulumi.String(\"image_profiles.read\"),\n\t\t\t\tpulumi.String(\"image_assurance.read\"),\n\t\t\t\tpulumi.String(\"image_assurance.write\"),\n\t\t\t\tpulumi.String(\"runtime_policies.read\"),\n\t\t\t\tpulumi.String(\"runtime_policies.write\"),\n\t\t\t\tpulumi.String(\"functions.read\"),\n\t\t\t\tpulumi.String(\"gateways.read\"),\n\t\t\t\tpulumi.String(\"secrets.read\"),\n\t\t\t\tpulumi.String(\"audits.read\"),\n\t\t\t\tpulumi.String(\"containers.read\"),\n\t\t\t\tpulumi.String(\"enforcers.read\"),\n\t\t\t\tpulumi.String(\"infrastructure.read\"),\n\t\t\t\tpulumi.String(\"consoles.read\"),\n\t\t\t\tpulumi.String(\"settings.read\"),\n\t\t\t\tpulumi.String(\"network_policies.read\"),\n\t\t\t\tpulumi.String(\"acl_policies.read\"),\n\t\t\t\tpulumi.String(\"acl_policies.write\"),\n\t\t\t\tpulumi.String(\"services.read\"),\n\t\t\t\tpulumi.String(\"integrations.read\"),\n\t\t\t\tpulumi.String(\"registries_integrations.read\"),\n\t\t\t\tpulumi.String(\"web_hook.read\"),\n\t\t\t\tpulumi.String(\"incidents.read\"),\n\t\t\t},\n\t\t\tAuthor:      pulumi.String(\"system\"),\n\t\t\tDescription: pulumi.String(\"created from terraform\"),\n\t\t\tIsSuper:     pulumi.Bool(false),\n\t\t\tUiAccess:    pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "author": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "isSuper": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "uiAccess": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "actions",
                "id",
                "name",
                "uiAccess",
                "updatedAt"
            ],
            "inputProperties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "author": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "isSuper": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "uiAccess": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "actions",
                "uiAccess"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PermissionsSets resources.\n",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "author": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "isSuper": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "uiAccess": {
                        "type": "boolean"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/role:Role": {
            "description": "The `aquasec.Role` resource manages your roles within Aqua.\n\nThe roles created must have permission set and at least one Role Application Scope that is already present within Aqua.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aquasec from \"@pulumi/aquasec\";\n\nconst iaC = new aquasec.Role(\"IaC\", {\n    description: \"RoleIaC\",\n    permission: \"PermissionIaC\",\n    roleName: \"RoleIaC\",\n    scopes: [\"Global\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_aquasec as aquasec\n\nia_c = aquasec.Role(\"iaC\",\n    description=\"RoleIaC\",\n    permission=\"PermissionIaC\",\n    role_name=\"RoleIaC\",\n    scopes=[\"Global\"])\n```\n```csharp\nusing Pulumi;\nusing Aquasec = Pulumi.Aquasec;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var iaC = new Aquasec.Role(\"iaC\", new Aquasec.RoleArgs\n        {\n            Description = \"RoleIaC\",\n            Permission = \"PermissionIaC\",\n            RoleName = \"RoleIaC\",\n            Scopes = \n            {\n                \"Global\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aquasec/sdk/go/aquasec\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aquasec.NewRole(ctx, \"iaC\", \u0026aquasec.RoleArgs{\n\t\t\tDescription: pulumi.String(\"RoleIaC\"),\n\t\t\tPermission:  pulumi.String(\"PermissionIaC\"),\n\t\t\tRoleName:    pulumi.String(\"RoleIaC\"),\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Global\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "author": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "roleName": {
                    "type": "string"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "author",
                "permission",
                "roleName",
                "scopes",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "roleName": {
                    "type": "string"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "permission",
                "roleName",
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Role resources.\n",
                "properties": {
                    "author": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "roleName": {
                        "type": "string"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/service:Service": {
            "properties": {
                "applicationScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the application scope of the service.\n"
                },
                "author": {
                    "type": "string",
                    "description": "Username of the account that created the service.\n"
                },
                "containersCount": {
                    "type": "integer",
                    "description": "The number of containers associated with the service.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A textual description of the service record; maximum 500 characters.\n"
                },
                "enforce": {
                    "type": "boolean",
                    "description": "Enforcement status of the service.\n"
                },
                "evaluated": {
                    "type": "boolean",
                    "description": "Whether the service has been evaluated for security vulnerabilities.\n"
                },
                "isRegistered": {
                    "type": "boolean",
                    "description": "Indicates if registered or not.\n"
                },
                "lastupdate": {
                    "type": "integer",
                    "description": "Timestamp of the last update in Unix time format.\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Indicates if monitoring is enabled or not\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service. It is recommended not to use whitespace characters in the name.\n"
                },
                "notEvaluatedCount": {
                    "type": "integer",
                    "description": "The number of container that are not evaluated.\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The service's policies; an array of container firewall policy names.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Rules priority, must be between 1-100.\n"
                },
                "scopeExpression": {
                    "type": "string",
                    "description": "Logical expression of how to compute the dependency of the scope variables.\n"
                },
                "scopeVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ServiceScopeVariable:ServiceScopeVariable"
                    },
                    "description": "List of scope attributes.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Type of the workload. container or host.\n"
                },
                "unregisteredCount": {
                    "type": "integer",
                    "description": "The number of containers allocated to the service that are not registered.\n"
                },
                "vulnerabilitiesHigh": {
                    "type": "integer",
                    "description": "Number of high severity vulnerabilities.\n"
                },
                "vulnerabilitiesLow": {
                    "type": "integer",
                    "description": "Number of low severity vulnerabilities.\n"
                },
                "vulnerabilitiesMalware": {
                    "type": "integer",
                    "description": "Number of malware.\n"
                },
                "vulnerabilitiesMedium": {
                    "type": "integer",
                    "description": "Number of medium severity vulnerabilities.\n"
                },
                "vulnerabilitiesNegligible": {
                    "type": "integer",
                    "description": "Number of negligible vulnerabilities.\n"
                },
                "vulnerabilitiesScoreAverage": {
                    "type": "integer",
                    "description": "The CVSS average vulnerabilities score.\n"
                },
                "vulnerabilitiesSensitive": {
                    "type": "integer",
                    "description": "Number of sensitive vulnerabilities.\n"
                },
                "vulnerabilitiesTotal": {
                    "type": "integer",
                    "description": "Total number of vulnerabilities.\n"
                }
            },
            "required": [
                "applicationScopes",
                "author",
                "containersCount",
                "evaluated",
                "isRegistered",
                "lastupdate",
                "name",
                "notEvaluatedCount",
                "policies",
                "scopeExpression",
                "scopeVariables",
                "target",
                "unregisteredCount",
                "vulnerabilitiesHigh",
                "vulnerabilitiesLow",
                "vulnerabilitiesMalware",
                "vulnerabilitiesMedium",
                "vulnerabilitiesNegligible",
                "vulnerabilitiesScoreAverage",
                "vulnerabilitiesSensitive",
                "vulnerabilitiesTotal"
            ],
            "inputProperties": {
                "applicationScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the application scope of the service.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A textual description of the service record; maximum 500 characters.\n"
                },
                "enforce": {
                    "type": "boolean",
                    "description": "Enforcement status of the service.\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Indicates if monitoring is enabled or not\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service. It is recommended not to use whitespace characters in the name.\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The service's policies; an array of container firewall policy names.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Rules priority, must be between 1-100.\n"
                },
                "scopeExpression": {
                    "type": "string",
                    "description": "Logical expression of how to compute the dependency of the scope variables.\n"
                },
                "scopeVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/ServiceScopeVariable:ServiceScopeVariable"
                    },
                    "description": "List of scope attributes.\n"
                },
                "target": {
                    "type": "string",
                    "description": "Type of the workload. container or host.\n"
                }
            },
            "requiredInputs": [
                "applicationScopes",
                "policies",
                "scopeExpression",
                "scopeVariables",
                "target"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Service resources.\n",
                "properties": {
                    "applicationScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates the application scope of the service.\n"
                    },
                    "author": {
                        "type": "string",
                        "description": "Username of the account that created the service.\n"
                    },
                    "containersCount": {
                        "type": "integer",
                        "description": "The number of containers associated with the service.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A textual description of the service record; maximum 500 characters.\n"
                    },
                    "enforce": {
                        "type": "boolean",
                        "description": "Enforcement status of the service.\n"
                    },
                    "evaluated": {
                        "type": "boolean",
                        "description": "Whether the service has been evaluated for security vulnerabilities.\n"
                    },
                    "isRegistered": {
                        "type": "boolean",
                        "description": "Indicates if registered or not.\n"
                    },
                    "lastupdate": {
                        "type": "integer",
                        "description": "Timestamp of the last update in Unix time format.\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Indicates if monitoring is enabled or not\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the service. It is recommended not to use whitespace characters in the name.\n"
                    },
                    "notEvaluatedCount": {
                        "type": "integer",
                        "description": "The number of container that are not evaluated.\n"
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The service's policies; an array of container firewall policy names.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Rules priority, must be between 1-100.\n"
                    },
                    "scopeExpression": {
                        "type": "string",
                        "description": "Logical expression of how to compute the dependency of the scope variables.\n"
                    },
                    "scopeVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/ServiceScopeVariable:ServiceScopeVariable"
                        },
                        "description": "List of scope attributes.\n"
                    },
                    "target": {
                        "type": "string",
                        "description": "Type of the workload. container or host.\n"
                    },
                    "unregisteredCount": {
                        "type": "integer",
                        "description": "The number of containers allocated to the service that are not registered.\n"
                    },
                    "vulnerabilitiesHigh": {
                        "type": "integer",
                        "description": "Number of high severity vulnerabilities.\n"
                    },
                    "vulnerabilitiesLow": {
                        "type": "integer",
                        "description": "Number of low severity vulnerabilities.\n"
                    },
                    "vulnerabilitiesMalware": {
                        "type": "integer",
                        "description": "Number of malware.\n"
                    },
                    "vulnerabilitiesMedium": {
                        "type": "integer",
                        "description": "Number of medium severity vulnerabilities.\n"
                    },
                    "vulnerabilitiesNegligible": {
                        "type": "integer",
                        "description": "Number of negligible vulnerabilities.\n"
                    },
                    "vulnerabilitiesScoreAverage": {
                        "type": "integer",
                        "description": "The CVSS average vulnerabilities score.\n"
                    },
                    "vulnerabilitiesSensitive": {
                        "type": "integer",
                        "description": "Number of sensitive vulnerabilities.\n"
                    },
                    "vulnerabilitiesTotal": {
                        "type": "integer",
                        "description": "Total number of vulnerabilities.\n"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/user:User": {
            "description": "The `aquasec.User` resource manages your users within Aqua.\n\nThe users created must have at least one Role that is already present within Aqua.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aquasec from \"@pulumi/aquasec\";\n\nconst iaC = new aquasec.User(\"iaC\", {\n    userId: \"IaC\",\n    password: _var.password,\n    roles: [\"infrastructure\"],\n    email: \"infrastructure@example.com\",\n    firstTime: true,\n});\n// Display name for this user\n```\n```python\nimport pulumi\nimport pulumi_aquasec as aquasec\n\nia_c = aquasec.User(\"iaC\",\n    user_id=\"IaC\",\n    password=var[\"password\"],\n    roles=[\"infrastructure\"],\n    email=\"infrastructure@example.com\",\n    first_time=True)\n# Display name for this user\n```\n```csharp\nusing Pulumi;\nusing Aquasec = Pulumi.Aquasec;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var iaC = new Aquasec.User(\"iaC\", new Aquasec.UserArgs\n        {\n            UserId = \"IaC\",\n            Password = @var.Password,\n            Roles = \n            {\n                \"infrastructure\",\n            },\n            Email = \"infrastructure@example.com\",\n            FirstTime = true,\n        });\n        // Display name for this user\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aquasec/sdk/go/aquasec\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aquasec.NewUser(ctx, \"iaC\", \u0026aquasec.UserArgs{\n\t\t\tUserId:   pulumi.String(\"IaC\"),\n\t\t\tPassword: pulumi.Any(_var.Password),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"infrastructure\"),\n\t\t\t},\n\t\t\tEmail:     pulumi.String(\"infrastructure@example.com\"),\n\t\t\tFirstTime: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstTime": {
                    "type": "boolean"
                },
                "isSuper": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordConfirm": {
                    "type": "string"
                },
                "plan": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "uiAccess": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "string"
                }
            },
            "required": [
                "isSuper",
                "name",
                "password",
                "plan",
                "role",
                "roles",
                "type",
                "uiAccess",
                "userId"
            ],
            "inputProperties": {
                "email": {
                    "type": "string"
                },
                "firstTime": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordConfirm": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "password",
                "roles",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "firstTime": {
                        "type": "boolean"
                    },
                    "isSuper": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "passwordConfirm": {
                        "type": "string"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "uiAccess": {
                        "type": "boolean"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "aquasec:index/userSaas:UserSaas": {
            "description": "The `aquasec.UserSaas` resource manages your saas users within Aqua.\n\nThe users created must have at least one Csp Role that is already present within Aqua.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aquasec from \"@pulumi/aquasec\";\n\nconst iaC1 = new aquasec.UserSaas(\"IaC1\", {\n    accountAdmin: true,\n    cspRoles: [],\n    email: \"infrastructure1@example.com\",\n});\nconst iaC2 = new aquasec.UserSaas(\"IaC2\", {\n    accountAdmin: false,\n    cspRoles: [\"Default\"],\n    email: \"infrastructure2@example.com\",\n    //optional\n    groups: [{\n        groupAdmin: false,\n        name: \"IacGroupName\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_aquasec as aquasec\n\nia_c1 = aquasec.UserSaas(\"iaC1\",\n    account_admin=True,\n    csp_roles=[],\n    email=\"infrastructure1@example.com\")\nia_c2 = aquasec.UserSaas(\"iaC2\",\n    account_admin=False,\n    csp_roles=[\"Default\"],\n    email=\"infrastructure2@example.com\",\n    groups=[aquasec.UserSaasGroupArgs(\n        group_admin=False,\n        name=\"IacGroupName\",\n    )])\n```\n```csharp\nusing Pulumi;\nusing Aquasec = Pulumi.Aquasec;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var iaC1 = new Aquasec.UserSaas(\"iaC1\", new Aquasec.UserSaasArgs\n        {\n            AccountAdmin = true,\n            CspRoles = {},\n            Email = \"infrastructure1@example.com\",\n        });\n        var iaC2 = new Aquasec.UserSaas(\"iaC2\", new Aquasec.UserSaasArgs\n        {\n            AccountAdmin = false,\n            CspRoles = \n            {\n                \"Default\",\n            },\n            Email = \"infrastructure2@example.com\",\n            Groups = \n            {\n                new Aquasec.Inputs.UserSaasGroupArgs\n                {\n                    GroupAdmin = false,\n                    Name = \"IacGroupName\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aquasec/sdk/go/aquasec\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aquasec.NewUserSaas(ctx, \"iaC1\", \u0026aquasec.UserSaasArgs{\n\t\t\tAccountAdmin: pulumi.Bool(true),\n\t\t\tCspRoles:     pulumi.StringArray{},\n\t\t\tEmail:        pulumi.String(\"infrastructure1@example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = aquasec.NewUserSaas(ctx, \"iaC2\", \u0026aquasec.UserSaasArgs{\n\t\t\tAccountAdmin: pulumi.Bool(false),\n\t\t\tCspRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Default\"),\n\t\t\t},\n\t\t\tEmail: pulumi.String(\"infrastructure2@example.com\"),\n\t\t\tGroups: UserSaasGroupArray{\n\t\t\t\t\u0026UserSaasGroupArgs{\n\t\t\t\t\tGroupAdmin: pulumi.Bool(false),\n\t\t\t\t\tName:       pulumi.String(\"IacGroupName\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accountAdmin": {
                    "type": "boolean"
                },
                "confirmed": {
                    "type": "boolean"
                },
                "created": {
                    "type": "string"
                },
                "cspRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "email": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/UserSaasGroup:UserSaasGroup"
                    }
                },
                "logins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/UserSaasLogin:UserSaasLogin"
                    }
                },
                "multiaccount": {
                    "type": "boolean"
                },
                "passwordReset": {
                    "type": "boolean"
                },
                "sendAnnouncements": {
                    "type": "boolean"
                },
                "sendNewPlugins": {
                    "type": "boolean"
                },
                "sendNewRisks": {
                    "type": "boolean"
                },
                "sendScanResults": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "string"
                }
            },
            "required": [
                "accountAdmin",
                "confirmed",
                "created",
                "cspRoles",
                "email",
                "logins",
                "multiaccount",
                "passwordReset",
                "sendAnnouncements",
                "sendNewPlugins",
                "sendNewRisks",
                "sendScanResults",
                "userId"
            ],
            "inputProperties": {
                "accountAdmin": {
                    "type": "boolean"
                },
                "cspRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "email": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aquasec:index/UserSaasGroup:UserSaasGroup"
                    }
                }
            },
            "requiredInputs": [
                "accountAdmin",
                "cspRoles",
                "email"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserSaas resources.\n",
                "properties": {
                    "accountAdmin": {
                        "type": "boolean"
                    },
                    "confirmed": {
                        "type": "boolean"
                    },
                    "created": {
                        "type": "string"
                    },
                    "cspRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "email": {
                        "type": "string"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/UserSaasGroup:UserSaasGroup"
                        }
                    },
                    "logins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/UserSaasLogin:UserSaasLogin"
                        }
                    },
                    "multiaccount": {
                        "type": "boolean"
                    },
                    "passwordReset": {
                        "type": "boolean"
                    },
                    "sendAnnouncements": {
                        "type": "boolean"
                    },
                    "sendNewPlugins": {
                        "type": "boolean"
                    },
                    "sendNewRisks": {
                        "type": "boolean"
                    },
                    "sendScanResults": {
                        "type": "boolean"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "aquasec:index/getApplicationScope:getApplicationScope": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aquasec from \"@pulumi/aquasec\";\n\nconst default = aquasec.getApplicationScope({\n    name: \"Global\",\n});\nexport const scopes = _default;\n```\n```python\nimport pulumi\nimport pulumi_aquasec as aquasec\n\ndefault = aquasec.get_application_scope(name=\"Global\")\npulumi.export(\"scopes\", default)\n```\n```csharp\nusing Pulumi;\nusing Aquasec = Pulumi.Aquasec;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var @default = Output.Create(Aquasec.GetApplicationScope.InvokeAsync(new Aquasec.GetApplicationScopeArgs\n        {\n            Name = \"Global\",\n        }));\n        this.Scopes = @default;\n    }\n\n    [Output(\"scopes\")]\n    public Output\u003cstring\u003e Scopes { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aquasec/sdk/go/aquasec\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_default, err := aquasec.LookupApplicationScope(ctx, \u0026GetApplicationScopeArgs{\n\t\t\tName: \"Global\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"scopes\", _default)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getApplicationScope.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getApplicationScopeCategory:getApplicationScopeCategory"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ownerEmail": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApplicationScope.\n",
                "properties": {
                    "author": {
                        "type": "string"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getApplicationScopeCategory:getApplicationScopeCategory"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ownerEmail": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "author",
                    "name",
                    "id"
                ]
            }
        },
        "aquasec:index/getContainerRuntimePolicy:getContainerRuntimePolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRuntimePolicy.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the container runtime policy\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRuntimePolicy.\n",
                "properties": {
                    "allowedExecutables": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of executables that are allowed for the user.\n"
                    },
                    "applicationScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates the application scope of the service.\n"
                    },
                    "auditAllNetworkActivity": {
                        "type": "boolean",
                        "description": "If true, all network activity will be audited.\n"
                    },
                    "auditAllProcessesActivity": {
                        "type": "boolean",
                        "description": "If true, all process activity will be audited.\n"
                    },
                    "auditFullCommandArguments": {
                        "type": "boolean",
                        "description": "If true, full command arguments will be audited.\n"
                    },
                    "author": {
                        "type": "string",
                        "description": "Username of the account that created the service.\n"
                    },
                    "blockAccessHostNetwork": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with access to host network.\n"
                    },
                    "blockAddingCapabilities": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with adding capabilities with `--cap-add` privilege.\n"
                    },
                    "blockContainerExec": {
                        "type": "boolean",
                        "description": "If true, exec into a container is prevented.\n"
                    },
                    "blockLowPortBinding": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with the capability to bind in port lower than 1024.\n"
                    },
                    "blockNonCompliantImages": {
                        "type": "boolean",
                        "description": "If true, running non-compliant image in the container is prevented.\n"
                    },
                    "blockNonCompliantWorkloads": {
                        "type": "boolean",
                        "description": "If true, running containers in non-compliant pods is prevented.\n"
                    },
                    "blockPrivilegedContainers": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with privileged container capability.\n"
                    },
                    "blockRootUser": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with root user.\n"
                    },
                    "blockUnregisteredImages": {
                        "type": "boolean",
                        "description": "If true, running images in the container that are not registered in Aqua is prevented.\n"
                    },
                    "blockUseIpcNamespace": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with the privilege to use the IPC namespace.\n"
                    },
                    "blockUsePidNamespace": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with the privilege to use the PID namespace.\n"
                    },
                    "blockUseUserNamespace": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with the privilege to use the user namespace.\n"
                    },
                    "blockUseUtsNamespace": {
                        "type": "boolean",
                        "description": "If true, prevent containers from running with the privilege to use the UTS namespace.\n"
                    },
                    "blockedCapabilities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "If true, prevents containers from using specific Unix capabilities.\n"
                    },
                    "blockedExecutables": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of executables that are prevented from running in containers.\n"
                    },
                    "blockedFiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of files that are prevented from being read, modified and executed in the containers.\n"
                    },
                    "blockedInboundPorts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of blocked inbound ports.\n"
                    },
                    "blockedOutboundPorts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of blocked outbound ports.\n"
                    },
                    "blockedPackages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Prevent containers from reading, writing, or executing all files in the list of packages.\n"
                    },
                    "blockedVolumes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of volumes that are prevented from being mounted in the containers.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the container runtime policy\n"
                    },
                    "enableDriftPrevention": {
                        "type": "boolean",
                        "description": "If true, executables that are not in the original image is prevented from running.\n"
                    },
                    "enableForkGuard": {
                        "type": "boolean",
                        "description": "If true, fork bombs are prevented in the containers.\n"
                    },
                    "enableIpReputationSecurity": {
                        "type": "boolean",
                        "description": "If true, detect and prevent communication from containers to IP addresses known to have a bad reputation.\n"
                    },
                    "enablePortScanDetection": {
                        "type": "boolean",
                        "description": "If true, detects port scanning behavior in the container.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates if the runtime policy is enabled or not.\n"
                    },
                    "enforce": {
                        "type": "boolean",
                        "description": "Indicates that policy should effect container execution (not just for audit).\n"
                    },
                    "enforceAfterDays": {
                        "type": "integer",
                        "description": "Indicates the number of days after which the runtime policy will be changed to enforce mode.\n"
                    },
                    "exceptionalReadonlyFilesAndDirectories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of files and directories to be excluded from the read-only list.\n"
                    },
                    "forkGuardProcessLimit": {
                        "type": "integer",
                        "description": "Process limit for the fork guard.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "limitNewPrivileges": {
                        "type": "boolean",
                        "description": "If true, prevents the container from obtaining new privileges at runtime. (only enabled in enforce mode)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the container runtime policy\n"
                    },
                    "readonlyFilesAndDirectories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of files and directories to be restricted as read-only\n"
                    },
                    "scopeExpression": {
                        "type": "string",
                        "description": "Logical expression of how to compute the dependency of the scope variables.\n"
                    },
                    "scopeVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getContainerRuntimePolicyScopeVariable:getContainerRuntimePolicyScopeVariable"
                        },
                        "description": "List of scope attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "allowedExecutables",
                    "applicationScopes",
                    "auditAllNetworkActivity",
                    "auditAllProcessesActivity",
                    "auditFullCommandArguments",
                    "author",
                    "blockAccessHostNetwork",
                    "blockAddingCapabilities",
                    "blockContainerExec",
                    "blockLowPortBinding",
                    "blockNonCompliantImages",
                    "blockNonCompliantWorkloads",
                    "blockPrivilegedContainers",
                    "blockRootUser",
                    "blockUnregisteredImages",
                    "blockUseIpcNamespace",
                    "blockUsePidNamespace",
                    "blockUseUserNamespace",
                    "blockUseUtsNamespace",
                    "blockedCapabilities",
                    "blockedExecutables",
                    "blockedFiles",
                    "blockedInboundPorts",
                    "blockedOutboundPorts",
                    "blockedPackages",
                    "blockedVolumes",
                    "description",
                    "enableDriftPrevention",
                    "enableForkGuard",
                    "enableIpReputationSecurity",
                    "enablePortScanDetection",
                    "enabled",
                    "enforce",
                    "enforceAfterDays",
                    "exceptionalReadonlyFilesAndDirectories",
                    "forkGuardProcessLimit",
                    "limitNewPrivileges",
                    "name",
                    "readonlyFilesAndDirectories",
                    "scopeExpression",
                    "scopeVariables",
                    "id"
                ]
            }
        },
        "aquasec:index/getEnforcerGroups:getEnforcerGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getEnforcerGroups.\n",
                "properties": {
                    "groupId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "groupId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEnforcerGroups.\n",
                "properties": {
                    "admissionControl": {
                        "type": "boolean"
                    },
                    "allowKubeEnforcerAudit": {
                        "type": "boolean"
                    },
                    "allowedApplications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowedLabels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowedRegistries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "antivirusProtection": {
                        "type": "boolean"
                    },
                    "aquaVersion": {
                        "type": "string"
                    },
                    "auditAll": {
                        "type": "boolean"
                    },
                    "autoCopySecrets": {
                        "type": "boolean"
                    },
                    "autoDiscoverConfigureRegistries": {
                        "type": "boolean"
                    },
                    "autoDiscoveryEnabled": {
                        "type": "boolean"
                    },
                    "autoScanDiscoveredImagesRunningContainers": {
                        "type": "boolean"
                    },
                    "behavioralEngine": {
                        "type": "boolean"
                    },
                    "blockAdmissionControl": {
                        "type": "boolean"
                    },
                    "commands": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getEnforcerGroupsCommand:getEnforcerGroupsCommand"
                        }
                    },
                    "connectedCount": {
                        "type": "integer"
                    },
                    "containerActivityProtection": {
                        "type": "boolean"
                    },
                    "containerAntivirusProtection": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "disconnectedCount": {
                        "type": "integer"
                    },
                    "enforce": {
                        "type": "boolean"
                    },
                    "enforcerImageName": {
                        "type": "string"
                    },
                    "gatewayAddress": {
                        "type": "string"
                    },
                    "gatewayName": {
                        "type": "string"
                    },
                    "gateways": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "highVulns": {
                        "type": "integer"
                    },
                    "hostAssurance": {
                        "type": "boolean"
                    },
                    "hostBehavioralEngine": {
                        "type": "boolean"
                    },
                    "hostNetworkProtection": {
                        "type": "boolean"
                    },
                    "hostOs": {
                        "type": "string"
                    },
                    "hostProtection": {
                        "type": "boolean"
                    },
                    "hostUserProtection": {
                        "type": "boolean"
                    },
                    "hostsCount": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "imageAssurance": {
                        "type": "boolean"
                    },
                    "installCommand": {
                        "type": "string"
                    },
                    "kubeBenchImageName": {
                        "type": "string"
                    },
                    "lastUpdate": {
                        "type": "integer"
                    },
                    "logicalName": {
                        "type": "string"
                    },
                    "lowVulns": {
                        "type": "integer"
                    },
                    "medVulns": {
                        "type": "integer"
                    },
                    "microEnforcerCertsSecretsName": {
                        "type": "string"
                    },
                    "microEnforcerImageName": {
                        "type": "string"
                    },
                    "microEnforcerInjection": {
                        "type": "boolean"
                    },
                    "microEnforcerSecretsName": {
                        "type": "string"
                    },
                    "negVulns": {
                        "type": "integer"
                    },
                    "networkActivityProtection": {
                        "type": "boolean"
                    },
                    "networkProtection": {
                        "type": "boolean"
                    },
                    "orchestrators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getEnforcerGroupsOrchestrator:getEnforcerGroupsOrchestrator"
                        }
                    },
                    "pasDeploymentLink": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "riskExplorerAutoDiscovery": {
                        "type": "boolean"
                    },
                    "runtimePolicyName": {
                        "type": "string"
                    },
                    "runtimeType": {
                        "type": "string"
                    },
                    "syncHostImages": {
                        "type": "boolean"
                    },
                    "syscallEnabled": {
                        "type": "boolean"
                    },
                    "token": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "userAccessControl": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "admissionControl",
                    "allowKubeEnforcerAudit",
                    "allowedApplications",
                    "allowedLabels",
                    "allowedRegistries",
                    "antivirusProtection",
                    "aquaVersion",
                    "auditAll",
                    "autoCopySecrets",
                    "autoDiscoverConfigureRegistries",
                    "autoDiscoveryEnabled",
                    "autoScanDiscoveredImagesRunningContainers",
                    "behavioralEngine",
                    "blockAdmissionControl",
                    "commands",
                    "connectedCount",
                    "containerActivityProtection",
                    "containerAntivirusProtection",
                    "description",
                    "disconnectedCount",
                    "enforce",
                    "enforcerImageName",
                    "gatewayAddress",
                    "gatewayName",
                    "gateways",
                    "groupId",
                    "highVulns",
                    "hostAssurance",
                    "hostBehavioralEngine",
                    "hostNetworkProtection",
                    "hostOs",
                    "hostProtection",
                    "hostUserProtection",
                    "hostsCount",
                    "imageAssurance",
                    "installCommand",
                    "kubeBenchImageName",
                    "lastUpdate",
                    "logicalName",
                    "lowVulns",
                    "medVulns",
                    "microEnforcerCertsSecretsName",
                    "microEnforcerImageName",
                    "microEnforcerInjection",
                    "microEnforcerSecretsName",
                    "negVulns",
                    "networkActivityProtection",
                    "networkProtection",
                    "orchestrators",
                    "pasDeploymentLink",
                    "permission",
                    "riskExplorerAutoDiscovery",
                    "runtimePolicyName",
                    "runtimeType",
                    "syncHostImages",
                    "syscallEnabled",
                    "token",
                    "type",
                    "userAccessControl",
                    "id"
                ]
            }
        },
        "aquasec:index/getFirewallPolicy:getFirewallPolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallPolicy.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the policy, no longer than 128 characters and no slash characters.\n"
                    },
                    "outboundNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getFirewallPolicyOutboundNetwork:getFirewallPolicyOutboundNetwork"
                        },
                        "description": "Information on network addresses that are allowed to receive data or requests.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallPolicy.\n",
                "properties": {
                    "author": {
                        "type": "string",
                        "description": "Username of the account that created the policy.\n"
                    },
                    "blockIcmpPing": {
                        "type": "boolean",
                        "description": "Indicates whether policy includes blocking incoming 'ping' requests.\n"
                    },
                    "blockMetadataService": {
                        "type": "boolean",
                        "description": "Indicates whether policy includes blocking metadata services of the cloud.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the Firewall Policy.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "inboundNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getFirewallPolicyInboundNetwork:getFirewallPolicyInboundNetwork"
                        },
                        "description": "Information on network addresses that are allowed to pass in data or requests.\n"
                    },
                    "lastupdate": {
                        "type": "integer",
                        "description": "Timestamp of the last update in Unix time format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy, no longer than 128 characters and no slash characters.\n"
                    },
                    "outboundNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getFirewallPolicyOutboundNetwork:getFirewallPolicyOutboundNetwork"
                        },
                        "description": "Information on network addresses that are allowed to receive data or requests.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Indicates the class of protection defined by the firewall.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Aqua version functionality supported\n"
                    }
                },
                "type": "object",
                "required": [
                    "author",
                    "blockIcmpPing",
                    "blockMetadataService",
                    "description",
                    "inboundNetworks",
                    "lastupdate",
                    "name",
                    "type",
                    "version",
                    "id"
                ]
            }
        },
        "aquasec:index/getFunctionAssurancePolicy:getFunctionAssurancePolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getFunctionAssurancePolicy.\n",
                "properties": {
                    "maximumScoreExcludeNoFix": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFunctionAssurancePolicy.\n",
                "properties": {
                    "allowedImages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "applicationScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assuranceType": {
                        "type": "string"
                    },
                    "auditOnFailure": {
                        "type": "boolean"
                    },
                    "author": {
                        "type": "string"
                    },
                    "autoScanConfigured": {
                        "type": "boolean"
                    },
                    "autoScanEnabled": {
                        "type": "boolean"
                    },
                    "autoScanTimes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getFunctionAssurancePolicyAutoScanTime:getFunctionAssurancePolicyAutoScanTime"
                        }
                    },
                    "blacklistPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "blacklistPermissionsEnabled": {
                        "type": "boolean"
                    },
                    "blacklistedLicenses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "blacklistedLicensesEnabled": {
                        "type": "boolean"
                    },
                    "blockFailed": {
                        "type": "boolean"
                    },
                    "controlExcludeNoFix": {
                        "type": "boolean"
                    },
                    "customChecks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getFunctionAssurancePolicyCustomCheck:getFunctionAssurancePolicyCustomCheck"
                        }
                    },
                    "customChecksEnabled": {
                        "type": "boolean"
                    },
                    "customSeverityEnabled": {
                        "type": "boolean"
                    },
                    "cvesBlackListEnabled": {
                        "type": "boolean"
                    },
                    "cvesBlackLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cvesWhiteListEnabled": {
                        "type": "boolean"
                    },
                    "cvesWhiteLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cvssSeverity": {
                        "type": "string"
                    },
                    "cvssSeverityEnabled": {
                        "type": "boolean"
                    },
                    "cvssSeverityExcludeNoFix": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "disallowMalware": {
                        "type": "boolean"
                    },
                    "dockerCisEnabled": {
                        "type": "boolean"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "dtaEnabled": {
                        "type": "boolean"
                    },
                    "dtaSeverity": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enforce": {
                        "type": "boolean"
                    },
                    "enforceAfterDays": {
                        "type": "integer"
                    },
                    "enforceExcessivePermissions": {
                        "type": "boolean"
                    },
                    "exceptionalMonitoredMalwarePaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "failCicd": {
                        "type": "boolean"
                    },
                    "forbiddenLabels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getFunctionAssurancePolicyForbiddenLabel:getFunctionAssurancePolicyForbiddenLabel"
                        }
                    },
                    "forbiddenLabelsEnabled": {
                        "type": "boolean"
                    },
                    "forceMicroenforcer": {
                        "type": "boolean"
                    },
                    "functionIntegrityEnabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "ignoreRecentlyPublishedVln": {
                        "type": "boolean"
                    },
                    "ignoreRecentlyPublishedVlnPeriod": {
                        "type": "integer"
                    },
                    "ignoreRiskResourcesEnabled": {
                        "type": "boolean"
                    },
                    "ignoredRiskResources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "kubeCisEnabled": {
                        "type": "boolean"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "malwareAction": {
                        "type": "string"
                    },
                    "maximumScore": {
                        "type": "number"
                    },
                    "maximumScoreEnabled": {
                        "type": "boolean"
                    },
                    "maximumScoreExcludeNoFix": {
                        "type": "boolean"
                    },
                    "monitoredMalwarePaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "onlyNoneRootUsers": {
                        "type": "boolean"
                    },
                    "packagesBlackListEnabled": {
                        "type": "boolean"
                    },
                    "packagesBlackLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getFunctionAssurancePolicyPackagesBlackList:getFunctionAssurancePolicyPackagesBlackList"
                        }
                    },
                    "packagesWhiteListEnabled": {
                        "type": "boolean"
                    },
                    "packagesWhiteLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getFunctionAssurancePolicyPackagesWhiteList:getFunctionAssurancePolicyPackagesWhiteList"
                        }
                    },
                    "partialResultsImageFail": {
                        "type": "boolean"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "registries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "registry": {
                        "type": "string"
                    },
                    "requiredLabels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getFunctionAssurancePolicyRequiredLabel:getFunctionAssurancePolicyRequiredLabel"
                        }
                    },
                    "requiredLabelsEnabled": {
                        "type": "boolean"
                    },
                    "scanNfsMounts": {
                        "type": "boolean"
                    },
                    "scanSensitiveData": {
                        "type": "boolean"
                    },
                    "scapEnabled": {
                        "type": "boolean"
                    },
                    "scapFiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getFunctionAssurancePolicyScope:getFunctionAssurancePolicyScope"
                        }
                    },
                    "trustedBaseImages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getFunctionAssurancePolicyTrustedBaseImage:getFunctionAssurancePolicyTrustedBaseImage"
                        }
                    },
                    "trustedBaseImagesEnabled": {
                        "type": "boolean"
                    },
                    "whitelistedLicenses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "whitelistedLicensesEnabled": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "allowedImages",
                    "applicationScopes",
                    "assuranceType",
                    "auditOnFailure",
                    "author",
                    "autoScanConfigured",
                    "autoScanEnabled",
                    "autoScanTimes",
                    "blacklistPermissions",
                    "blacklistPermissionsEnabled",
                    "blacklistedLicenses",
                    "blacklistedLicensesEnabled",
                    "blockFailed",
                    "controlExcludeNoFix",
                    "customChecks",
                    "customChecksEnabled",
                    "customSeverityEnabled",
                    "cvesBlackLists",
                    "cvesBlackListEnabled",
                    "cvesWhiteLists",
                    "cvesWhiteListEnabled",
                    "cvssSeverity",
                    "cvssSeverityEnabled",
                    "cvssSeverityExcludeNoFix",
                    "description",
                    "disallowMalware",
                    "dockerCisEnabled",
                    "domain",
                    "domainName",
                    "dtaEnabled",
                    "dtaSeverity",
                    "enabled",
                    "enforce",
                    "enforceAfterDays",
                    "enforceExcessivePermissions",
                    "exceptionalMonitoredMalwarePaths",
                    "failCicd",
                    "forbiddenLabels",
                    "forbiddenLabelsEnabled",
                    "forceMicroenforcer",
                    "functionIntegrityEnabled",
                    "id",
                    "ignoreRecentlyPublishedVln",
                    "ignoreRecentlyPublishedVlnPeriod",
                    "ignoreRiskResourcesEnabled",
                    "ignoredRiskResources",
                    "images",
                    "kubeCisEnabled",
                    "labels",
                    "malwareAction",
                    "maximumScore",
                    "maximumScoreEnabled",
                    "monitoredMalwarePaths",
                    "name",
                    "onlyNoneRootUsers",
                    "packagesBlackLists",
                    "packagesBlackListEnabled",
                    "packagesWhiteLists",
                    "packagesWhiteListEnabled",
                    "partialResultsImageFail",
                    "readOnly",
                    "registries",
                    "registry",
                    "requiredLabels",
                    "requiredLabelsEnabled",
                    "scanNfsMounts",
                    "scanSensitiveData",
                    "scapEnabled",
                    "scapFiles",
                    "scopes",
                    "trustedBaseImages",
                    "trustedBaseImagesEnabled",
                    "whitelistedLicenses",
                    "whitelistedLicensesEnabled"
                ]
            }
        },
        "aquasec:index/getFunctionRuntimePolicy:getFunctionRuntimePolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getFunctionRuntimePolicy.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the container runtime policy\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFunctionRuntimePolicy.\n",
                "properties": {
                    "applicationScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates the application scope of the service.\n"
                    },
                    "author": {
                        "type": "string",
                        "description": "Username of the account that created the service.\n"
                    },
                    "blockMaliciousExecutables": {
                        "type": "boolean",
                        "description": "If true, prevent creation of malicious executables in functions during their runtime post invocation.\n"
                    },
                    "blockedExecutables": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of executables that are prevented from running in containers.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the container runtime policy\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates if the runtime policy is enabled or not.\n"
                    },
                    "enforce": {
                        "type": "boolean",
                        "description": "Indicates that policy should effect container execution (not just for audit).\n"
                    },
                    "honeypotAccessKey": {
                        "type": "string",
                        "description": "Honeypot User ID (Access Key)\n"
                    },
                    "honeypotApplyOns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of options to apply the honeypot on (Environment Vairable, Layer, File)\n"
                    },
                    "honeypotSecretKey": {
                        "type": "string",
                        "description": "Honeypot User Password (Secret Key)\n"
                    },
                    "honeypotServerlessAppName": {
                        "type": "string",
                        "description": "Serverless application name\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the container runtime policy\n"
                    },
                    "scopeExpression": {
                        "type": "string",
                        "description": "Logical expression of how to compute the dependency of the scope variables.\n"
                    },
                    "scopeVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getFunctionRuntimePolicyScopeVariable:getFunctionRuntimePolicyScopeVariable"
                        },
                        "description": "List of scope attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "applicationScopes",
                    "author",
                    "blockMaliciousExecutables",
                    "blockedExecutables",
                    "description",
                    "enabled",
                    "enforce",
                    "honeypotAccessKey",
                    "honeypotApplyOns",
                    "honeypotSecretKey",
                    "honeypotServerlessAppName",
                    "name",
                    "scopeExpression",
                    "scopeVariables",
                    "id"
                ]
            }
        },
        "aquasec:index/getGateways:getGateways": {
            "description": "The data source `aquasec.getGateways` provides a method to query all gateways within the Aqua\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aquasec from \"@pulumi/aquasec\";\n\nconst testgateway = aquasec.getGateways({});\nexport const gatewayData = testgateway;\nexport const gatewayName = testgateway.then(testgateway =\u003e testgateway.gateways?[0]?.id);\nexport const gatewayStatus = testgateway.then(testgateway =\u003e testgateway.gateways?[0]?.status);\nexport const gatewayDescription = testgateway.then(testgateway =\u003e testgateway.gateways?[0]?.description);\nexport const gatewayVersion = testgateway.then(testgateway =\u003e testgateway.gateways?[0]?.version);\nexport const gatewayHostname = testgateway.then(testgateway =\u003e testgateway.gateways?[0]?.hostname);\nexport const gatewayGrpcAddress = testgateway.then(testgateway =\u003e testgateway.gateways?[0]?.grpcAddress);\n```\n```python\nimport pulumi\nimport pulumi_aquasec as aquasec\n\ntestgateway = aquasec.get_gateways()\npulumi.export(\"gatewayData\", testgateway)\npulumi.export(\"gatewayName\", testgateway.gateways[0].id)\npulumi.export(\"gatewayStatus\", testgateway.gateways[0].status)\npulumi.export(\"gatewayDescription\", testgateway.gateways[0].description)\npulumi.export(\"gatewayVersion\", testgateway.gateways[0].version)\npulumi.export(\"gatewayHostname\", testgateway.gateways[0].hostname)\npulumi.export(\"gatewayGrpcAddress\", testgateway.gateways[0].grpc_address)\n```\n```csharp\nusing Pulumi;\nusing Aquasec = Pulumi.Aquasec;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var testgateway = Output.Create(Aquasec.GetGateways.InvokeAsync());\n        this.GatewayData = testgateway;\n        this.GatewayName = testgateway.Apply(testgateway =\u003e testgateway.Gateways?[0]?.Id);\n        this.GatewayStatus = testgateway.Apply(testgateway =\u003e testgateway.Gateways?[0]?.Status);\n        this.GatewayDescription = testgateway.Apply(testgateway =\u003e testgateway.Gateways?[0]?.Description);\n        this.GatewayVersion = testgateway.Apply(testgateway =\u003e testgateway.Gateways?[0]?.Version);\n        this.GatewayHostname = testgateway.Apply(testgateway =\u003e testgateway.Gateways?[0]?.Hostname);\n        this.GatewayGrpcAddress = testgateway.Apply(testgateway =\u003e testgateway.Gateways?[0]?.GrpcAddress);\n    }\n\n    [Output(\"gatewayData\")]\n    public Output\u003cstring\u003e GatewayData { get; set; }\n    [Output(\"gatewayName\")]\n    public Output\u003cstring\u003e GatewayName { get; set; }\n    [Output(\"gatewayStatus\")]\n    public Output\u003cstring\u003e GatewayStatus { get; set; }\n    [Output(\"gatewayDescription\")]\n    public Output\u003cstring\u003e GatewayDescription { get; set; }\n    [Output(\"gatewayVersion\")]\n    public Output\u003cstring\u003e GatewayVersion { get; set; }\n    [Output(\"gatewayHostname\")]\n    public Output\u003cstring\u003e GatewayHostname { get; set; }\n    [Output(\"gatewayGrpcAddress\")]\n    public Output\u003cstring\u003e GatewayGrpcAddress { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aquasec/sdk/go/aquasec\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestgateway, err := aquasec.GetGateways(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"gatewayData\", testgateway)\n\t\tctx.Export(\"gatewayName\", testgateway.Gateways[0].Id)\n\t\tctx.Export(\"gatewayStatus\", testgateway.Gateways[0].Status)\n\t\tctx.Export(\"gatewayDescription\", testgateway.Gateways[0].Description)\n\t\tctx.Export(\"gatewayVersion\", testgateway.Gateways[0].Version)\n\t\tctx.Export(\"gatewayHostname\", testgateway.Gateways[0].Hostname)\n\t\tctx.Export(\"gatewayGrpcAddress\", testgateway.Gateways[0].GrpcAddress)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getGateways.\n",
                "properties": {
                    "gateways": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getGatewaysGateway:getGatewaysGateway"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "gateways",
                    "id"
                ]
            }
        },
        "aquasec:index/getGroups:getGroups": {
            "description": "The data source `aquasec.getGroups` provides a method to query all groups within the Aqua CSPMgroup database. The fields returned from this query are detailed in the Schema section below.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aquasec from \"@pulumi/aquasec\";\n\nconst groups = aquasec.getGroups({});\nexport const firstGroupName = groups.then(groups =\u003e groups.groups?[0]?.name);\n```\n```python\nimport pulumi\nimport pulumi_aquasec as aquasec\n\ngroups = aquasec.get_groups()\npulumi.export(\"firstGroupName\", groups.groups[0].name)\n```\n```csharp\nusing Pulumi;\nusing Aquasec = Pulumi.Aquasec;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var groups = Output.Create(Aquasec.GetGroups.InvokeAsync());\n        this.FirstGroupName = groups.Apply(groups =\u003e groups.Groups?[0]?.Name);\n    }\n\n    [Output(\"firstGroupName\")]\n    public Output\u003cstring\u003e FirstGroupName { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aquasec/sdk/go/aquasec\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tgroups, err := aquasec.GetGroups(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"firstGroupName\", groups.Groups[0].Name)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getGroups.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getGroupsGroup:getGroupsGroup"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "groups",
                    "id"
                ]
            }
        },
        "aquasec:index/getHostAssurancePolicy:getHostAssurancePolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getHostAssurancePolicy.\n",
                "properties": {
                    "maximumScoreExcludeNoFix": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getHostAssurancePolicy.\n",
                "properties": {
                    "allowedImages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "applicationScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assuranceType": {
                        "type": "string"
                    },
                    "auditOnFailure": {
                        "type": "boolean"
                    },
                    "author": {
                        "type": "string"
                    },
                    "autoScanConfigured": {
                        "type": "boolean"
                    },
                    "autoScanEnabled": {
                        "type": "boolean"
                    },
                    "autoScanTimes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getHostAssurancePolicyAutoScanTime:getHostAssurancePolicyAutoScanTime"
                        }
                    },
                    "blacklistPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "blacklistPermissionsEnabled": {
                        "type": "boolean"
                    },
                    "blacklistedLicenses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "blacklistedLicensesEnabled": {
                        "type": "boolean"
                    },
                    "blockFailed": {
                        "type": "boolean"
                    },
                    "controlExcludeNoFix": {
                        "type": "boolean"
                    },
                    "customChecks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getHostAssurancePolicyCustomCheck:getHostAssurancePolicyCustomCheck"
                        }
                    },
                    "customChecksEnabled": {
                        "type": "boolean"
                    },
                    "customSeverityEnabled": {
                        "type": "boolean"
                    },
                    "cvesBlackListEnabled": {
                        "type": "boolean"
                    },
                    "cvesBlackLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cvesWhiteListEnabled": {
                        "type": "boolean"
                    },
                    "cvesWhiteLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cvssSeverity": {
                        "type": "string"
                    },
                    "cvssSeverityEnabled": {
                        "type": "boolean"
                    },
                    "cvssSeverityExcludeNoFix": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "disallowMalware": {
                        "type": "boolean"
                    },
                    "dockerCisEnabled": {
                        "type": "boolean"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "dtaEnabled": {
                        "type": "boolean"
                    },
                    "dtaSeverity": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enforce": {
                        "type": "boolean"
                    },
                    "enforceAfterDays": {
                        "type": "integer"
                    },
                    "enforceExcessivePermissions": {
                        "type": "boolean"
                    },
                    "exceptionalMonitoredMalwarePaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "failCicd": {
                        "type": "boolean"
                    },
                    "forbiddenLabels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getHostAssurancePolicyForbiddenLabel:getHostAssurancePolicyForbiddenLabel"
                        }
                    },
                    "forbiddenLabelsEnabled": {
                        "type": "boolean"
                    },
                    "forceMicroenforcer": {
                        "type": "boolean"
                    },
                    "functionIntegrityEnabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "ignoreRecentlyPublishedVln": {
                        "type": "boolean"
                    },
                    "ignoreRecentlyPublishedVlnPeriod": {
                        "type": "integer"
                    },
                    "ignoreRiskResourcesEnabled": {
                        "type": "boolean"
                    },
                    "ignoredRiskResources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "kubeCisEnabled": {
                        "type": "boolean"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "malwareAction": {
                        "type": "string"
                    },
                    "maximumScore": {
                        "type": "number"
                    },
                    "maximumScoreEnabled": {
                        "type": "boolean"
                    },
                    "maximumScoreExcludeNoFix": {
                        "type": "boolean"
                    },
                    "monitoredMalwarePaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "onlyNoneRootUsers": {
                        "type": "boolean"
                    },
                    "packagesBlackListEnabled": {
                        "type": "boolean"
                    },
                    "packagesBlackLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getHostAssurancePolicyPackagesBlackList:getHostAssurancePolicyPackagesBlackList"
                        }
                    },
                    "packagesWhiteListEnabled": {
                        "type": "boolean"
                    },
                    "packagesWhiteLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getHostAssurancePolicyPackagesWhiteList:getHostAssurancePolicyPackagesWhiteList"
                        }
                    },
                    "partialResultsImageFail": {
                        "type": "boolean"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "registries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "registry": {
                        "type": "string"
                    },
                    "requiredLabels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getHostAssurancePolicyRequiredLabel:getHostAssurancePolicyRequiredLabel"
                        }
                    },
                    "requiredLabelsEnabled": {
                        "type": "boolean"
                    },
                    "scanNfsMounts": {
                        "type": "boolean"
                    },
                    "scanSensitiveData": {
                        "type": "boolean"
                    },
                    "scapEnabled": {
                        "type": "boolean"
                    },
                    "scapFiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getHostAssurancePolicyScope:getHostAssurancePolicyScope"
                        }
                    },
                    "trustedBaseImages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getHostAssurancePolicyTrustedBaseImage:getHostAssurancePolicyTrustedBaseImage"
                        }
                    },
                    "trustedBaseImagesEnabled": {
                        "type": "boolean"
                    },
                    "whitelistedLicenses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "whitelistedLicensesEnabled": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "allowedImages",
                    "applicationScopes",
                    "assuranceType",
                    "auditOnFailure",
                    "author",
                    "autoScanConfigured",
                    "autoScanEnabled",
                    "autoScanTimes",
                    "blacklistPermissions",
                    "blacklistPermissionsEnabled",
                    "blacklistedLicenses",
                    "blacklistedLicensesEnabled",
                    "blockFailed",
                    "controlExcludeNoFix",
                    "customChecks",
                    "customChecksEnabled",
                    "customSeverityEnabled",
                    "cvesBlackLists",
                    "cvesBlackListEnabled",
                    "cvesWhiteLists",
                    "cvesWhiteListEnabled",
                    "cvssSeverity",
                    "cvssSeverityEnabled",
                    "cvssSeverityExcludeNoFix",
                    "description",
                    "disallowMalware",
                    "dockerCisEnabled",
                    "domain",
                    "domainName",
                    "dtaEnabled",
                    "dtaSeverity",
                    "enabled",
                    "enforce",
                    "enforceAfterDays",
                    "enforceExcessivePermissions",
                    "exceptionalMonitoredMalwarePaths",
                    "failCicd",
                    "forbiddenLabels",
                    "forbiddenLabelsEnabled",
                    "forceMicroenforcer",
                    "functionIntegrityEnabled",
                    "id",
                    "ignoreRecentlyPublishedVln",
                    "ignoreRecentlyPublishedVlnPeriod",
                    "ignoreRiskResourcesEnabled",
                    "ignoredRiskResources",
                    "images",
                    "kubeCisEnabled",
                    "labels",
                    "malwareAction",
                    "maximumScore",
                    "maximumScoreEnabled",
                    "monitoredMalwarePaths",
                    "name",
                    "onlyNoneRootUsers",
                    "packagesBlackLists",
                    "packagesBlackListEnabled",
                    "packagesWhiteLists",
                    "packagesWhiteListEnabled",
                    "partialResultsImageFail",
                    "readOnly",
                    "registries",
                    "registry",
                    "requiredLabels",
                    "requiredLabelsEnabled",
                    "scanNfsMounts",
                    "scanSensitiveData",
                    "scapEnabled",
                    "scapFiles",
                    "scopes",
                    "trustedBaseImages",
                    "trustedBaseImagesEnabled",
                    "whitelistedLicenses",
                    "whitelistedLicensesEnabled"
                ]
            }
        },
        "aquasec:index/getHostRuntimePolicy:getHostRuntimePolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getHostRuntimePolicy.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the host runtime policy\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getHostRuntimePolicy.\n",
                "properties": {
                    "applicationScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates the application scope of the service.\n"
                    },
                    "auditAllOsUserActivity": {
                        "type": "boolean",
                        "description": "If true, all process activity will be audited.\n"
                    },
                    "auditFullCommandArguments": {
                        "type": "boolean",
                        "description": "If true, full command arguments will be audited.\n"
                    },
                    "author": {
                        "type": "string",
                        "description": "Username of the account that created the service.\n"
                    },
                    "blockedFiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of files that are prevented from being read, modified and executed in the containers.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the host runtime policy\n"
                    },
                    "enableIpReputationSecurity": {
                        "type": "boolean",
                        "description": "If true, detect and prevent communication from containers to IP addresses known to have a bad reputation.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates if the runtime policy is enabled or not.\n"
                    },
                    "enforce": {
                        "type": "boolean",
                        "description": "Indicates that policy should effect container execution (not just for audit).\n"
                    },
                    "enforceAfterDays": {
                        "type": "integer",
                        "description": "Indicates the number of days after which the runtime policy will be changed to enforce mode.\n"
                    },
                    "fileIntegrityMonitorings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getHostRuntimePolicyFileIntegrityMonitoring:getHostRuntimePolicyFileIntegrityMonitoring"
                        },
                        "description": "Configuration for file integrity monitoring.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "monitorSystemTimeChanges": {
                        "type": "boolean",
                        "description": "If true, system time changes will be monitored.\n"
                    },
                    "monitorWindowsServices": {
                        "type": "boolean",
                        "description": "If true, windows service operations will be monitored.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the host runtime policy\n"
                    },
                    "osGroupsAlloweds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OS (Linux or Windows) groups that are allowed to authenticate to the host, and block authentication requests from all others. Groups can be either Linux groups or Windows AD groups.\n"
                    },
                    "osGroupsBlockeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OS (Linux or Windows) groups that are not allowed to authenticate to the host, and block authentication requests from all others. Groups can be either Linux groups or Windows AD groups.\n"
                    },
                    "osUsersAlloweds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OS (Linux or Windows) users that are allowed to authenticate to the host, and block authentication requests from all others.\n"
                    },
                    "osUsersBlockeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OS (Linux or Windows) users that are not allowed to authenticate to the host, and block authentication requests from all others.\n"
                    },
                    "scopeExpression": {
                        "type": "string",
                        "description": "Logical expression of how to compute the dependency of the scope variables.\n"
                    },
                    "scopeVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getHostRuntimePolicyScopeVariable:getHostRuntimePolicyScopeVariable"
                        },
                        "description": "List of scope attributes.\n"
                    },
                    "windowsRegistryMonitorings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getHostRuntimePolicyWindowsRegistryMonitoring:getHostRuntimePolicyWindowsRegistryMonitoring"
                        },
                        "description": "Configuration for windows registry monitoring.\n"
                    },
                    "windowsRegistryProtections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getHostRuntimePolicyWindowsRegistryProtection:getHostRuntimePolicyWindowsRegistryProtection"
                        },
                        "description": "Configuration for windows registry protection.\n"
                    }
                },
                "type": "object",
                "required": [
                    "applicationScopes",
                    "auditAllOsUserActivity",
                    "auditFullCommandArguments",
                    "author",
                    "blockedFiles",
                    "description",
                    "enableIpReputationSecurity",
                    "enabled",
                    "enforce",
                    "enforceAfterDays",
                    "fileIntegrityMonitorings",
                    "monitorSystemTimeChanges",
                    "monitorWindowsServices",
                    "name",
                    "osGroupsAlloweds",
                    "osGroupsBlockeds",
                    "osUsersAlloweds",
                    "osUsersBlockeds",
                    "scopeExpression",
                    "scopeVariables",
                    "windowsRegistryMonitorings",
                    "windowsRegistryProtections",
                    "id"
                ]
            }
        },
        "aquasec:index/getImage:getImage": {
            "inputs": {
                "description": "A collection of arguments for invoking getImage.\n",
                "properties": {
                    "registry": {
                        "type": "string",
                        "description": "The name of the registry where the image is stored.\n"
                    },
                    "repository": {
                        "type": "string",
                        "description": "The name of the image's repository.\n"
                    },
                    "tag": {
                        "type": "string",
                        "description": "The tag of the image.\n"
                    }
                },
                "type": "object",
                "required": [
                    "registry",
                    "repository",
                    "tag"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getImage.\n",
                "properties": {
                    "architecture": {
                        "type": "string",
                        "description": "The image architecture.\n"
                    },
                    "assuranceChecksPerformeds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getImageAssuranceChecksPerformed:getImageAssuranceChecksPerformed"
                        },
                        "description": "The list of image assurance checks performed on the image.\n"
                    },
                    "author": {
                        "type": "string",
                        "description": "The name of the user who registered the image.\n"
                    },
                    "blacklisted": {
                        "type": "boolean",
                        "description": "Whether the image is blacklisted.\n"
                    },
                    "comment": {
                        "type": "string",
                        "description": "The image creation comment.\n"
                    },
                    "created": {
                        "type": "string",
                        "description": "The date and time when the image was registered.\n"
                    },
                    "criticalVulnerabilities": {
                        "type": "integer",
                        "description": "Number of critical severity vulnerabilities detected in the image.\n"
                    },
                    "defaultUser": {
                        "type": "string",
                        "description": "The default user of the image.\n"
                    },
                    "digest": {
                        "type": "string",
                        "description": "The content digest of the image.\n"
                    },
                    "disallowed": {
                        "type": "boolean",
                        "description": "Whether the image is disallowed (non-compliant).\n"
                    },
                    "disallowedByAssuranceChecks": {
                        "type": "boolean",
                        "description": "Whether the image was disallowed because of Image Assurance Policies.\n"
                    },
                    "dockerId": {
                        "type": "string",
                        "description": "The Docker image ID.\n"
                    },
                    "dockerLabels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Docker labels of the image.\n"
                    },
                    "dockerVersion": {
                        "type": "string",
                        "description": "The Docker version used when building the image.\n"
                    },
                    "dtaSeverityScore": {
                        "type": "string",
                        "description": "DTA severity score.\n"
                    },
                    "dtaSkipped": {
                        "type": "boolean",
                        "description": "If DTA was skipped.\n"
                    },
                    "dtaSkippedReason": {
                        "type": "string",
                        "description": "The reason why DTA was skipped.\n"
                    },
                    "environmentVariables": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Environment variables in the image.\n"
                    },
                    "highVulnerabilities": {
                        "type": "integer",
                        "description": "Number of high severity vulnerabilities detected in the image.\n"
                    },
                    "histories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getImageHistory:getImageHistory"
                        },
                        "description": "The Docker history of the image.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "imageSize": {
                        "type": "integer",
                        "description": "The size of the image in bytes.\n"
                    },
                    "imageType": {
                        "type": "string",
                        "description": "The type of the image.\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Aqua labels of the image.\n"
                    },
                    "lowVulnerabilities": {
                        "type": "integer",
                        "description": "Number of low severity vulnerabilities detected in the image.\n"
                    },
                    "malware": {
                        "type": "integer",
                        "description": "Number of malware found on the image.\n"
                    },
                    "mediumVulnerabilities": {
                        "type": "integer",
                        "description": "Number of medium severity vulnerabilities detected in the image.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the image.\n"
                    },
                    "negligibleVulnerabilities": {
                        "type": "integer",
                        "description": "Number of negligible severity vulnerabilities detected in the image.\n"
                    },
                    "newerImageExists": {
                        "type": "boolean",
                        "description": "Whether a new version of the image is available in the registry but is not scanned and registered yet.\n"
                    },
                    "os": {
                        "type": "string",
                        "description": "The operating system detected in the image\n"
                    },
                    "osVersion": {
                        "type": "string",
                        "description": "The version of the OS detected in the image.\n"
                    },
                    "parent": {
                        "type": "string",
                        "description": "The ID of the parent image.\n"
                    },
                    "partialResults": {
                        "type": "boolean",
                        "description": "Whether the image could only be partially scanned.\n"
                    },
                    "pendingDisallowed": {
                        "type": "boolean",
                        "description": "Whether the image is non-compliant, but is pending this status due to running containers.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "Permission of the image.\n"
                    },
                    "permissionAuthor": {
                        "type": "string",
                        "description": "The name of the user who last modified the image permissions.\n"
                    },
                    "permissionComment": {
                        "type": "string",
                        "description": "The comment provided when the image permissions were last modified\n"
                    },
                    "registry": {
                        "type": "string",
                        "description": "The name of the registry where the image is stored.\n"
                    },
                    "registryType": {
                        "type": "string",
                        "description": "Type of the registry.\n"
                    },
                    "repoDigests": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The repository digests.\n"
                    },
                    "repository": {
                        "type": "string",
                        "description": "The name of the image's repository.\n"
                    },
                    "scanDate": {
                        "type": "string",
                        "description": "The date and time when the image was last scanned.\n"
                    },
                    "scanError": {
                        "type": "string",
                        "description": "If the image scan failed, the failure message.\n"
                    },
                    "scanStatus": {
                        "type": "string",
                        "description": "The scan status of the image (either 'pending', 'in*progress', 'finished', 'failed' or 'not*started').\n"
                    },
                    "sensitiveData": {
                        "type": "integer",
                        "description": "Number of sensitive data detected in the image.\n"
                    },
                    "tag": {
                        "type": "string",
                        "description": "The tag of the image.\n"
                    },
                    "totalVulnerabilities": {
                        "type": "integer",
                        "description": "The total number of vulnerabilities detected in the image.\n"
                    },
                    "virtualSize": {
                        "type": "integer",
                        "description": "The virtual size of the image.\n"
                    },
                    "vulnerabilities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getImageVulnerability:getImageVulnerability"
                        },
                        "description": "A list of all the vulnerabilities found in the image\n"
                    },
                    "whitelisted": {
                        "type": "boolean",
                        "description": "Whether the image is whitelisted.\n"
                    }
                },
                "type": "object",
                "required": [
                    "architecture",
                    "assuranceChecksPerformeds",
                    "author",
                    "blacklisted",
                    "comment",
                    "created",
                    "criticalVulnerabilities",
                    "defaultUser",
                    "digest",
                    "disallowed",
                    "disallowedByAssuranceChecks",
                    "dockerId",
                    "dockerLabels",
                    "dockerVersion",
                    "dtaSeverityScore",
                    "dtaSkipped",
                    "dtaSkippedReason",
                    "environmentVariables",
                    "highVulnerabilities",
                    "histories",
                    "imageSize",
                    "imageType",
                    "labels",
                    "lowVulnerabilities",
                    "malware",
                    "mediumVulnerabilities",
                    "name",
                    "negligibleVulnerabilities",
                    "newerImageExists",
                    "os",
                    "osVersion",
                    "parent",
                    "partialResults",
                    "pendingDisallowed",
                    "permission",
                    "permissionAuthor",
                    "permissionComment",
                    "registry",
                    "registryType",
                    "repoDigests",
                    "repository",
                    "scanDate",
                    "scanError",
                    "scanStatus",
                    "sensitiveData",
                    "tag",
                    "totalVulnerabilities",
                    "virtualSize",
                    "vulnerabilities",
                    "whitelisted",
                    "id"
                ]
            }
        },
        "aquasec:index/getImageAssurancePolicy:getImageAssurancePolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getImageAssurancePolicy.\n",
                "properties": {
                    "maximumScoreExcludeNoFix": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getImageAssurancePolicy.\n",
                "properties": {
                    "allowedImages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "applicationScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assuranceType": {
                        "type": "string"
                    },
                    "auditOnFailure": {
                        "type": "boolean"
                    },
                    "author": {
                        "type": "string"
                    },
                    "autoScanConfigured": {
                        "type": "boolean"
                    },
                    "autoScanEnabled": {
                        "type": "boolean"
                    },
                    "autoScanTimes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getImageAssurancePolicyAutoScanTime:getImageAssurancePolicyAutoScanTime"
                        }
                    },
                    "blacklistPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "blacklistPermissionsEnabled": {
                        "type": "boolean"
                    },
                    "blacklistedLicenses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "blacklistedLicensesEnabled": {
                        "type": "boolean"
                    },
                    "blockFailed": {
                        "type": "boolean"
                    },
                    "controlExcludeNoFix": {
                        "type": "boolean"
                    },
                    "customChecks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getImageAssurancePolicyCustomCheck:getImageAssurancePolicyCustomCheck"
                        }
                    },
                    "customChecksEnabled": {
                        "type": "boolean"
                    },
                    "customSeverityEnabled": {
                        "type": "boolean"
                    },
                    "cvesBlackListEnabled": {
                        "type": "boolean"
                    },
                    "cvesBlackLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cvesWhiteListEnabled": {
                        "type": "boolean"
                    },
                    "cvesWhiteLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cvssSeverity": {
                        "type": "string"
                    },
                    "cvssSeverityEnabled": {
                        "type": "boolean"
                    },
                    "cvssSeverityExcludeNoFix": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "disallowMalware": {
                        "type": "boolean"
                    },
                    "dockerCisEnabled": {
                        "type": "boolean"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "dtaEnabled": {
                        "type": "boolean"
                    },
                    "dtaSeverity": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enforce": {
                        "type": "boolean"
                    },
                    "enforceAfterDays": {
                        "type": "integer"
                    },
                    "enforceExcessivePermissions": {
                        "type": "boolean"
                    },
                    "exceptionalMonitoredMalwarePaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "failCicd": {
                        "type": "boolean"
                    },
                    "forbiddenLabels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getImageAssurancePolicyForbiddenLabel:getImageAssurancePolicyForbiddenLabel"
                        }
                    },
                    "forbiddenLabelsEnabled": {
                        "type": "boolean"
                    },
                    "forceMicroenforcer": {
                        "type": "boolean"
                    },
                    "functionIntegrityEnabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "ignoreRecentlyPublishedVln": {
                        "type": "boolean"
                    },
                    "ignoreRecentlyPublishedVlnPeriod": {
                        "type": "integer"
                    },
                    "ignoreRiskResourcesEnabled": {
                        "type": "boolean"
                    },
                    "ignoredRiskResources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "kubeCisEnabled": {
                        "type": "boolean"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "malwareAction": {
                        "type": "string"
                    },
                    "maximumScore": {
                        "type": "number"
                    },
                    "maximumScoreEnabled": {
                        "type": "boolean"
                    },
                    "maximumScoreExcludeNoFix": {
                        "type": "boolean"
                    },
                    "monitoredMalwarePaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "onlyNoneRootUsers": {
                        "type": "boolean"
                    },
                    "packagesBlackListEnabled": {
                        "type": "boolean"
                    },
                    "packagesBlackLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getImageAssurancePolicyPackagesBlackList:getImageAssurancePolicyPackagesBlackList"
                        }
                    },
                    "packagesWhiteListEnabled": {
                        "type": "boolean"
                    },
                    "packagesWhiteLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getImageAssurancePolicyPackagesWhiteList:getImageAssurancePolicyPackagesWhiteList"
                        }
                    },
                    "partialResultsImageFail": {
                        "type": "boolean"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "registries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "registry": {
                        "type": "string"
                    },
                    "requiredLabels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getImageAssurancePolicyRequiredLabel:getImageAssurancePolicyRequiredLabel"
                        }
                    },
                    "requiredLabelsEnabled": {
                        "type": "boolean"
                    },
                    "scanNfsMounts": {
                        "type": "boolean"
                    },
                    "scanSensitiveData": {
                        "type": "boolean"
                    },
                    "scapEnabled": {
                        "type": "boolean"
                    },
                    "scapFiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getImageAssurancePolicyScope:getImageAssurancePolicyScope"
                        }
                    },
                    "trustedBaseImages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getImageAssurancePolicyTrustedBaseImage:getImageAssurancePolicyTrustedBaseImage"
                        }
                    },
                    "trustedBaseImagesEnabled": {
                        "type": "boolean"
                    },
                    "whitelistedLicenses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "whitelistedLicensesEnabled": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "allowedImages",
                    "applicationScopes",
                    "assuranceType",
                    "auditOnFailure",
                    "author",
                    "autoScanConfigured",
                    "autoScanEnabled",
                    "autoScanTimes",
                    "blacklistPermissions",
                    "blacklistPermissionsEnabled",
                    "blacklistedLicenses",
                    "blacklistedLicensesEnabled",
                    "blockFailed",
                    "controlExcludeNoFix",
                    "customChecks",
                    "customChecksEnabled",
                    "customSeverityEnabled",
                    "cvesBlackLists",
                    "cvesBlackListEnabled",
                    "cvesWhiteLists",
                    "cvesWhiteListEnabled",
                    "cvssSeverity",
                    "cvssSeverityEnabled",
                    "cvssSeverityExcludeNoFix",
                    "description",
                    "disallowMalware",
                    "dockerCisEnabled",
                    "domain",
                    "domainName",
                    "dtaEnabled",
                    "dtaSeverity",
                    "enabled",
                    "enforce",
                    "enforceAfterDays",
                    "enforceExcessivePermissions",
                    "exceptionalMonitoredMalwarePaths",
                    "failCicd",
                    "forbiddenLabels",
                    "forbiddenLabelsEnabled",
                    "forceMicroenforcer",
                    "functionIntegrityEnabled",
                    "id",
                    "ignoreRecentlyPublishedVln",
                    "ignoreRecentlyPublishedVlnPeriod",
                    "ignoreRiskResourcesEnabled",
                    "ignoredRiskResources",
                    "images",
                    "kubeCisEnabled",
                    "labels",
                    "malwareAction",
                    "maximumScore",
                    "maximumScoreEnabled",
                    "monitoredMalwarePaths",
                    "name",
                    "onlyNoneRootUsers",
                    "packagesBlackLists",
                    "packagesBlackListEnabled",
                    "packagesWhiteLists",
                    "packagesWhiteListEnabled",
                    "partialResultsImageFail",
                    "readOnly",
                    "registries",
                    "registry",
                    "requiredLabels",
                    "requiredLabelsEnabled",
                    "scanNfsMounts",
                    "scanSensitiveData",
                    "scapEnabled",
                    "scapFiles",
                    "scopes",
                    "trustedBaseImages",
                    "trustedBaseImagesEnabled",
                    "whitelistedLicenses",
                    "whitelistedLicensesEnabled"
                ]
            }
        },
        "aquasec:index/getIntegrationRegistries:getIntegrationRegistries": {
            "inputs": {
                "description": "A collection of arguments for invoking getIntegrationRegistries.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIntegrationRegistries.\n",
                "properties": {
                    "autoPull": {
                        "type": "boolean"
                    },
                    "autoPullMax": {
                        "type": "integer"
                    },
                    "autoPullTime": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "prefixes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "autoPull",
                    "autoPullMax",
                    "autoPullTime",
                    "name",
                    "password",
                    "prefixes",
                    "type",
                    "url",
                    "username",
                    "id"
                ]
            }
        },
        "aquasec:index/getPermissionsSets:getPermissionsSets": {
            "description": "The data source `aquasec.PermissionsSets` provides a method to query all permissions within the Aqua CSPMThe fields returned from this query are detailed in the Schema section below.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aquasec from \"@pulumi/aquasec\";\n\nconst testpermissionsset = aquasec.getPermissionsSets({});\nexport const permissionsSets = testpermissionsset;\nexport const permissionsSetsNames = [testpermissionsset].map(__item =\u003e [__item.then(obj =\u003e obj.permissionsSets)].map(__item =\u003e __item?.name));\n```\n```python\nimport pulumi\nimport pulumi_aquasec as aquasec\n\ntestpermissionsset = aquasec.get_permissions_sets()\npulumi.export(\"permissionsSets\", testpermissionsset)\npulumi.export(\"permissionsSetsNames\", [[__item.name for __item in [__item.permissions_sets]] for __item in [testpermissionsset]])\n```\n```csharp\nusing System.Linq;\nusing Pulumi;\nusing Aquasec = Pulumi.Aquasec;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var testpermissionsset = Output.Create(Aquasec.GetPermissionsSets.InvokeAsync());\n        this.PermissionsSets = testpermissionsset;\n        this.PermissionsSetsNames = \n        {\n            testpermissionsset,\n        }.Select(__item =\u003e \n        {\n            __item.Apply(obj =\u003e obj.PermissionsSets),\n        }.Select(__item =\u003e __item?.Name).ToList()).ToList();\n    }\n\n    [Output(\"permissionsSets\")]\n    public Output\u003cstring\u003e PermissionsSets { get; set; }\n    [Output(\"permissionsSetsNames\")]\n    public Output\u003cstring\u003e PermissionsSetsNames { get; set; }\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getPermissionsSets.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "permissionsSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getPermissionsSetsPermissionsSet:getPermissionsSetsPermissionsSet"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "permissionsSets",
                    "id"
                ]
            }
        },
        "aquasec:index/getRoles:getRoles": {
            "description": "The data source `aquasec.getRoles` provides a method to query all roles within the Aqua account managementrole database. The fields returned from this query are detailed in the Schema section below.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aquasec from \"@pulumi/aquasec\";\n\nconst roles = aquasec.getRoles({});\nexport const firstUserName = roles.then(roles =\u003e roles.roles?[0]);\n```\n```python\nimport pulumi\nimport pulumi_aquasec as aquasec\n\nroles = aquasec.get_roles()\npulumi.export(\"firstUserName\", roles.roles[0])\n```\n```csharp\nusing Pulumi;\nusing Aquasec = Pulumi.Aquasec;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var roles = Output.Create(Aquasec.GetRoles.InvokeAsync());\n        this.FirstUserName = roles.Apply(roles =\u003e roles.Roles?[0]);\n    }\n\n    [Output(\"firstUserName\")]\n    public Output\u003cstring\u003e FirstUserName { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aquasec/sdk/go/aquasec\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\troles, err := aquasec.GetRoles(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"firstUserName\", roles.Roles[0])\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getRoles.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getRolesRole:getRolesRole"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "roles",
                    "id"
                ]
            }
        },
        "aquasec:index/getService:getService": {
            "inputs": {
                "description": "A collection of arguments for invoking getService.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the service. It is recommended not to use whitespace characters in the name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getService.\n",
                "properties": {
                    "applicationScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates the application scope of the service.\n"
                    },
                    "author": {
                        "type": "string",
                        "description": "Username of the account that created the service.\n"
                    },
                    "containersCount": {
                        "type": "integer",
                        "description": "The number of containers associated with the service.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A textual description of the service record; maximum 500 characters.\n"
                    },
                    "enforce": {
                        "type": "boolean",
                        "description": "Enforcement status of the service.\n"
                    },
                    "evaluated": {
                        "type": "boolean",
                        "description": "Whether the service has been evaluated for security vulnerabilities.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isRegistered": {
                        "type": "boolean",
                        "description": "Indicates if registered or not.\n"
                    },
                    "lastupdate": {
                        "type": "integer",
                        "description": "Timestamp of the last update in Unix time format.\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Indicates if monitoring is enabled or not\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the service. It is recommended not to use whitespace characters in the name.\n"
                    },
                    "notEvaluatedCount": {
                        "type": "integer",
                        "description": "The number of container that are not evaluated.\n"
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The service's policies; an array of container firewall policy names.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Rules priority, must be between 1-100.\n"
                    },
                    "scopeExpression": {
                        "type": "string",
                        "description": "Logical expression of how to compute the dependency of the scope variables.\n"
                    },
                    "scopeVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getServiceScopeVariable:getServiceScopeVariable"
                        },
                        "description": "List of scope attributes.\n"
                    },
                    "target": {
                        "type": "string",
                        "description": "Type of the workload. container or host.\n"
                    },
                    "unregisteredCount": {
                        "type": "integer",
                        "description": "The number of containers allocated to the service that are not registered.\n"
                    },
                    "vulnerabilitiesHigh": {
                        "type": "integer",
                        "description": "Number of high severity vulnerabilities.\n"
                    },
                    "vulnerabilitiesLow": {
                        "type": "integer",
                        "description": "Number of low severity vulnerabilities.\n"
                    },
                    "vulnerabilitiesMalware": {
                        "type": "integer",
                        "description": "Number of malware.\n"
                    },
                    "vulnerabilitiesMedium": {
                        "type": "integer",
                        "description": "Number of medium severity vulnerabilities.\n"
                    },
                    "vulnerabilitiesNegligible": {
                        "type": "integer",
                        "description": "Number of negligible vulnerabilities.\n"
                    },
                    "vulnerabilitiesScoreAverage": {
                        "type": "integer",
                        "description": "The CVSS average vulnerabilities score.\n"
                    },
                    "vulnerabilitiesSensitive": {
                        "type": "integer",
                        "description": "Number of sensitive vulnerabilities.\n"
                    },
                    "vulnerabilitiesTotal": {
                        "type": "integer",
                        "description": "Total number of vulnerabilities.\n"
                    }
                },
                "type": "object",
                "required": [
                    "applicationScopes",
                    "author",
                    "containersCount",
                    "description",
                    "enforce",
                    "evaluated",
                    "isRegistered",
                    "lastupdate",
                    "monitoring",
                    "name",
                    "notEvaluatedCount",
                    "policies",
                    "priority",
                    "scopeExpression",
                    "scopeVariables",
                    "target",
                    "unregisteredCount",
                    "vulnerabilitiesHigh",
                    "vulnerabilitiesLow",
                    "vulnerabilitiesMalware",
                    "vulnerabilitiesMedium",
                    "vulnerabilitiesNegligible",
                    "vulnerabilitiesScoreAverage",
                    "vulnerabilitiesSensitive",
                    "vulnerabilitiesTotal",
                    "id"
                ]
            }
        },
        "aquasec:index/getUsers:getUsers": {
            "description": "The data source `aquasec.getUsers` provides a method to query all users within the Aqua users database. The fields returned from this query are detailed in the Schema section below.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aquasec from \"@pulumi/aquasec\";\n\nconst users = aquasec.getUsers({});\nexport const firstUserName = users.then(users =\u003e users.users?[0]?.name);\n```\n```python\nimport pulumi\nimport pulumi_aquasec as aquasec\n\nusers = aquasec.get_users()\npulumi.export(\"firstUserName\", users.users[0].name)\n```\n```csharp\nusing Pulumi;\nusing Aquasec = Pulumi.Aquasec;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var users = Output.Create(Aquasec.GetUsers.InvokeAsync());\n        this.FirstUserName = users.Apply(users =\u003e users.Users?[0]?.Name);\n    }\n\n    [Output(\"firstUserName\")]\n    public Output\u003cstring\u003e FirstUserName { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aquasec/sdk/go/aquasec\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tusers, err := aquasec.GetUsers(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"firstUserName\", users.Users[0].Name)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getUsersUser:getUsersUser"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "users",
                    "id"
                ]
            }
        },
        "aquasec:index/getUsersSaas:getUsersSaas": {
            "description": "The data source `aquasec.getUsersSaas` provides a method to query all saas users within the Aqua users management. The fields returned from this query are detailed in the Schema section below.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aquasec from \"@pulumi/aquasec\";\n\nconst users = aquasec.getUsers({});\nexport const firstUserEmail = data.aquasec_users_saas.users.users[0].email;\n```\n```python\nimport pulumi\nimport pulumi_aquasec as aquasec\n\nusers = aquasec.get_users()\npulumi.export(\"firstUserEmail\", data[\"aquasec_users_saas\"][\"users\"][\"users\"][0][\"email\"])\n```\n```csharp\nusing Pulumi;\nusing Aquasec = Pulumi.Aquasec;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var users = Output.Create(Aquasec.GetUsers.InvokeAsync());\n        this.FirstUserEmail = data.Aquasec_users_saas.Users.Users[0].Email;\n    }\n\n    [Output(\"firstUserEmail\")]\n    public Output\u003cstring\u003e FirstUserEmail { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aquasec/sdk/go/aquasec\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aquasec.GetUsers(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"firstUserEmail\", data.Aquasec_users_saas.Users.Users[0].Email)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getUsersSaas.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aquasec:index/getUsersSaasUser:getUsersSaasUser"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "users",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-aquasec/sdk/go/aquasec"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing aquasec cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/aquasecurity/terraform-provider-aquasec)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-aquasec` repo](https://github.com/pulumi/pulumi-aquasec/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`aquasecurity/terraform-provider-aquasec` repo](https://github.com/aquasecurity/terraform-provider-aquasec/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/aquasecurity/terraform-provider-aquasec)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-aquasec` repo](https://github.com/pulumi/pulumi-aquasec/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`aquasecurity/terraform-provider-aquasec` repo](https://github.com/aquasecurity/terraform-provider-aquasec/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}